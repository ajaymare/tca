apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T01:43:10Z"
    generateName: argocd-application-controller-
    labels:
      app.kubernetes.io/name: argocd-application-controller
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: argocd-application-controller-65cf48c6b6
      statefulset.kubernetes.io/pod-name: argocd-application-controller-0
    name: argocd-application-controller-0
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: argocd-application-controller
      uid: dd79a822-8a3e-4067-9386-5ceb34378300
    resourceVersion: "15553834"
    uid: bdb10732-9d05-4fe7-b831-6f6d5ccdf6d1
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-application-controller
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - /usr/local/bin/argocd-application-controller
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
      - name: ARGOCD_CONTROLLER_REPLICAS
        value: "1"
      - name: ARGOCD_RECONCILIATION_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: timeout.reconciliation
            name: argocd-cm
            optional: true
      - name: ARGOCD_HARD_RECONCILIATION_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: timeout.hard.reconciliation
            name: argocd-cm
            optional: true
      - name: ARGOCD_RECONCILIATION_JITTER
        valueFrom:
          configMapKeyRef:
            key: timeout.reconciliation.jitter
            name: argocd-cm
            optional: true
      - name: ARGOCD_REPO_ERROR_GRACE_PERIOD_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.repo.error.grace.period.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER
        valueFrom:
          configMapKeyRef:
            key: repo.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.repo.server.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS
        valueFrom:
          configMapKeyRef:
            key: controller.status.processors
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS
        valueFrom:
          configMapKeyRef:
            key: controller.operation.processors
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: controller.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: controller.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: controller.metrics.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.backoff.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_FACTOR
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.backoff.factor
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_CAP_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.backoff.cap.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_COOLDOWN_SECONDS
        valueFrom:
          configMapKeyRef:
            key: controller.self.heal.backoff.cooldown.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SYNC_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: controller.sync.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: controller.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: controller.repo.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH
        valueFrom:
          configMapKeyRef:
            key: controller.resource.health.persist
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: controller.app.state.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_SERVER
        valueFrom:
          configMapKeyRef:
            key: redis.server
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_COMPRESSION
        valueFrom:
          configMapKeyRef:
            key: redis.compression
            name: argocd-cmd-params-cm
            optional: true
      - name: REDISDB
        valueFrom:
          configMapKeyRef:
            key: redis.db
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: controller.default.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: otlp.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_INSECURE
        valueFrom:
          configMapKeyRef:
            key: otlp.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_HEADERS
        valueFrom:
          configMapKeyRef:
            key: otlp.headers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ATTRS
        valueFrom:
          configMapKeyRef:
            key: otlp.attrs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: application.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_CONTROLLER_SHARDING_ALGORITHM
        valueFrom:
          configMapKeyRef:
            key: controller.sharding.algorithm
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: controller.kubectl.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_MAX
        valueFrom:
          configMapKeyRef:
            key: controller.k8sclient.retry.max
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
        valueFrom:
          configMapKeyRef:
            key: controller.k8sclient.retry.base.backoff
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_CONTROLLER_SERVER_SIDE_DIFF
        valueFrom:
          configMapKeyRef:
            key: controller.diff.server.side
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_IGNORE_NORMALIZER_JQ_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: controller.ignore.normalizer.jq.timeout
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_HYDRATOR_ENABLED
        valueFrom:
          configMapKeyRef:
            key: hydrator.enabled
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_CLUSTER_CACHE_BATCH_EVENTS_PROCESSING
        valueFrom:
          configMapKeyRef:
            key: controller.cluster.cache.batch.events.processing
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_CLUSTER_CACHE_EVENTS_PROCESSING_INTERVAL
        valueFrom:
          configMapKeyRef:
            key: controller.cluster.cache.events.processing.interval
            name: argocd-cmd-params-cm
            optional: true
      - name: KUBECACHEDIR
        value: /tmp/kubecache
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: Always
      name: argocd-application-controller
      ports:
      - containerPort: 8082
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /home/argocd
        name: argocd-home
      - mountPath: /home/argocd/params
        name: argocd-cmd-params-cm
      - mountPath: /tmp
        name: argocd-application-controller-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m279t
        readOnly: true
      workingDir: /home/argocd
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: argocd-application-controller-0
    nodeName: aks-agentpool-28010283-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-application-controller
    serviceAccountName: argocd-application-controller
    subdomain: argocd-application-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: argocd-home
    - emptyDir: {}
      name: argocd-application-controller-tmp
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - configMap:
        defaultMode: 420
        items:
        - key: controller.profile.enabled
          path: profiler.enabled
        name: argocd-cmd-params-cm
        optional: true
      name: argocd-cmd-params-cm
    - name: kube-api-access-m279t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://21379948496f194b2db7ccbf4024e6cba483466c68c25ed5af2ff30ceffe2202
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: argocd-application-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:13Z"
      volumeMounts:
      - mountPath: /app/config/controller/tls
        name: argocd-repo-server-tls
      - mountPath: /home/argocd
        name: argocd-home
      - mountPath: /home/argocd/params
        name: argocd-cmd-params-cm
      - mountPath: /tmp
        name: argocd-application-controller-tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m279t
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.226
    podIPs:
    - ip: 10.244.0.226
    qosClass: BestEffort
    startTime: "2025-06-22T01:43:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T01:43:07Z"
    generateName: argocd-applicationset-controller-67c79fccd-
    labels:
      app.kubernetes.io/name: argocd-applicationset-controller
      pod-template-hash: 67c79fccd
    name: argocd-applicationset-controller-67c79fccd-xzhgq
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-applicationset-controller-67c79fccd
      uid: 13fe87ca-6cac-4cd9-b125-2e32d0c95823
    resourceVersion: "15553582"
    uid: db748bc5-144f-41d1-b845-5c5e620e5514
  spec:
    containers:
    - args:
      - /usr/local/bin/argocd-applicationset-controller
      env:
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.global.preserved.annotations
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.global.preserved.labels
            name: argocd-cmd-params-cm
            optional: true
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.leader.election
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER
        valueFrom:
          configMapKeyRef:
            key: repo.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_POLICY
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.policy
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.policy.override
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.debug
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.dryrun
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_MODULES_ENABLED
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.git.submodule
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.progressive.syncs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.tokenref.strict.mode
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.new.git.file.globbing
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.repo.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.repo.server.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.concurrent.reconciliations.max
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.scm.root.ca.path
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.allowed.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.webhook.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.requeue.after
            name: argocd-cmd-params-cm
            optional: true
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: Always
      name: argocd-applicationset-controller
      ports:
      - containerPort: 7000
        name: webhook
        protocol: TCP
      - containerPort: 8080
        name: metrics
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /tmp
        name: tmp
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8hpg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-applicationset-controller
    serviceAccountName: argocd-applicationset-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - emptyDir: {}
      name: tmp
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: kube-api-access-c8hpg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5666af7464029878ce1a664fecc09f056d72f7bb334fd1dbeac772a24a7868c0
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: argocd-applicationset-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:09Z"
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /tmp
        name: tmp
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c8hpg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.243
    podIPs:
    - ip: 10.244.0.243
    qosClass: BestEffort
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: argocd-dex-server-76686f75bd-
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76686f75bd
    name: argocd-dex-server-76686f75bd-w2b5w
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-dex-server-76686f75bd
      uid: a4874a28-6ef8-4c6f-b980-e41f8c05a86d
    resourceVersion: "15553786"
    uid: faae47f2-d72a-4979-ad13-8b69a1158d4f
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /shared/argocd-dex
      - rundex
      env:
      - name: ARGOCD_DEX_SERVER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: dexserver.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_DEX_SERVER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: dexserver.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_DEX_SERVER_DISABLE_TLS
        valueFrom:
          configMapKeyRef:
            key: dexserver.disable.tls
            name: argocd-cmd-params-cm
            optional: true
      image: ghcr.io/dexidp/dex:v2.41.1
      imagePullPolicy: Always
      name: dex
      ports:
      - containerPort: 5556
        protocol: TCP
      - containerPort: 5557
        protocol: TCP
      - containerPort: 5558
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /tmp
        name: dexconfig
      - mountPath: /tls
        name: argocd-dex-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b9hzp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/cp
      - -n
      - /usr/local/bin/argocd
      - /shared/argocd-dex
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: Always
      name: copyutil
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /tmp
        name: dexconfig
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b9hzp
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-dex-server
    serviceAccountName: argocd-dex-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: static-files
    - emptyDir: {}
      name: dexconfig
    - name: argocd-dex-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-dex-server-tls
    - name: kube-api-access-b9hzp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://41277dd1fe67942523cc887cb3dfd423c17fc6bf0683d446ccaf14c787afd6f0
      image: ghcr.io/dexidp/dex:v2.41.1
      imageID: ghcr.io/dexidp/dex@sha256:bc7cfce7c17f52864e2bb2a4dc1d2f86a41e3019f6d42e81d92a301fad0c8a1d
      lastState: {}
      name: dex
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:16Z"
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /tmp
        name: dexconfig
      - mountPath: /tls
        name: argocd-dex-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b9hzp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://7c0f544416bfacef262209b00d790ada8242fd682e0b84f652b5f3bdbdfe7626
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7c0f544416bfacef262209b00d790ada8242fd682e0b84f652b5f3bdbdfe7626
          exitCode: 0
          finishedAt: "2025-06-22T01:43:14Z"
          reason: Completed
          startedAt: "2025-06-22T01:43:13Z"
      volumeMounts:
      - mountPath: /shared
        name: static-files
      - mountPath: /tmp
        name: dexconfig
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b9hzp
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.37
    podIPs:
    - ip: 10.244.0.37
    qosClass: BestEffort
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: argocd-notifications-controller-588d87b767-
    labels:
      app.kubernetes.io/name: argocd-notifications-controller
      pod-template-hash: 588d87b767
    name: argocd-notifications-controller-588d87b767-6qtsm
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-notifications-controller-588d87b767
      uid: fb19f93f-2dd9-448d-8bb0-ade385fce2c3
    resourceVersion: "15553626"
    uid: d312ccb6-41d0-47c3-b88e-43b86a02b276
  spec:
    containers:
    - args:
      - /usr/local/bin/argocd-notifications
      env:
      - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: application.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.selfservice.enabled
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: notificationscontroller.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 9001
        timeoutSeconds: 1
      name: argocd-notifications-controller
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2gcrv
        readOnly: true
      workingDir: /app
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: argocd-notifications-controller
    serviceAccountName: argocd-notifications-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: kube-api-access-2gcrv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1bce45c6f64bda59f6591ea03c7e109dea5771c9bf93b3326d64b7c29f827e20
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: argocd-notifications-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:10Z"
      volumeMounts:
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2gcrv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.4
    podIPs:
    - ip: 10.244.0.4
    qosClass: BestEffort
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T01:43:07Z"
    generateName: argocd-redis-59c6f8b4b5-
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 59c6f8b4b5
    name: argocd-redis-59c6f8b4b5-v4wx7
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-redis-59c6f8b4b5
      uid: 78da815b-ae8a-43d6-ad33-74193085b478
    resourceVersion: "15553712"
    uid: c908ce3d-2769-42ee-95f2-cc139ee44ef0
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-redis
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - --save
      - ""
      - --appendonly
      - "no"
      - --requirepass $(REDIS_PASSWORD)
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
      image: redis:7.2.7-alpine
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phf9c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argocd
      - admin
      - redis-initial-password
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: IfNotPresent
      name: secret-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phf9c
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: argocd-redis
    serviceAccountName: argocd-redis
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-phf9c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c1f60697f33afb678e282405326a1e79af51a025bc46f0d3a583d6af7bb231ac
      image: docker.io/library/redis:7.2.7-alpine
      imageID: docker.io/library/redis@sha256:ddd16a9b1575a774c7e62956be8daa1de5b32cfb5c25b7a216aefed8e0919f9b
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phf9c
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://25f2416133b972e10ca0dd8ee2ea0c632483db70f00087836c0e4a00cafd8a40
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: secret-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://25f2416133b972e10ca0dd8ee2ea0c632483db70f00087836c0e4a00cafd8a40
          exitCode: 0
          finishedAt: "2025-06-22T01:43:08Z"
          reason: Completed
          startedAt: "2025-06-22T01:43:08Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phf9c
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.196
    podIPs:
    - ip: 10.244.0.196
    qosClass: BestEffort
    startTime: "2025-06-22T01:43:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: argocd-repo-server-57db679bf7-
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 57db679bf7
    name: argocd-repo-server-57db679bf7-575lj
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-repo-server-57db679bf7
      uid: ba9e5d2a-cf18-4c31-a33b-f4dbb48c065c
    resourceVersion: "15553816"
    uid: 62baeced-3f5a-4019-9e26-bafb77a0dbbd
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-repo-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - /usr/local/bin/argocd-repo-server
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
      - name: ARGOCD_RECONCILIATION_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: timeout.reconciliation
            name: argocd-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: reposerver.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LOGLEVEL
        valueFrom:
          configMapKeyRef:
            key: reposerver.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_LOG_FORMAT_TIMESTAMP
        valueFrom:
          configMapKeyRef:
            key: log.format.timestamp
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: reposerver.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LISTEN_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: reposerver.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: reposerver.metrics.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_DISABLE_TLS
        valueFrom:
          configMapKeyRef:
            key: reposerver.disable.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MIN_VERSION
        valueFrom:
          configMapKeyRef:
            key: reposerver.tls.minversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MAX_VERSION
        valueFrom:
          configMapKeyRef:
            key: reposerver.tls.maxversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_CIPHERS
        valueFrom:
          configMapKeyRef:
            key: reposerver.tls.ciphers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: reposerver.repo.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_SERVER
        valueFrom:
          configMapKeyRef:
            key: redis.server
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_COMPRESSION
        valueFrom:
          configMapKeyRef:
            key: redis.compression
            name: argocd-cmd-params-cm
            optional: true
      - name: REDISDB
        valueFrom:
          configMapKeyRef:
            key: redis.db
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: reposerver.default.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: otlp.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_INSECURE
        valueFrom:
          configMapKeyRef:
            key: otlp.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_HEADERS
        valueFrom:
          configMapKeyRef:
            key: otlp.headers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_OTLP_ATTRS
        valueFrom:
          configMapKeyRef:
            key: otlp.attrs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.max.combined.directory.manifests.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
        valueFrom:
          configMapKeyRef:
            key: reposerver.plugin.tar.exclusions
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS
        valueFrom:
          configMapKeyRef:
            key: reposerver.plugin.use.manifest.generate.paths
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
        valueFrom:
          configMapKeyRef:
            key: reposerver.allow.oob.symlinks
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.streamed.manifest.max.tar.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.streamed.manifest.max.extracted.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.helm.manifest.max.extracted.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE
        valueFrom:
          configMapKeyRef:
            key: reposerver.disable.helm.manifest.max.extracted.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REVISION_CACHE_LOCK_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: reposerver.revision.cache.lock.timeout
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_MODULES_ENABLED
        valueFrom:
          configMapKeyRef:
            key: reposerver.enable.git.submodule
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: reposerver.git.lsremote.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GIT_REQUEST_TIMEOUT
        valueFrom:
          configMapKeyRef:
            key: reposerver.git.request.timeout
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_GRPC_MAX_SIZE_MB
        valueFrom:
          configMapKeyRef:
            key: reposerver.grpc.max.size
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES
        valueFrom:
          configMapKeyRef:
            key: reposerver.include.hidden.directories
            name: argocd-cmd-params-cm
            optional: true
      - name: HELM_CACHE_HOME
        value: /helm-working-dir
      - name: HELM_CONFIG_HOME
        value: /helm-working-dir
      - name: HELM_DATA_HOME
        value: /helm-working-dir
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: argocd-repo-server
      ports:
      - containerPort: 8081
        protocol: TCP
      - containerPort: 8084
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8084
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /tmp
        name: tmp
      - mountPath: /helm-working-dir
        name: helm-working-dir
      - mountPath: /home/argocd/cmp-server/plugins
        name: plugins
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/cp
      - -n
      - /usr/local/bin/argocd
      - /var/run/argocd/argocd-cmp-server
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: IfNotPresent
      name: copyutil
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argocd
        name: var-files
    nodeName: aks-agentpool-28010283-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-repo-server
    serviceAccountName: argocd-repo-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - configMap:
        defaultMode: 420
        name: argocd-gpg-keys-cm
      name: gpg-keys
    - emptyDir: {}
      name: gpg-keyring
    - emptyDir: {}
      name: tmp
    - emptyDir: {}
      name: helm-working-dir
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - emptyDir: {}
      name: var-files
    - emptyDir: {}
      name: plugins
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a17571982d44b1dabc347b2ca41019b32ffab74359215b327267601352b8ead7
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: argocd-repo-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:12Z"
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/gpg/source
        name: gpg-keys
      - mountPath: /app/config/gpg/keys
        name: gpg-keyring
      - mountPath: /app/config/reposerver/tls
        name: argocd-repo-server-tls
      - mountPath: /tmp
        name: tmp
      - mountPath: /helm-working-dir
        name: helm-working-dir
      - mountPath: /home/argocd/cmp-server/plugins
        name: plugins
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://241d8fcc724360bb217dfe4bac91a5ba969a76b34506530305e78eb5da8f327b
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: copyutil
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://241d8fcc724360bb217dfe4bac91a5ba969a76b34506530305e78eb5da8f327b
          exitCode: 0
          finishedAt: "2025-06-22T01:43:09Z"
          reason: Completed
          startedAt: "2025-06-22T01:43:09Z"
      volumeMounts:
      - mountPath: /var/run/argocd
        name: var-files
    phase: Running
    podIP: 10.244.0.139
    podIPs:
    - ip: 10.244.0.139
    qosClass: BestEffort
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: argocd-server-67b6bf4f8d-
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 67b6bf4f8d
    name: argocd-server-67b6bf4f8d-f2jjr
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argocd-server-67b6bf4f8d
      uid: f76c644f-73eb-4db4-b0ab-be297986cb75
    resourceVersion: "15553792"
    uid: 49a324bc-d4fb-41b6-980f-ed4b69036043
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: argocd-server
            topologyKey: kubernetes.io/hostname
          weight: 100
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/part-of: argocd
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - /usr/local/bin/argocd-server
      env:
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            key: auth
            name: argocd-redis
      - name: ARGOCD_SERVER_INSECURE
        valueFrom:
          configMapKeyRef:
            key: server.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_BASEHREF
        valueFrom:
          configMapKeyRef:
            key: server.basehref
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_ROOTPATH
        valueFrom:
          configMapKeyRef:
            key: server.rootpath
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LOGFORMAT
        valueFrom:
          configMapKeyRef:
            key: server.log.format
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LOG_LEVEL
        valueFrom:
          configMapKeyRef:
            key: server.log.level
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER
        valueFrom:
          configMapKeyRef:
            key: repo.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DEX_SERVER
        valueFrom:
          configMapKeyRef:
            key: server.dex.server
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DISABLE_AUTH
        valueFrom:
          configMapKeyRef:
            key: server.disable.auth
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_ENABLE_GZIP
        valueFrom:
          configMapKeyRef:
            key: server.enable.gzip
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS
        valueFrom:
          configMapKeyRef:
            key: server.repo.server.timeout.seconds
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_X_FRAME_OPTIONS
        valueFrom:
          configMapKeyRef:
            key: server.x.frame.options
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_CONTENT_SECURITY_POLICY
        valueFrom:
          configMapKeyRef:
            key: server.content.security.policy
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: server.repo.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: server.repo.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
        valueFrom:
          configMapKeyRef:
            key: server.dex.server.plaintext
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
        valueFrom:
          configMapKeyRef:
            key: server.dex.server.strict.tls
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MIN_VERSION
        valueFrom:
          configMapKeyRef:
            key: server.tls.minversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_MAX_VERSION
        valueFrom:
          configMapKeyRef:
            key: server.tls.maxversion
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_TLS_CIPHERS
        valueFrom:
          configMapKeyRef:
            key: server.tls.ciphers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.connection.status.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.oidc.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.login.attempts.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_STATIC_ASSETS
        valueFrom:
          configMapKeyRef:
            key: server.staticassets
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.app.state.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_SERVER
        valueFrom:
          configMapKeyRef:
            key: redis.server
            name: argocd-cmd-params-cm
            optional: true
      - name: REDIS_COMPRESSION
        valueFrom:
          configMapKeyRef:
            key: redis.compression
            name: argocd-cmd-params-cm
            optional: true
      - name: REDISDB
        valueFrom:
          configMapKeyRef:
            key: redis.db
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
        valueFrom:
          configMapKeyRef:
            key: server.default.cache.expiration
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_MAX_COOKIE_NUMBER
        valueFrom:
          configMapKeyRef:
            key: server.http.cookie.maxnumber
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_LISTEN_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: server.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_METRICS_LISTEN_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: server.metrics.listen.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_ADDRESS
        valueFrom:
          configMapKeyRef:
            key: otlp.address
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_INSECURE
        valueFrom:
          configMapKeyRef:
            key: otlp.insecure
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_HEADERS
        valueFrom:
          configMapKeyRef:
            key: otlp.headers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_OTLP_ATTRS
        valueFrom:
          configMapKeyRef:
            key: otlp.attrs
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATION_NAMESPACES
        valueFrom:
          configMapKeyRef:
            key: application.namespaces
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
        valueFrom:
          configMapKeyRef:
            key: server.enable.proxy.extension
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_MAX
        valueFrom:
          configMapKeyRef:
            key: server.k8sclient.retry.max
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
        valueFrom:
          configMapKeyRef:
            key: server.k8sclient.retry.base.backoff
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_API_CONTENT_TYPES
        valueFrom:
          configMapKeyRef:
            key: server.api.content.types
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT
        valueFrom:
          configMapKeyRef:
            key: server.webhook.parallelism.limit
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.new.git.file.globbing
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.scm.root.ca.path
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.allowed.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
        valueFrom:
          configMapKeyRef:
            key: applicationsetcontroller.enable.scm.providers
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_HYDRATOR_ENABLED
        valueFrom:
          configMapKeyRef:
            key: hydrator.enabled
            name: argocd-cmd-params-cm
            optional: true
      - name: ARGOCD_SYNC_WITH_REPLACE_ALLOWED
        valueFrom:
          configMapKeyRef:
            key: server.sync.replace.allowed
            name: argocd-cmd-params-cm
            optional: true
      image: quay.io/argoproj/argocd:v3.0.6
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz?full=true
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: argocd-server
      ports:
      - containerPort: 8080
        protocol: TCP
      - containerPort: 8083
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /app/config/dex/tls
        name: argocd-dex-server-tls
      - mountPath: /home/argocd
        name: plugins-home
      - mountPath: /tmp
        name: tmp
      - mountPath: /home/argocd/params
        name: argocd-cmd-params-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qf5nf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000000
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: argocd-server
    serviceAccountName: argocd-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: plugins-home
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 420
        name: argocd-ssh-known-hosts-cm
      name: ssh-known-hosts
    - configMap:
        defaultMode: 420
        name: argocd-tls-certs-cm
      name: tls-certs
    - name: argocd-repo-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-repo-server-tls
    - name: argocd-dex-server-tls
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: ca.crt
          path: ca.crt
        optional: true
        secretName: argocd-dex-server-tls
    - configMap:
        defaultMode: 420
        items:
        - key: server.profile.enabled
          path: profiler.enabled
        name: argocd-cmd-params-cm
        optional: true
      name: argocd-cmd-params-cm
    - name: kube-api-access-qf5nf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f635991f21df31ce0fcc5501c247f38e7aa2697dd64dc39d6d6c532b96d657b6
      image: quay.io/argoproj/argocd:v3.0.6
      imageID: quay.io/argoproj/argocd@sha256:a45307e2695d0fd93713e3d211b71086ac75a85dc8afbb28a249bdc4b3b0b2b9
      lastState: {}
      name: argocd-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:14Z"
      volumeMounts:
      - mountPath: /app/config/ssh
        name: ssh-known-hosts
      - mountPath: /app/config/tls
        name: tls-certs
      - mountPath: /app/config/server/tls
        name: argocd-repo-server-tls
      - mountPath: /app/config/dex/tls
        name: argocd-dex-server-tls
      - mountPath: /home/argocd
        name: plugins-home
      - mountPath: /tmp
        name: tmp
      - mountPath: /home/argocd/params
        name: argocd-cmd-params-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qf5nf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: BestEffort
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      istio.io/rev: default
      kubectl.kubernetes.io/default-container: details
      kubectl.kubernetes.io/default-logs-container: details
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: details-v1-69c7fccbf-
    labels:
      app: details
      pod-template-hash: 69c7fccbf
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: details
      service.istio.io/canonical-revision: v1
      version: v1
    name: details-v1-69c7fccbf-vz4bs
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: details-v1-69c7fccbf
      uid: 492bb0a5-363d-4155-bacd-09e2b7a554a4
    resourceVersion: "15553699"
    uid: e0df34a8-7b1e-451c-a7ad-b0116a953f39
  spec:
    containers:
    - env:
      - name: ENABLE_EXTERNAL_BOOK_SERVICE
        value: "true"
      image: docker.io/istio/examples-bookinfo-details-v1:1.16.4
      imagePullPolicy: IfNotPresent
      name: details
      ports:
      - containerPort: 9080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vs7zq
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {"proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_CONFIG_XDS_AGENT":"true"},"meshId":"cluster-1"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"containerPort":9080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: details
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: details-v1
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/bookinfo/deployments/details-v1
      - name: ISTIO_META_MESH_ID
        value: cluster-1
      - name: TRUST_DOMAIN
        value: cluster-1
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      - name: ISTIO_META_CLUSTER_ID
        value: cluster-1
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      startupProbe:
        failureThreshold: 600
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vs7zq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      env:
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vs7zq
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: bookinfo-details
    serviceAccountName: bookinfo-details
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - name: kube-api-access-vs7zq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b7e0d4f60d43e99701dcb2e38d740d8a77f18a8e721a22a3f867b49e877c57c7
      image: docker.io/istio/examples-bookinfo-details-v1:1.16.4
      imageID: docker.io/istio/examples-bookinfo-details-v1@sha256:30d373ab66194606eecd0d17809446d61775eafbff1600d2f6f771e7ca777e64
      lastState: {}
      name: details
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vs7zq
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://a247ad898f85d768e55e905a8e932646ab1b112c7034a8d83d6509355b0889db
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vs7zq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://ca6f15a3fecd0b41a9533ca65ccbe63e760d9de4b372dfb369fdd1c77cd22521
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ca6f15a3fecd0b41a9533ca65ccbe63e760d9de4b372dfb369fdd1c77cd22521
          exitCode: 0
          finishedAt: "2025-06-22T01:43:09Z"
          reason: Completed
          startedAt: "2025-06-22T01:43:09Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vs7zq
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.154
    podIPs:
    - ip: 10.244.0.154
    qosClass: Burstable
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      istio.io/rev: default
      kubectl.kubernetes.io/default-container: productpage
      kubectl.kubernetes.io/default-logs-container: productpage
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-06-19T08:25:34Z"
    generateName: productpage-v1-58ddcf596c-
    labels:
      app: productpage
      pod-template-hash: 58ddcf596c
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: productpage
      service.istio.io/canonical-revision: v1
      version: v1
    name: productpage-v1-58ddcf596c-vsppt
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: productpage-v1-58ddcf596c
      uid: c419d91d-829f-4232-bb40-6e67cbe7bc16
    resourceVersion: "14284265"
    uid: 349e93c5-c264-45fa-a57b-9784d279147b
  spec:
    containers:
    - image: docker.io/istio/examples-bookinfo-productpage-v1:1.16.4
      imagePullPolicy: IfNotPresent
      name: productpage
      ports:
      - containerPort: 9080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rbfs
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {"proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_CONFIG_XDS_AGENT":"true"},"meshId":"cluster-1"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"containerPort":9080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: productpage
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: productpage-v1
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/bookinfo/deployments/productpage-v1
      - name: ISTIO_META_MESH_ID
        value: cluster-1
      - name: TRUST_DOMAIN
        value: cluster-1
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      - name: ISTIO_META_CLUSTER_ID
        value: cluster-1
      - name: ISTIO_PROMETHEUS_ANNOTATIONS
        value: '{"scrape":"true","path":"/metrics","port":"9080"}'
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      startupProbe:
        failureThreshold: 600
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rbfs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      env:
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rbfs
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: bookinfo-productpage
    serviceAccountName: bookinfo-productpage
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-8rbfs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3f9a92f89e1dda604b9a2bd21587853c1463c561e59ab81d84d8ff00ee473378
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-19T08:25:46Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rbfs
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://f14184c8d8c056306ba464dbf63742d74e48e506ea5c7905c9bf6876668425f8
      image: docker.io/istio/examples-bookinfo-productpage-v1:1.16.4
      imageID: docker.io/istio/examples-bookinfo-productpage-v1@sha256:3a2b0431e896b513a40126d5ea7ca5aee2b743b7ab6dbd19c109902c91867071
      lastState: {}
      name: productpage
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-19T08:25:45Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rbfs
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://5f21f8b1c6458cb73171a57dff901e789e0f448175ac734d21ec4e1832e22cf6
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5f21f8b1c6458cb73171a57dff901e789e0f448175ac734d21ec4e1832e22cf6
          exitCode: 0
          finishedAt: "2025-06-19T08:25:34Z"
          reason: Completed
          startedAt: "2025-06-19T08:25:34Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8rbfs
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.1.135
    podIPs:
    - ip: 10.244.1.135
    qosClass: Burstable
    startTime: "2025-06-19T08:25:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      istio.io/rev: default
      kubectl.kubernetes.io/default-container: ratings
      kubectl.kubernetes.io/default-logs-container: ratings
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-06-19T08:25:34Z"
    generateName: ratings-v1-6fb7f74478-
    labels:
      app: ratings
      pod-template-hash: 6fb7f74478
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: ratings
      service.istio.io/canonical-revision: v1
      version: v1
    name: ratings-v1-6fb7f74478-nkj8z
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ratings-v1-6fb7f74478
      uid: 2ae84d45-05ed-4c43-bad2-c5b66b003b18
    resourceVersion: "14284260"
    uid: 7575adb6-6050-4c44-aa16-3f05135c4937
  spec:
    containers:
    - image: docker.io/istio/examples-bookinfo-ratings-v1:1.16.4
      imagePullPolicy: IfNotPresent
      name: ratings
      ports:
      - containerPort: 9080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4cs5
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {"proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_CONFIG_XDS_AGENT":"true"},"meshId":"cluster-1"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"containerPort":9080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: ratings
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: ratings-v1
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/bookinfo/deployments/ratings-v1
      - name: ISTIO_META_MESH_ID
        value: cluster-1
      - name: TRUST_DOMAIN
        value: cluster-1
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      - name: ISTIO_META_CLUSTER_ID
        value: cluster-1
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      startupProbe:
        failureThreshold: 600
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4cs5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      env:
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4cs5
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: bookinfo-ratings
    serviceAccountName: bookinfo-ratings
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - name: kube-api-access-j4cs5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://12bba6d7897cae6f41c8a62efe6b0cf6285f3ff87d6ae564d110d830865d07d5
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-19T08:25:46Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4cs5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://f2ebb51f951efcafab5b5defc026b560f084f00f9819ec1b075389cda2d397de
      image: docker.io/istio/examples-bookinfo-ratings-v1:1.16.4
      imageID: docker.io/istio/examples-bookinfo-ratings-v1@sha256:94af356db643967ff2a18d7f79e660ffe0d060ceae017b95317b355403b9ef8a
      lastState: {}
      name: ratings
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-19T08:25:45Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4cs5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://23feb6f9047cb0d5668857dcd0bccb8c2b13b9471f582aea1552ca1dab52d667
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://23feb6f9047cb0d5668857dcd0bccb8c2b13b9471f582aea1552ca1dab52d667
          exitCode: 0
          finishedAt: "2025-06-19T08:25:34Z"
          reason: Completed
          startedAt: "2025-06-19T08:25:34Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4cs5
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.1.206
    podIPs:
    - ip: 10.244.1.206
    qosClass: Burstable
    startTime: "2025-06-19T08:25:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      istio.io/rev: default
      kubectl.kubernetes.io/default-container: reviews
      kubectl.kubernetes.io/default-logs-container: reviews
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: reviews-v1-79587cf9db-
    labels:
      app: reviews
      pod-template-hash: 79587cf9db
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: reviews
      service.istio.io/canonical-revision: v1
      version: v1
    name: reviews-v1-79587cf9db-z9jdd
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: reviews-v1-79587cf9db
      uid: 936dad47-2a3e-4d06-84e4-4525370f999e
    resourceVersion: "15553693"
    uid: 24c4f361-931b-4f85-9485-937cd139e5f7
  spec:
    containers:
    - env:
      - name: LOG_DIR
        value: /tmp/logs
      image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.4
      imagePullPolicy: IfNotPresent
      name: reviews
      ports:
      - containerPort: 9080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /opt/ibm/wlp/output
        name: wlp-output
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg2bw
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {"proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_CONFIG_XDS_AGENT":"true"},"meshId":"cluster-1"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"containerPort":9080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: reviews
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: reviews-v1
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/bookinfo/deployments/reviews-v1
      - name: ISTIO_META_MESH_ID
        value: cluster-1
      - name: TRUST_DOMAIN
        value: cluster-1
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      - name: ISTIO_META_CLUSTER_ID
        value: cluster-1
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      startupProbe:
        failureThreshold: 600
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg2bw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      env:
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg2bw
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: bookinfo-reviews
    serviceAccountName: bookinfo-reviews
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - emptyDir: {}
      name: wlp-output
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-wg2bw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://075c84a19e17c38ef5008c12e20caa51e1a5e5afe6f0480402561b4b8a032c24
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg2bw
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://d94bc49ca0d3047056405e6af2d6c9387f565b384d5d79d2b8c737f17fdac02b
      image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.4
      imageID: docker.io/istio/examples-bookinfo-reviews-v1@sha256:fbc61607e475721fb2459b72e0dca1469b958a85106bd70d864e0e1d2834a921
      lastState: {}
      name: reviews
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:11Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /opt/ibm/wlp/output
        name: wlp-output
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg2bw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://a6dc4822fb5ee6455caada001baa29b8d62cfb5aaf83e6f8f3a906f684b1fde3
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a6dc4822fb5ee6455caada001baa29b8d62cfb5aaf83e6f8f3a906f684b1fde3
          exitCode: 0
          finishedAt: "2025-06-22T01:43:09Z"
          reason: Completed
          startedAt: "2025-06-22T01:43:09Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg2bw
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.143
    podIPs:
    - ip: 10.244.0.143
    qosClass: Burstable
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      istio.io/rev: default
      kubectl.kubernetes.io/default-container: reviews
      kubectl.kubernetes.io/default-logs-container: reviews
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: reviews-v2-5f7b9d899d-
    labels:
      app: reviews
      pod-template-hash: 5f7b9d899d
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: reviews
      service.istio.io/canonical-revision: v2
      version: v2
    name: reviews-v2-5f7b9d899d-vhlvp
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: reviews-v2-5f7b9d899d
      uid: 3db52762-3a4a-46fb-a515-a2fe9d64a9de
    resourceVersion: "15553705"
    uid: 3c12660b-38f6-4f06-95fa-9b1d96729fd8
  spec:
    containers:
    - env:
      - name: LOG_DIR
        value: /tmp/logs
      image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.4
      imagePullPolicy: IfNotPresent
      name: reviews
      ports:
      - containerPort: 9080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /opt/ibm/wlp/output
        name: wlp-output
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s8pdr
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {"proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_CONFIG_XDS_AGENT":"true"},"meshId":"cluster-1"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"containerPort":9080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: reviews
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: reviews-v2
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/bookinfo/deployments/reviews-v2
      - name: ISTIO_META_MESH_ID
        value: cluster-1
      - name: TRUST_DOMAIN
        value: cluster-1
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      - name: ISTIO_META_CLUSTER_ID
        value: cluster-1
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      startupProbe:
        failureThreshold: 600
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s8pdr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      env:
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s8pdr
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: bookinfo-reviews
    serviceAccountName: bookinfo-reviews
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - emptyDir: {}
      name: wlp-output
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-s8pdr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9e9e5f6c87ac354fd747ab94796702a30af3db29b14d3e719a75745cb4c9905
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s8pdr
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://1708cb474c25e8bde42a13aea794f2d579b511c25cf270da2679ee4eaf69f2b1
      image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.4
      imageID: docker.io/istio/examples-bookinfo-reviews-v2@sha256:7129af6a2f971036bbc6389f42b1dc15f051080749450b02907452a890cbff87
      lastState: {}
      name: reviews
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:11Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /opt/ibm/wlp/output
        name: wlp-output
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s8pdr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://d6ce221d432fa35ec2f578e5611a2238bce9e4daf3b166f0538ce298d92f462b
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d6ce221d432fa35ec2f578e5611a2238bce9e4daf3b166f0538ce298d92f462b
          exitCode: 0
          finishedAt: "2025-06-22T01:43:09Z"
          reason: Completed
          startedAt: "2025-06-22T01:43:09Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s8pdr
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: Burstable
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      istio.io/rev: default
      kubectl.kubernetes.io/default-container: reviews
      kubectl.kubernetes.io/default-logs-container: reviews
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-06-19T08:25:33Z"
    generateName: reviews-v3-698888c6c4-
    labels:
      app: reviews
      pod-template-hash: 698888c6c4
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: reviews
      service.istio.io/canonical-revision: v3
      version: v3
    name: reviews-v3-698888c6c4-x2dnr
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: reviews-v3-698888c6c4
      uid: 1e8b4c84-0a12-4884-ad1f-2febb0b4a4e8
    resourceVersion: "14284306"
    uid: 1aabb106-5577-4b93-8571-104ba0c4e243
  spec:
    containers:
    - env:
      - name: LOG_DIR
        value: /tmp/logs
      image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.4
      imagePullPolicy: IfNotPresent
      name: reviews
      ports:
      - containerPort: 9080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /opt/ibm/wlp/output
        name: wlp-output
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9ng54
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {"proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_CONFIG_XDS_AGENT":"true"},"meshId":"cluster-1"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"containerPort":9080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: reviews
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: reviews-v3
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/bookinfo/deployments/reviews-v3
      - name: ISTIO_META_MESH_ID
        value: cluster-1
      - name: TRUST_DOMAIN
        value: cluster-1
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      - name: ISTIO_META_CLUSTER_ID
        value: cluster-1
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      startupProbe:
        failureThreshold: 600
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9ng54
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      env:
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9ng54
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: bookinfo-reviews
    serviceAccountName: bookinfo-reviews
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - emptyDir: {}
      name: wlp-output
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-9ng54
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-19T08:25:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://04f8d311983bc9f3418db81899af06dfb35d0dca1a8301959f72b3eadbdffbaa
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-19T08:25:48Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9ng54
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://6bc3d76dea38b0ac326bab608ece094b38020fdb57018b3b51eb881be951f54b
      image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.4
      imageID: docker.io/istio/examples-bookinfo-reviews-v3@sha256:0ef5ac928a22171fc9e67d023c5f7bafc9e0db011c184d296997a021d9ee280c
      lastState: {}
      name: reviews
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-19T08:25:48Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /opt/ibm/wlp/output
        name: wlp-output
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9ng54
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://c3f2557ca8729e28370638df2c82bc2897bd8b1d3de7debc2378f1331af00576
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c3f2557ca8729e28370638df2c82bc2897bd8b1d3de7debc2378f1331af00576
          exitCode: 0
          finishedAt: "2025-06-19T08:25:35Z"
          reason: Completed
          startedAt: "2025-06-19T08:25:35Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9ng54
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.1.174
    podIPs:
    - ip: 10.244.1.174
    qosClass: Burstable
    startTime: "2025-06-19T08:25:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      inject.istio.io/templates: gateway
      istio.io/rev: default
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      proxy.istio.io/overrides: '{"containers":[{"name":"istio-proxy","ports":[{"name":"http-envoy-prom","containerPort":15090,"protocol":"TCP"}],"resources":{"limits":{"cpu":"2","memory":"1Gi"},"requests":{"cpu":"100m","memory":"128Mi"}},"volumeMounts":[{"name":"kube-api-access-z6hn6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["ALL"]},"privileged":false,"runAsUser":1337,"runAsGroup":1337,"runAsNonRoot":true,"readOnlyRootFilesystem":true,"allowPrivilegeEscalation":false}}]}'
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/status: '{"initContainers":null,"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-05-19T08:26:43Z"
    generateName: istio-gateway-b6fdc6d4d-
    labels:
      app: istio-gateway
      app.kubernetes.io/instance: istio-gateway
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istio-gateway
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.26.0
      helm.sh/chart: gateway-1.26.0
      istio: app-istio-gateway
      istio.io/dataplane-mode: none
      pod-template-hash: b6fdc6d4d
      service.istio.io/canonical-name: istio-gateway
      service.istio.io/canonical-revision: 1.26.0
      sidecar.istio.io/inject: "true"
    name: istio-gateway-b6fdc6d4d-8xflr
    namespace: istio-ingress
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: istio-gateway-b6fdc6d4d
      uid: 95032ae7-fac7-4929-9d66-d32765e39aa0
    resourceVersion: "8054"
    uid: 41dc81d4-43f5-407e-a9a0-48a6e7483441
  spec:
    containers:
    - args:
      - proxy
      - router
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"name":"http-envoy-prom","containerPort":15090,"protocol":"TCP"}
          ]
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_APP_CONTAINERS
      - name: ISTIO_META_CLUSTER_ID
        value: Kubernetes
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: istio-gateway
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/istio-ingress/deployments/istio-gateway
      - name: ISTIO_META_MESH_ID
        value: cluster.local
      - name: TRUST_DOMAIN
        value: cluster.local
      image: docker.io/istio/proxyv2:1.26.0
      imagePullPolicy: Always
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z6hn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      sysctls:
      - name: net.ipv4.ip_unprivileged_port_start
        value: "0"
    serviceAccount: istio-gateway
    serviceAccountName: istio-gateway
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - name: kube-api-access-z6hn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:26:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:26:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:26:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:26:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:26:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://efa570fbd30934eae62ec0364d5f80c69667c64cea5a7d0983faec44b14e835d
      image: docker.io/istio/proxyv2:1.26.0
      imageID: docker.io/istio/proxyv2@sha256:bc19e6e0978569a7cc886f3dececc3cb3613cf6e457ddf09e3cb849a2b315231
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:26:46Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z6hn6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.251
    podIPs:
    - ip: 10.244.1.251
    qosClass: Burstable
    startTime: "2025-05-19T08:26:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 9c04413b18ae878556af30dbdaa3f703d0e59494ca868b634e89ce125cc64210
      checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      kubectl.kubernetes.io/default-container: grafana
    creationTimestamp: "2025-05-22T13:36:31Z"
    generateName: grafana-6b77d45549-
    labels:
      app: grafana
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/name: grafana
      pod-template-hash: 6b77d45549
      sidecar.istio.io/inject: "false"
    name: grafana-6b77d45549-xkxml
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: grafana-6b77d45549
      uid: 46191d6e-cb74-4b2a-a477-be4d10087167
    resourceVersion: "1477006"
    uid: 655c6d6c-3c62-4248-9cc3-ffb8397e6b99
  spec:
    automountServiceAccountToken: true
    containers:
    - env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: GF_PATHS_DATA
        value: /var/lib/grafana/
      - name: GF_PATHS_LOGS
        value: /var/log/grafana
      - name: GF_PATHS_PLUGINS
        value: /var/lib/grafana/plugins
      - name: GF_PATHS_PROVISIONING
        value: /etc/grafana/provisioning
      - name: GF_AUTH_ANONYMOUS_ENABLED
        value: "true"
      - name: GF_AUTH_ANONYMOUS_ORG_ROLE
        value: Admin
      - name: GF_AUTH_BASIC_ENABLED
        value: "false"
      - name: GF_SECURITY_ADMIN_PASSWORD
        value: admin
      - name: GF_SECURITY_ADMIN_USER
        value: admin
      image: docker.io/grafana/grafana:10.0.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: grafana
      ports:
      - containerPort: 3000
        name: grafana
        protocol: TCP
      - containerPort: 9094
        name: gossip-tcp
        protocol: TCP
      - containerPort: 9094
        name: gossip-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
        subPath: grafana.ini
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
        name: config
        subPath: datasources.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dl7bk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 472
      runAsGroup: 472
      runAsNonRoot: true
      runAsUser: 472
    serviceAccount: grafana
    serviceAccountName: grafana
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: grafana
      name: config
    - emptyDir: {}
      name: storage
    - name: kube-api-access-dl7bk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fe48dcca29d40d9ef0fca149f438615d768ad77c98884c90b5a66960bd51a761
      image: docker.io/grafana/grafana:10.0.2
      imageID: docker.io/grafana/grafana@sha256:2aa6e216f8674425d587bab7b692a941a579252f51de2f97a2a8c837e0f5e63a
      lastState: {}
      name: grafana
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-22T13:36:38Z"
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dl7bk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.173
    podIPs:
    - ip: 10.244.1.173
    qosClass: BestEffort
    startTime: "2025-05-22T13:36:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-22T13:36:31Z"
    generateName: istio-monitoring-demo-kube-state-metrics-6cfd96d66f-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.10.0
      helm.sh/chart: kube-state-metrics-5.14.0
      pod-template-hash: 6cfd96d66f
      sidecar.istio.io/inject: "false"
    name: istio-monitoring-demo-kube-state-metrics-6cfd96d66f-66p29
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: istio-monitoring-demo-kube-state-metrics-6cfd96d66f
      uid: a8108d87-0af0-48c4-8686-f622ab328a20
    resourceVersion: "1476950"
    uid: f4e8a8a9-8e17-4be0-a15b-422493c6dab6
  spec:
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hb4v8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: istio-monitoring-demo-kube-state-metrics
    serviceAccountName: istio-monitoring-demo-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-hb4v8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ca192c87588265a8acd6a2c80d6acf424ee603cd64b6f37ea9851b7d22439273
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:ec5d6f6be2280212da0e55572b67d76f29c0342b3b6d24cc47b32d80ee3374a4
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-22T13:36:35Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hb4v8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.99
    podIPs:
    - ip: 10.244.1.99
    qosClass: BestEffort
    startTime: "2025-05-22T13:36:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "15014"
      prometheus.io/scrape: "true"
      sidecar.istio.io/inject: "false"
    creationTimestamp: "2025-05-22T12:49:56Z"
    generateName: istiod-d77496c98-
    labels:
      app: istiod
      app.kubernetes.io/instance: istio-istiod
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istiod
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.25.1
      helm.sh/chart: istiod-1.25.1
      install.operator.istio.io/owning-resource: unknown
      istio: pilot
      istio.io/dataplane-mode: none
      istio.io/rev: default
      operator.istio.io/component: Pilot
      pod-template-hash: d77496c98
      sidecar.istio.io/inject: "false"
    name: istiod-d77496c98-lm8s6
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: istiod-d77496c98
      uid: f4f5bcb8-786d-4d1d-a04c-784e09709c79
    resourceVersion: "1461960"
    uid: d90f261e-0be5-4e7b-985d-45baa3dcfa8a
  spec:
    containers:
    - args:
      - discovery
      - --monitoringAddr=:15014
      - --log_output_level=default:info
      - --domain
      - cluster.local
      - --keepaliveMaxServerConnectionAge
      - 30m
      env:
      - name: REVISION
        value: default
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: KUBECONFIG
        value: /var/run/secrets/remote/config
      - name: CA_TRUSTED_NODE_ACCOUNTS
        value: istio-system/ztunnel
      - name: PILOT_TRACE_SAMPLING
        value: "1"
      - name: PILOT_ENABLE_ANALYSIS
        value: "false"
      - name: CLUSTER_ID
        value: cluster-1
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "1"
            resource: limits.cpu
      - name: PLATFORM
      image: docker.io/istio/pilot:1.25.2
      imagePullPolicy: IfNotPresent
      name: discovery
      ports:
      - containerPort: 8080
        name: http-debug
        protocol: TCP
      - containerPort: 15010
        name: grpc-xds
        protocol: TCP
      - containerPort: 15012
        name: tls-xds
        protocol: TCP
      - containerPort: 15017
        name: https-webhooks
        protocol: TCP
      - containerPort: 15014
        name: http-monitoring
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 3
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 500m
          memory: 2Gi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: istio-token
        readOnly: true
      - mountPath: /var/run/secrets/istio-dns
        name: local-certs
      - mountPath: /etc/cacerts
        name: cacerts
        readOnly: true
      - mountPath: /var/run/secrets/remote
        name: istio-kubeconfig
        readOnly: true
      - mountPath: /var/run/secrets/istiod/tls
        name: istio-csr-dns-cert
        readOnly: true
      - mountPath: /var/run/secrets/istiod/ca
        name: istio-csr-ca-configmap
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rhrvv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: istiod
    serviceAccountName: istiod
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: cni.istio.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir:
        medium: Memory
      name: local-certs
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - name: cacerts
      secret:
        defaultMode: 420
        optional: true
        secretName: cacerts
    - name: istio-kubeconfig
      secret:
        defaultMode: 420
        optional: true
        secretName: istio-kubeconfig
    - name: istio-csr-dns-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: istiod-tls
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
        optional: true
      name: istio-csr-ca-configmap
    - name: kube-api-access-rhrvv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T12:49:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T12:49:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T12:49:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T12:49:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T12:49:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f8e90932db39357695d48a9c338a9d55dd4acaa2475e03d5f48f53ffa7e46782
      image: docker.io/istio/pilot:1.25.2
      imageID: docker.io/istio/pilot@sha256:2961bf88463e475f1e53d82a118405841ecbb9d8a6e0b35c73c77bee53bc0c3e
      lastState: {}
      name: discovery
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-22T12:49:56Z"
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: istio-token
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/istio-dns
        name: local-certs
      - mountPath: /etc/cacerts
        name: cacerts
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/remote
        name: istio-kubeconfig
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/istiod/tls
        name: istio-csr-dns-cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/istiod/ca
        name: istio-csr-ca-configmap
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rhrvv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.112
    podIPs:
    - ip: 10.244.0.112
    qosClass: Burstable
    startTime: "2025-05-22T12:49:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-22T13:36:31Z"
    generateName: prometheus-7c5576b7b-
    labels:
      app: prometheus
      chart: prometheus-19.6.1
      component: server
      heritage: Helm
      pod-template-hash: 7c5576b7b
      release: istio-monitoring-demo
      sidecar.istio.io/inject: "false"
    name: prometheus-7c5576b7b-lkzjf
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-7c5576b7b
      uid: 9d13e3d7-61fd-481d-b5b6-ed4c94b00c15
    resourceVersion: "1476939"
    uid: 7f459509-1b5a-4829-ad69-9df4859fe200
  spec:
    containers:
    - args:
      - --volume-dir=/etc/config
      - --webhook-url=http://127.0.0.1:9090/-/reload
      image: jimmidyson/configmap-reload:v0.8.0
      imagePullPolicy: IfNotPresent
      name: prometheus-server-configmap-reload
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv7kk
        readOnly: true
    - args:
      - --storage.tsdb.retention.time=15d
      - --config.file=/etc/config/prometheus.yml
      - --storage.tsdb.path=/data
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
      image: prom/prometheus:v2.41.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: prometheus-server
      ports:
      - containerPort: 9090
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 9090
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv7kk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: prometheus
    serviceAccountName: prometheus
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: prometheus
      name: config-volume
    - emptyDir: {}
      name: storage-volume
    - name: kube-api-access-wv7kk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-22T13:36:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ff6c6a88244f30f499cfadbc3b2b491877c796feba29cce6f63d22a085f908f1
      image: docker.io/prom/prometheus:v2.41.0
      imageID: docker.io/prom/prometheus@sha256:1a3e9a878e50cd339ae7cf5718fda08381dda2d4ccd28e94bbaa3190d1a566c2
      lastState: {}
      name: prometheus-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-22T13:36:38Z"
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv7kk
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://6826810c67ab64ebeddcb3d760dfc77bd07e621911c6d6ca5ed79a056a1337ec
      image: docker.io/jimmidyson/configmap-reload:v0.8.0
      imageID: docker.io/jimmidyson/configmap-reload@sha256:5af9d3041d12a3e63f115125f89b66d2ba981fe82e64302ac370c5496055059c
      lastState: {}
      name: prometheus-server-configmap-reload
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-22T13:36:33Z"
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wv7kk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.76
    podIPs:
    - ip: 10.244.1.76
    qosClass: BestEffort
    startTime: "2025-05-22T13:36:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-22T00:48:13Z"
    generateName: ama-metrics-66bf7c6c5b-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 66bf7c6c5b
      rsName: ama-metrics
    name: ama-metrics-66bf7c6c5b-hwt4r
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-metrics-66bf7c6c5b
      uid: fc0698c7-6853-4d88-9206-3e961a646de3
    resourceVersion: "15534612"
    uid: 344a7508-de42-4ce9-9594-c62f04db9c3a
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: azuremonitor/metrics.replica.preferred
              operator: In
              values:
              - "true"
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.azure.com/cluster
              operator: Exists
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: CLUSTER
        value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
      - name: AKSREGION
        value: eastus
      - name: MAC
        value: "true"
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: AZMON_OPERATOR_ENABLED
        value: "true"
      - name: AZMON_COLLECTOR_HPA_ENABLED
        value: "true"
      - name: customEnvironment
        value: azurepubliccloud
      - name: OMS_TLD
        value: opinsights.azure.com
      - name: CONTROLLER_TYPE
        value: ReplicaSet
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1m
            resource: limits.cpu
      - name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1Mi
            resource: limits.memory
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: KUBE_STATE_VERSION
        value: v2.15.0-4
      - name: OPERATOR_TARGETS_TA_IMG_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b-targetallocator
      - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b-cfg
      - name: NODE_EXPORTER_VERSION
      - name: AGENT_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b
      - name: MODE
        value: advanced
      - name: WINMODE
        value: advanced
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-collector
      resources:
        limits:
          cpu: "7"
          memory: 14Gi
        requests:
          cpu: 150m
          memory: 500Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qwd5
        readOnly: true
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=7777
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qwd5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          rsName: ama-metrics
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          rsName: ama-metrics
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config
        optional: true
      name: prometheus-config-vol
    - hostPath:
        path: /var/log/containers
        type: ""
      name: host-log-containers
    - hostPath:
        path: /var/log/pods
        type: ""
      name: host-log-pods
    - hostPath:
        path: /etc/pki/ca-trust/source/anchors/
        type: DirectoryOrCreate
      name: anchors-mariner
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - hostPath:
        path: /usr/local/share/ca-certificates/
        type: DirectoryOrCreate
      name: anchors-ubuntu
    - name: kube-api-access-6qwd5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T00:48:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T00:48:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T00:48:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T00:48:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T00:48:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7f8792ae263bc0c89c8631ec392ea20fd53df2bffdb90d8b2c7f1cc16e243acf
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:a9560e48285975ee2e9f8d1ced439c928ecab5946fa8781c61ecfc513f2107b2
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T00:48:14Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qwd5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://402ab0c04fc3459f04f85bfc9cb17a289913211012898003a3e28f03b51f75a6
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images@sha256:f12f4525b16b58bd6ee8215e0e09ba2f030e98d6fc43ed3e8b89518afa7de921
      lastState: {}
      name: prometheus-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T00:48:14Z"
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qwd5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.64
    podIPs:
    - ip: 10.244.1.64
    qosClass: Burstable
    startTime: "2025-06-22T00:48:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: ama-metrics-66bf7c6c5b-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 66bf7c6c5b
      rsName: ama-metrics
    name: ama-metrics-66bf7c6c5b-p89z5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-metrics-66bf7c6c5b
      uid: fc0698c7-6853-4d88-9206-3e961a646de3
    resourceVersion: "15553690"
    uid: f852d601-82e6-4a21-8b85-a566535f9400
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: azuremonitor/metrics.replica.preferred
              operator: In
              values:
              - "true"
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.azure.com/cluster
              operator: Exists
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: CLUSTER
        value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
      - name: AKSREGION
        value: eastus
      - name: MAC
        value: "true"
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: AZMON_OPERATOR_ENABLED
        value: "true"
      - name: AZMON_COLLECTOR_HPA_ENABLED
        value: "true"
      - name: customEnvironment
        value: azurepubliccloud
      - name: OMS_TLD
        value: opinsights.azure.com
      - name: CONTROLLER_TYPE
        value: ReplicaSet
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1m
            resource: limits.cpu
      - name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1Mi
            resource: limits.memory
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: KUBE_STATE_VERSION
        value: v2.15.0-4
      - name: OPERATOR_TARGETS_TA_IMG_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b-targetallocator
      - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b-cfg
      - name: NODE_EXPORTER_VERSION
      - name: AGENT_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b
      - name: MODE
        value: advanced
      - name: WINMODE
        value: advanced
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-collector
      resources:
        limits:
          cpu: "7"
          memory: 14Gi
        requests:
          cpu: 150m
          memory: 500Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dcx9l
        readOnly: true
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=7777
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dcx9l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          rsName: ama-metrics
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          rsName: ama-metrics
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config
        optional: true
      name: prometheus-config-vol
    - hostPath:
        path: /var/log/containers
        type: ""
      name: host-log-containers
    - hostPath:
        path: /var/log/pods
        type: ""
      name: host-log-pods
    - hostPath:
        path: /etc/pki/ca-trust/source/anchors/
        type: DirectoryOrCreate
      name: anchors-mariner
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - hostPath:
        path: /usr/local/share/ca-certificates/
        type: DirectoryOrCreate
      name: anchors-ubuntu
    - name: kube-api-access-dcx9l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2293b3b9c7079602daa6c30aebb794b405a8511926f8c7476210fc72f2ce6420
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:a9560e48285975ee2e9f8d1ced439c928ecab5946fa8781c61ecfc513f2107b2
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dcx9l
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://04d62d14f5677ec8f83e0e68aa3fdf9947886860ae26c221a100978c940a7178
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images@sha256:f12f4525b16b58bd6ee8215e0e09ba2f030e98d6fc43ed3e8b89518afa7de921
      lastState: {}
      name: prometheus-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:11Z"
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dcx9l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.250
    podIPs:
    - ip: 10.244.0.250
    qosClass: Burstable
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2025-05-19T08:11:06Z"
    generateName: ama-metrics-ksm-8fbf76b85-
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.15.0-4
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 8fbf76b85
    name: ama-metrics-ksm-8fbf76b85-k8bhw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-metrics-ksm-8fbf76b85
      uid: dccde6fb-7031-4249-9e4e-29ee675b10a5
    resourceVersion: "3079"
    uid: ebe4a97a-b663-43d2-bc38-a92772c63561
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.azure.com/cluster
              operator: Exists
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      - --telemetry-port=8081
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:v2.15.0-4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: ama-metrics-ksm
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: "1"
          memory: 5Gi
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmvtf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsUser: 65534
    serviceAccount: ama-metrics-ksm
    serviceAccountName: ama-metrics-ksm
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-bmvtf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:11:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:11:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:11:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:11:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:11:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ed83b9eb4aae76ecfabe052f9481771a8da29fc932ab5ea5158d21ef78c1992e
      image: mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:v2.15.0-4
      imageID: sha256:1b26431092bb247181cf7f84c724e9ced87635e905fd97379a76e5adfd34d5a2
      lastState: {}
      name: ama-metrics-ksm
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:11:08Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bmvtf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.45
    podIPs:
    - ip: 10.244.1.45
    qosClass: Burstable
    startTime: "2025-05-19T08:11:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      schema-versions: v1
    creationTimestamp: "2025-06-16T00:17:00Z"
    generateName: ama-metrics-node-
    labels:
      controller-revision-hash: 56b9d894f8
      dsName: ama-metrics-node
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: ama-metrics-node-4qwld
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-metrics-node
      uid: a6ceae7f-4e6f-48f1-99ed-c0092043b7ec
    resourceVersion: "12743325"
    uid: be3df395-6111-414f-9ed0-6075bd2f9ce1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: CLUSTER
        value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
      - name: AKSREGION
        value: eastus
      - name: MAC
        value: "true"
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: customEnvironment
        value: azurepubliccloud
      - name: OMS_TLD
        value: opinsights.azure.com
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1m
            resource: limits.cpu
      - name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1Mi
            resource: limits.memory
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: KUBE_STATE_VERSION
        value: 'mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:'
      - name: NODE_EXPORTER_VERSION
      - name: AGENT_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b
      - name: MODE
        value: advanced
      - name: WINMODE
        value: advanced
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
        value: "28333"
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-collector
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 150Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vvlm9
        readOnly: true
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=7777
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vvlm9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config-node
        optional: true
      name: prometheus-config-vol
    - hostPath:
        path: /var/log/containers
        type: ""
      name: host-log-containers
    - hostPath:
        path: /var/log/pods
        type: ""
      name: host-log-pods
    - hostPath:
        path: /etc/pki/ca-trust/source/anchors/
        type: DirectoryOrCreate
      name: anchors-mariner
    - hostPath:
        path: /usr/local/share/ca-certificates/
        type: DirectoryOrCreate
      name: anchors-ubuntu
    - name: kube-api-access-vvlm9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f40fa7f7fc421fdc5b43d839b7ca8e88a6d0afd9390f964ac407517b44a11566
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:a9560e48285975ee2e9f8d1ced439c928ecab5946fa8781c61ecfc513f2107b2
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-16T00:17:12Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vvlm9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://86abca0f90119ae922af6deb82ab049f2dd35b63e6d43c69e87f7deecd87d29f
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images@sha256:f12f4525b16b58bd6ee8215e0e09ba2f030e98d6fc43ed3e8b89518afa7de921
      lastState: {}
      name: prometheus-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-16T00:17:10Z"
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vvlm9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.57
    podIPs:
    - ip: 10.244.1.57
    qosClass: Burstable
    startTime: "2025-06-16T00:17:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      aks.microsoft.com/temp-drain-annotation: 2025-06-22T01:43:07+0000
      schema-versions: v1
    creationTimestamp: "2025-06-16T00:17:16Z"
    generateName: ama-metrics-node-
    labels:
      controller-revision-hash: 56b9d894f8
      dsName: ama-metrics-node
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: ama-metrics-node-8qx9f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-metrics-node
      uid: a6ceae7f-4e6f-48f1-99ed-c0092043b7ec
    resourceVersion: "15553330"
    uid: 5eb4e3d6-c2e6-4034-afb8-4e7e295f4ba4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: CLUSTER
        value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
      - name: AKSREGION
        value: eastus
      - name: MAC
        value: "true"
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: customEnvironment
        value: azurepubliccloud
      - name: OMS_TLD
        value: opinsights.azure.com
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONTAINER_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1m
            resource: limits.cpu
      - name: CONTAINER_MEMORY_LIMIT
        valueFrom:
          resourceFieldRef:
            containerName: prometheus-collector
            divisor: 1Mi
            resource: limits.memory
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: KUBE_STATE_VERSION
        value: 'mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:'
      - name: NODE_EXPORTER_VERSION
      - name: AGENT_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b
      - name: MODE
        value: advanced
      - name: WINMODE
        value: advanced
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
        value: "28333"
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: prometheus-collector
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 150Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jztmx
        readOnly: true
    - args:
      - --secret-namespace=kube-system
      - --secret-name=aad-msi-auth-token
      - --token-server-listening-port=7777
      - --health-server-listening-port=9999
      - --restart-pod-waiting-minutes-on-broken-connection=240
      command:
      - /addon-token-adapter
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZMON_COLLECT_ENV
        value: "false"
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9999
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: addon-token-adapter
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jztmx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config-node
        optional: true
      name: prometheus-config-vol
    - hostPath:
        path: /var/log/containers
        type: ""
      name: host-log-containers
    - hostPath:
        path: /var/log/pods
        type: ""
      name: host-log-pods
    - hostPath:
        path: /etc/pki/ca-trust/source/anchors/
        type: DirectoryOrCreate
      name: anchors-mariner
    - hostPath:
        path: /usr/local/share/ca-certificates/
        type: DirectoryOrCreate
      name: anchors-ubuntu
    - name: kube-api-access-jztmx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-16T00:17:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://67252476f3d61035f61868e4dec6a53c4243809df28f5e5cb76f1bfd2f74c284
      image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
      imageID: mcr.microsoft.com/aks/msi/addon-token-adapter@sha256:a9560e48285975ee2e9f8d1ced439c928ecab5946fa8781c61ecfc513f2107b2
      lastState: {}
      name: addon-token-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-16T00:17:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jztmx
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://5d60c5861f52b19eb543e01a2f9e741395fbf84b8c6dce69856712ee34f0a5f4
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images@sha256:f12f4525b16b58bd6ee8215e0e09ba2f030e98d6fc43ed3e8b89518afa7de921
      lastState: {}
      name: prometheus-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-16T00:17:19Z"
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/containers
        name: host-log-containers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log/pods
        name: host-log-pods
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/mariner
        name: anchors-mariner
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /anchors/ubuntu
        name: anchors-ubuntu
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jztmx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.229
    podIPs:
    - ip: 10.244.0.229
    qosClass: Burstable
    startTime: "2025-06-16T00:17:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agentVersion: 0.0.0.1
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-22T01:43:08Z"
    generateName: ama-metrics-operator-targets-85985d89f7-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 85985d89f7
      rsName: ama-metrics-operator-targets
    name: ama-metrics-operator-targets-85985d89f7-nz9vw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-metrics-operator-targets-85985d89f7
      uid: 2baac704-3f63-4cfb-ad63-393014deaf8b
    resourceVersion: "15553746"
    uid: 886c6347-4c91-4231-ab12-a1010c09657c
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: azuremonitor/metrics.replica.preferred
              operator: In
              values:
              - "true"
          weight: 50
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.azure.com/cluster
              operator: Exists
    containers:
    - args:
      - --enable-prometheus-cr-watcher
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: OTELCOL_NAMESPACE
        value: kube-system
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CLUSTER
        value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
      - name: PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP
        value: azmonitoring.coreos.com
      - name: AGENT_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b-targetallocator
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-targetallocator
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health-ta
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: targetallocator
      ports:
      - containerPort: 8081
        name: health-ta
        protocol: TCP
      resources:
        limits:
          cpu: "5"
          memory: 8Gi
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: ta-config-shared
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hbfj
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: CLUSTER
        value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
      - name: AKSREGION
        value: eastus
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        value: kube-system
      - name: CONTAINER_TYPE
        value: ConfigReaderSidecar
      - name: MODE
        value: advanced
      - name: MAC
        value: "true"
      - name: AZMON_COLLECT_ENV
        value: "false"
      - name: KUBE_STATE_NAME
        value: ama-metrics-ksm
      - name: NODE_EXPORTER_NAME
      - name: NODE_EXPORTER_TARGETPORT
        value: "19100"
      - name: customEnvironment
        value: azurepubliccloud
      - name: WINMODE
      - name: MINIMAL_INGESTION_PROFILE
        value: "true"
      - name: AGENT_VERSION
        value: 6.17.0-main-05-29-2025-1a3ab39b-cfg
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-cfg
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 5
      name: config-reader
      ports:
      - containerPort: 8081
        name: health
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
      - mountPath: /ta-configuration
        name: ta-config-shared
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hbfj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-metrics-serviceaccount
    serviceAccountName: ama-metrics-serviceaccount
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ama-metrics-settings-configmap
        optional: true
      name: settings-vol-config
    - configMap:
        defaultMode: 420
        name: ama-metrics-prometheus-config
        optional: true
      name: prometheus-config-vol
    - name: ama-metrics-tls-secret-volume
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-metrics-mtls-secret
    - emptyDir: {}
      name: ta-config-shared
    - name: kube-api-access-9hbfj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T01:43:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8c19e4c17a7c4b7b082840d9d933ddf7a5cf66d53e6f42eb72fca959db582dc6
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-cfg
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images@sha256:943e5ae3bfc49ba1dbe2a7b4b1f2830e2fb5a2ca43fc10dd57b965f196c6fdc1
      lastState: {}
      name: config-reader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:12Z"
      volumeMounts:
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/prometheus/certs
        name: ama-metrics-tls-secret-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/config/settings/prometheus
        name: prometheus-config-vol
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /ta-configuration
        name: ta-config-shared
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hbfj
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://37174f9742d28b78cad04f17211a9b7f1d7fec6a6b9155b05d9d0ba9b8e0d8f4
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-targetallocator
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images@sha256:3c2f897e9c553eabdfef83bce27225524f424e7c27ca5166d3f3be0011807b87
      lastState:
        terminated:
          containerID: containerd://321a1d63b9443f005fe84742338191f600cd04f890a5e32edff2226ba79b0401
          exitCode: 1
          finishedAt: "2025-06-22T01:43:12Z"
          reason: Error
          startedAt: "2025-06-22T01:43:12Z"
      name: targetallocator
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-22T01:43:13Z"
      volumeMounts:
      - mountPath: /conf
        name: ta-config-shared
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9hbfj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.244.0.36
    podIPs:
    - ip: 10.244.0.36
    qosClass: Burstable
    startTime: "2025-06-22T01:43:08Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      kubernetes.azure.com/azure-cns-configmap-checksum: 8396831874e5aa6f959d904ef1f7a508261f1018e4355946a9be6f0dbb662979
      prometheus.io/port: "10092"
    creationTimestamp: "2025-06-06T00:21:27Z"
    generateName: azure-cns-
    labels:
      controller-revision-hash: 5696ff578f
      k8s-app: azure-cns
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: azure-cns-5l9hv
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cns
      uid: 79b61ab0-8ef2-4848-b67e-e3729ed26e3b
    resourceVersion: "8131591"
    uid: 6e57bd5a-70e2-4e41-a7d0-38d25b4ee76d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    containers:
    - args:
      - -c
      - tcp://$(CNSIpAddress):$(CNSPort)
      - -t
      - $(CNSLogTarget)
      - -o
      - $(CNSLogDir)
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: CNSIpAddress
        value: 127.0.0.1
      - name: CNSPort
        value: "10090"
      - name: CNSLogTarget
        value: stdoutfile
      - name: CNSLogDir
        value: /var/log
      - name: CNS_CONFIGURATION_PATH
        value: /etc/azure-cns/cns_config.json
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_CIDRs
        value: 10.244.0.0/16
      - name: SERVICE_CIDRs
        value: 10.0.0.0/16
      - name: INFRA_VNET_CIDRs
        value: 10.224.0.0/12
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.25
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cns-container
      ports:
      - containerPort: 10090
        hostPort: 10090
        name: api
        protocol: TCP
      - containerPort: 10092
        hostPort: 10092
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /readyz
          port: metrics
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 40m
          memory: 250Mi
        requests:
          cpu: 40m
          memory: 250Mi
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7h8v2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - deploy
      - --skip-verify
      - azure-vnet
      - -o
      - /opt/cni/bin/azure-vnet
      - azure-vnet-telemetry
      - -o
      - /opt/cni/bin/azure-vnet-telemetry
      command:
      - /dropgz
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.21
      imagePullPolicy: IfNotPresent
      name: cni-installer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7h8v2
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-cns
    serviceAccountName: azure-cns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/azure-cns
        type: DirectoryOrCreate
      name: log
    - hostPath:
        path: /var/lib/azure-network
        type: DirectoryOrCreate
      name: cns-state
    - hostPath:
        path: /opt/cni/bin
        type: Directory
      name: cni-bin
    - hostPath:
        path: /var/run/azure-vnet
        type: DirectoryOrCreate
      name: azure-vnet
    - hostPath:
        path: /var/lock/azure-vnet
        type: DirectoryOrCreate
      name: cni-lock
    - hostPath:
        path: /var/run/azure-vnet.json
        type: FileOrCreate
      name: legacy-cni-state
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-conflist
    - configMap:
        defaultMode: 420
        name: cns-config
      name: cns-config
    - name: kube-api-access-7h8v2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:21:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:21:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:21:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:21:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:21:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0bfcd17b8598fad5b62d28bbc8772a13b949492411fd0df10bd6d8d05796e064
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.25
      imageID: mcr.microsoft.com/containernetworking/azure-cns@sha256:b6f65c107c35571051451348cbe8cfdc986fd2cd6ab8feae3d5a3ba0b75c249d
      lastState: {}
      name: cns-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T00:21:31Z"
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7h8v2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://d1417744ada77ee7332e48701cb89066278413657c4bdc6fc86407c3446ce95e
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.21
      imageID: sha256:bbe7dabba5e9c8c133d393311564eb4b5af6c5e7931922b3fc79dd63bb32c1a5
      lastState: {}
      name: cni-installer
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d1417744ada77ee7332e48701cb89066278413657c4bdc6fc86407c3446ce95e
          exitCode: 0
          finishedAt: "2025-06-06T00:21:28Z"
          reason: Completed
          startedAt: "2025-06-06T00:21:28Z"
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7h8v2
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-06-06T00:21:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
      kubernetes.azure.com/azure-cns-configmap-checksum: 8396831874e5aa6f959d904ef1f7a508261f1018e4355946a9be6f0dbb662979
      prometheus.io/port: "10092"
    creationTimestamp: "2025-06-06T00:20:56Z"
    generateName: azure-cns-
    labels:
      controller-revision-hash: 5696ff578f
      k8s-app: azure-cns
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: azure-cns-p2km6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-cns
      uid: 79b61ab0-8ef2-4848-b67e-e3729ed26e3b
    resourceVersion: "8131396"
    uid: 8e0c31eb-a7e6-4086-975d-b9e1ed5605c9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    containers:
    - args:
      - -c
      - tcp://$(CNSIpAddress):$(CNSPort)
      - -t
      - $(CNSLogTarget)
      - -o
      - $(CNSLogDir)
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: CNSIpAddress
        value: 127.0.0.1
      - name: CNSPort
        value: "10090"
      - name: CNSLogTarget
        value: stdoutfile
      - name: CNSLogDir
        value: /var/log
      - name: CNS_CONFIGURATION_PATH
        value: /etc/azure-cns/cns_config.json
      - name: NODENAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_CIDRs
        value: 10.244.0.0/16
      - name: SERVICE_CIDRs
        value: 10.0.0.0/16
      - name: INFRA_VNET_CIDRs
        value: 10.224.0.0/12
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.25
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cns-container
      ports:
      - containerPort: 10090
        hostPort: 10090
        name: api
        protocol: TCP
      - containerPort: 10092
        hostPort: 10092
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /readyz
          port: metrics
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 40m
          memory: 250Mi
        requests:
          cpu: 40m
          memory: 250Mi
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57mz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - deploy
      - --skip-verify
      - azure-vnet
      - -o
      - /opt/cni/bin/azure-vnet
      - azure-vnet-telemetry
      - -o
      - /opt/cni/bin/azure-vnet-telemetry
      command:
      - /dropgz
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.21
      imagePullPolicy: IfNotPresent
      name: cni-installer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57mz5
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-cns
    serviceAccountName: azure-cns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/azure-cns
        type: DirectoryOrCreate
      name: log
    - hostPath:
        path: /var/lib/azure-network
        type: DirectoryOrCreate
      name: cns-state
    - hostPath:
        path: /opt/cni/bin
        type: Directory
      name: cni-bin
    - hostPath:
        path: /var/run/azure-vnet
        type: DirectoryOrCreate
      name: azure-vnet
    - hostPath:
        path: /var/lock/azure-vnet
        type: DirectoryOrCreate
      name: cni-lock
    - hostPath:
        path: /var/run/azure-vnet.json
        type: FileOrCreate
      name: legacy-cni-state
    - hostPath:
        path: /etc/cni/net.d
        type: Directory
      name: cni-conflist
    - configMap:
        defaultMode: 420
        name: cns-config
      name: cns-config
    - name: kube-api-access-57mz5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:20:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:20:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:21:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:21:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-06T00:20:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7f56c0cd8b70ce3462392010841752e353a0259b38d19be389114348d9d163c0
      image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.25
      imageID: mcr.microsoft.com/containernetworking/azure-cns@sha256:b6f65c107c35571051451348cbe8cfdc986fd2cd6ab8feae3d5a3ba0b75c249d
      lastState: {}
      name: cns-container
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-06T00:21:00Z"
      volumeMounts:
      - mountPath: /var/log
        name: log
      - mountPath: /var/lib/azure-network
        name: cns-state
      - mountPath: /etc/azure-cns
        name: cns-config
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /var/run/azure-vnet
        name: azure-vnet
      - mountPath: /var/lock/azure-vnet
        name: cni-lock
      - mountPath: /var/run/azure-vnet.json
        name: legacy-cni-state
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57mz5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://00eca3b6cb6064af54f6b0cce6ff4fdc9cb530027a7b10d6ca775ca6e1462b43
      image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.21
      imageID: sha256:bbe7dabba5e9c8c133d393311564eb4b5af6c5e7931922b3fc79dd63bb32c1a5
      lastState: {}
      name: cni-installer
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://00eca3b6cb6064af54f6b0cce6ff4fdc9cb530027a7b10d6ca775ca6e1462b43
          exitCode: 0
          finishedAt: "2025-06-06T00:20:57Z"
          reason: Completed
          startedAt: "2025-06-06T00:20:57Z"
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-bin
      - mountPath: /etc/cni/net.d
        name: cni-conflist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57mz5
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-06-06T00:20:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-19T08:06:21Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 67b44fd6df
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: azure-ip-masq-agent-szx8s
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: 389e6f6e-9d15-483b-b655-6b28d3c964a5
    resourceVersion: "997"
    uid: f78c4251-df56-4a6c-9447-82462a10b50d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b64598e5a25ca9e50bf8528812c91063fd9d189ca0c8dd57626a9095898200ae
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:25Z"
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-05-19T08:06:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-19T08:06:40Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 67b44fd6df
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: azure-ip-masq-agent-vdsk5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: 389e6f6e-9d15-483b-b655-6b28d3c964a5
    resourceVersion: "1287"
    uid: 2acd9f35-8c28-4a9d-8326-8bab5bdde7d1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://421bad041ce8252472878cb0deb1c35c3826a33730765650d68f7160d251279d
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:43Z"
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-05-19T08:06:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-19T08:07:41Z"
    generateName: azure-wi-webhook-controller-manager-7f68bf8b86-
    labels:
      azure-workload-identity.io/system: "true"
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7f68bf8b86
    name: azure-wi-webhook-controller-manager-7f68bf8b86-ks6xp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: azure-wi-webhook-controller-manager-7f68bf8b86
      uid: 56799691-db5c-49a4-86e5-0e2d40fcb83c
    resourceVersion: "1854"
    uid: c0c7dffa-e085-4446-b553-1f71a6669716
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - -log-level=info
      - -disable-cert-rotation=true
      - -webhook-cert-dir=/certs
      command:
      - /manager
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: AZURE_ENVIRONMENT
        value: AZUREPUBLICCLOUD
      - name: AZURE_TENANT_ID
        value: 1076231c-4971-42f2-8c33-aa8680e81ea8
      image: mcr.microsoft.com/oss/azure/workload-identity/webhook:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9443
        name: webhook-server
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7gmt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-wi-webhook-admin
    serviceAccountName: azure-wi-webhook-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: azure-wi-webhook-server-cert
    - name: kube-api-access-r7gmt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e32fda26071edf1c9965e78fe14c8d7836390d1552022d98e51e29d17f49835b
      image: mcr.microsoft.com/oss/azure/workload-identity/webhook:v1.5.0
      imageID: mcr.microsoft.com/oss/azure/workload-identity/webhook@sha256:c7f8a57868f0ad385d94beba7b0068b2952093f70d928a69b50fd2fee4110386
      lastState: {}
      name: manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:07:43Z"
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7gmt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.153
    podIPs:
    - ip: 10.244.1.153
    qosClass: Burstable
    startTime: "2025-05-19T08:07:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-25T00:58:55Z"
    generateName: azure-wi-webhook-controller-manager-7f68bf8b86-
    labels:
      azure-workload-identity.io/system: "true"
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7f68bf8b86
    name: azure-wi-webhook-controller-manager-7f68bf8b86-mmv4s
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: azure-wi-webhook-controller-manager-7f68bf8b86
      uid: 56799691-db5c-49a4-86e5-0e2d40fcb83c
    resourceVersion: "2611748"
    uid: e926cf61-8b71-4900-ad98-c13743ac6f82
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - -log-level=info
      - -disable-cert-rotation=true
      - -webhook-cert-dir=/certs
      command:
      - /manager
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: AZURE_ENVIRONMENT
        value: AZUREPUBLICCLOUD
      - name: AZURE_TENANT_ID
        value: 1076231c-4971-42f2-8c33-aa8680e81ea8
      image: mcr.microsoft.com/oss/azure/workload-identity/webhook:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9443
        name: webhook-server
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzd25
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-wi-webhook-admin
    serviceAccountName: azure-wi-webhook-admin
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: azure-wi-webhook-server-cert
    - name: kube-api-access-dzd25
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fa3a9e681630aa2d3aa18bb3fe663f461b7f2ab90132958c07619f3482d245b2
      image: mcr.microsoft.com/oss/azure/workload-identity/webhook:v1.5.0
      imageID: mcr.microsoft.com/oss/azure/workload-identity/webhook@sha256:c7f8a57868f0ad385d94beba7b0068b2952093f70d928a69b50fd2fee4110386
      lastState: {}
      name: manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:58:56Z"
      volumeMounts:
      - mountPath: /certs
        name: cert
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzd25
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.204
    podIPs:
    - ip: 10.244.1.204
    qosClass: Burstable
    startTime: "2025-05-25T00:58:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T00:25:24Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 6db89bc5fb
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: cloud-node-manager-dzgqm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 00f4829c-8389-40f6-afb4-fb5e6a09ae6c
    resourceVersion: "4906608"
    uid: 72b5fdad-09b5-4a11-a3ab-4c68b4eda838
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qphq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-6qphq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://af02f65905ae39202305a2cf565e38a017b2997694d6306e4603ba87f2913fd7
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6
      imageID: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager@sha256:b1201e7ce23e574f8b7e391ff061bc00f2d82e1b0b943f3770924b1f88db887e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:27Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qphq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-05-30T00:25:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T00:25:18Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 6db89bc5fb
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: cloud-node-manager-tsc76
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 00f4829c-8389-40f6-afb4-fb5e6a09ae6c
    resourceVersion: "4906532"
    uid: d4dbb47c-f039-4dff-a61c-9da174bd96d7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ldn6l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-ldn6l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2ed724c27c63ee4572811e530dcdbce51b216dda68e31a0ab896624ba2da4386
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6
      imageID: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager@sha256:b1201e7ce23e574f8b7e391ff061bc00f2d82e1b0b943f3770924b1f88db887e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:20Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ldn6l
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-05-30T00:25:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2025-05-25T00:58:55Z"
    generateName: coredns-57d886c994-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 57d886c994
      version: v20
    name: coredns-57d886c994-qr5lk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-57d886c994
      uid: ffc004ca-d428-4c16-91ba-83c326e529dd
    resourceVersion: "2611554"
    uid: 681d5b8f-ad97-49fb-8f1f-ba07a38f1924
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2h5c7
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-2h5c7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://07648297c4bba5222aec682b5d2a58984cda53abd71dd12bf1c053779aad5301
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5
      imageID: mcr.microsoft.com/oss/v2/kubernetes/coredns@sha256:336bb31f1ca3fffee3f4e4609fd79c90a90df4f4810088ff5c431173dbd9ea37
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:58:57Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2h5c7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.126
    podIPs:
    - ip: 10.244.1.126
    qosClass: Burstable
    startTime: "2025-05-25T00:58:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2025-05-25T00:59:00Z"
    generateName: coredns-57d886c994-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 57d886c994
      version: v20
    name: coredns-57d886c994-v2zzs
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-57d886c994
      uid: ffc004ca-d428-4c16-91ba-83c326e529dd
    resourceVersion: "2611685"
    uid: 06d48736-7445-41c6-a743-c0c570d67a56
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5m8qx
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-5m8qx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1d13bb77f79e46fbe99bf0c62ed9691f9b9d89f4bfd91be6a2e68e7e98af834c
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5
      imageID: mcr.microsoft.com/oss/v2/kubernetes/coredns@sha256:336bb31f1ca3fffee3f4e4609fd79c90a90df4f4810088ff5c431173dbd9ea37
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:59:01Z"
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5m8qx
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.250
    podIPs:
    - ip: 10.244.1.250
    qosClass: Burstable
    startTime: "2025-05-25T00:59:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-05-25T00:58:55Z"
    generateName: coredns-autoscaler-55bcd876cc-
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 55bcd876cc
    name: coredns-autoscaler-55bcd876cc-zxstx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-autoscaler-55bcd876cc
      uid: 66ea956b-98f8-449f-93b4-bd1b9ebddad6
    resourceVersion: "2611579"
    uid: 0933d6df-e6ce-4d68-8d8a-2f924a8b4557
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=coredns-autoscaler
      - --target=deployment/coredns
      - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
      - --logtostderr=true
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /last-poll
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-znjrm
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns-autoscaler
    serviceAccountName: coredns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-znjrm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fb51114ca2be4e84770300ec7faf27daf123ce09224bcd5a780d8767cad7fff5
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler@sha256:a3c026f5dc0cc4d4be987bc0a4c858b01921655123a1044759744cbd3218d0f8
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:58:58Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-znjrm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.43
    podIPs:
    - ip: 10.244.1.43
    qosClass: Burstable
    startTime: "2025-05-25T00:58:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T00:25:23Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 6b5ffc665f
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: csi-azuredisk-node-fzj2b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: 5551cafe-8ed9-48af-9608-1791395ddf4d
    resourceVersion: "4906611"
    uid: 5a90d440-4805-400e-91b0-210d3f494603
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44v9h
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44v9h
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44v9h
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-44v9h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://824c4dc1d1fc674c29c60ee751e7cdef3e29ba9733a17db1c035a72ac5036102
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi@sha256:469c965f32811a36d9e82c0c099cb69634d9de8e0e97bf19425e79bc3c941a7e
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:27Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44v9h
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://a14a9a0e4d86c4827a48979c27f9cb59238b07d4db2200dabfc10bba80b646fc
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:24Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44v9h
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://c79f01f3b19b3873a0a6a61707dff76df402ddea3c7917129f55fd814f66d330
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:24Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44v9h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-05-30T00:25:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T00:25:28Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 6b5ffc665f
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: csi-azuredisk-node-kmmxn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: 5551cafe-8ed9-48af-9608-1791395ddf4d
    resourceVersion: "4906659"
    uid: c9c9b2b4-a8a0-4d99-aa30-0f1a1e2509f5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79n5s
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79n5s
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79n5s
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-79n5s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T00:25:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://884e2d2e42a7825998c0efa3f2a3cf1d2b2066615e51ea3fcb991a47ac77eb0b
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi@sha256:469c965f32811a36d9e82c0c099cb69634d9de8e0e97bf19425e79bc3c941a7e
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:30Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79n5s
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://f5e2b88735360e828105e8283566180bf9eb3b3e8d0b2e577b00c8dc5dbe1e05
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:29Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79n5s
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://da46c20cc63d4c66daa22253a3eff78ad48d2986900ff02d2b39f649b4240257
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T00:25:29Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79n5s
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-05-30T00:25:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-19T08:06:40Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 5f6df999b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azurefile-node-92wtp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 924fb994-dfc9-4c55-bd01-28e852690d85
    resourceVersion: "1381"
    uid: 8600f8cf-7004-4276-819d-36e4ddc6af47
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5hh4q
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5hh4q
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5hh4q
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-5hh4q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://35ee2fb332ee7f7161b4a99d10726d5508980aef6db814735db33ceca302950c
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5
      imageID: sha256:07284e22338dd53a6f7e15a5a91333a27fe1b817c16476b050c98728e2ee4ba5
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:45Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5hh4q
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://365cd482f428d5394e499fd0d0fcce4a50d022d05c594ae0ce4008179c62270b
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:44Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5hh4q
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://b5a4ba22a3fecfba48fa88561f0be106259f659cbb1db9d2d6b19792497b4c93
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:45Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5hh4q
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-05-19T08:06:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-19T08:06:21Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 5f6df999b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
    name: csi-azurefile-node-kng44
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 924fb994-dfc9-4c55-bd01-28e852690d85
    resourceVersion: "1034"
    uid: 550ee381-70ff-4991-acca-49c37e3f6698
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2thp
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2thp
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2thp
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-k2thp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:06:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8c699a4263469e1ec74ef56d458b924eb1cbadb897e52ae9c2ff404862b5fc54
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5
      imageID: sha256:07284e22338dd53a6f7e15a5a91333a27fe1b817c16476b050c98728e2ee4ba5
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:29Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2thp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://31c8a01d4be48921e367b010ff9534caa7fdfbfa1da5c85760f777b00678e2be
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:25Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2thp
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://556256799979716f2b52c0530628d50430f1f22038adbf9de53398eb82a17a9b
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:06:28Z"
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2thp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-05-19T08:06:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-19T08:07:31Z"
    generateName: eraser-controller-manager-8694d54d99-
    labels:
      app.kubernetes.io/name: image-cleaner
      control-plane: controller-manager
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 8694d54d99
    name: eraser-controller-manager-8694d54d99-lmndn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: eraser-controller-manager-8694d54d99
      uid: e3f2913a-726d-43f9-9ec8-e9ec829eb61a
    resourceVersion: "1775"
    uid: 91d89d39-59fc-41f2-9f3f-2863e48e2167
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - --config=/config/controller_manager_config.yaml
      command:
      - /manager
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OTEL_SERVICE_NAME
        value: eraser-manager
      image: mcr.microsoft.com/oss/eraser/eraser-manager:v1.3.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "2"
          memory: 600Mi
        requests:
          cpu: 100m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /config
        name: manager-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sf5xs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: eraser-controller-manager
    serviceAccountName: eraser-controller-manager
    terminationGracePeriodSeconds: 10
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: eraser-manager-config
      name: manager-config
    - name: kube-api-access-sf5xs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-19T08:07:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://457559dec877c999057cf3c149dfa94e80d32893723fde03e6138faf24fba073
      image: mcr.microsoft.com/oss/eraser/eraser-manager:v1.3.1
      imageID: mcr.microsoft.com/oss/eraser/eraser-manager@sha256:dbbbe7450a3147d079cddaa75f47cbb04e004966f7a14da2a765a9b2bff69fd8
      lastState: {}
      name: manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-19T08:07:34Z"
      volumeMounts:
      - mountPath: /config
        name: manager-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sf5xs
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.234
    podIPs:
    - ip: 10.244.1.234
    qosClass: Burstable
    startTime: "2025-05-19T08:07:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: a0bb96253fccb141cf0164336fabce09841592ac858f0bb4c2c0dd14a04fce5f
      checksum/service-account-key: 5afa97a989c2287a2923afec333d04949a99969ca7d03dce773349e1210088dc
    creationTimestamp: "2025-05-25T00:58:55Z"
    generateName: konnectivity-agent-7ffd9d8654-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7ffd9d8654
    name: konnectivity-agent-7ffd9d8654-c5jdr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-7ffd9d8654
      uid: 2fe29be1-496c-4303-844b-14b3dbe7d591
    resourceVersion: "2611491"
    uid: fe85db02-d4ea-41cb-b929-15056609ed06
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e7fce4a91628f9113b7d7d41990796a404dafc6900fa50a83385a3fc5d0e72e6
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imageID: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent@sha256:d58bcadc0a5c54a5be409f3473be0dd5639b111c8a9a7dd1827c8f77d76945e4
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:58:55Z"
      volumeMounts:
      - mountPath: /certs
        name: certs
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.171
    podIPs:
    - ip: 10.244.1.171
    qosClass: Burstable
    startTime: "2025-05-25T00:58:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: a0bb96253fccb141cf0164336fabce09841592ac858f0bb4c2c0dd14a04fce5f
      checksum/service-account-key: 5afa97a989c2287a2923afec333d04949a99969ca7d03dce773349e1210088dc
    creationTimestamp: "2025-05-25T00:53:57Z"
    generateName: konnectivity-agent-7ffd9d8654-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7ffd9d8654
    name: konnectivity-agent-7ffd9d8654-mzvt7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-7ffd9d8654
      uid: 2fe29be1-496c-4303-844b-14b3dbe7d591
    resourceVersion: "2609570"
    uid: 954efc24-85ea-4bcf-9531-1deac0b946ce
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:53:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:53:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:53:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:53:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:53:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad9be887cc067fda9baa4ceb65f7709c615ccf0eec9404b39decd319ca0387d3
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imageID: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent@sha256:d58bcadc0a5c54a5be409f3473be0dd5639b111c8a9a7dd1827c8f77d76945e4
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:53:58Z"
      volumeMounts:
      - mountPath: /certs
        name: certs
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.12
    podIPs:
    - ip: 10.244.1.12
    qosClass: Burstable
    startTime: "2025-05-25T00:53:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-05-25T00:58:55Z"
    generateName: konnectivity-agent-autoscaler-679b77b4f-
    labels:
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 679b77b4f
    name: konnectivity-agent-autoscaler-679b77b4f-92jqf
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-autoscaler-679b77b4f
      uid: 298db080-28d6-4790-a63d-87c0cf387324
    resourceVersion: "2611582"
    uid: d8198e07-3a42-4925-baf1-4b1626715971
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=konnectivity-agent-autoscaler
      - --target=deployment/konnectivity-agent
      - --logtostderr=true
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /last-poll
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      resources:
        limits:
          cpu: 350m
          memory: 512M
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cn79f
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent-autoscaler
    serviceAccountName: konnectivity-agent-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-cn79f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4fd379c07cf5af946d4be1444da4c1c6be68549da6fda27159b46f5be29a56c3
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler@sha256:a3c026f5dc0cc4d4be987bc0a4c858b01921655123a1044759744cbd3218d0f8
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:58:58Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cn79f
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.8
    podIPs:
    - ip: 10.244.1.8
    qosClass: Burstable
    startTime: "2025-05-25T00:58:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-25T00:53:58Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 568ccd5945
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: kube-proxy-5mkfp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 313c38bf-b5a0-4589-8ece-88c94c9f5aa2
    resourceVersion: "2609624"
    uid: 4ee8a538-23c8-46c3-97da-3365b60d3b91
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=InterfaceNamePrefix
      - --pod-interface-name-prefix=azv
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jf7cl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jf7cl
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-jf7cl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:53:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c64712fdb06c4b1f35b5348d2fc00430964e280f9cb5eb3606cb4dadcbe581be
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:fa7e87099b634ff6432f5e7ea8ee622e0d25355f7b6fbe7ded06fb3ffa1f6630
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:54:00Z"
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jf7cl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://009c0e0045fb42023c4c47ed5afa66a3ab06bce5623801e643ad96d2daa43408
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:fa7e87099b634ff6432f5e7ea8ee622e0d25355f7b6fbe7ded06fb3ffa1f6630
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://009c0e0045fb42023c4c47ed5afa66a3ab06bce5623801e643ad96d2daa43408
          exitCode: 0
          finishedAt: "2025-05-25T00:53:59Z"
          reason: Completed
          startedAt: "2025-05-25T00:53:59Z"
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jf7cl
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-05-25T00:53:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-25T00:54:01Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 568ccd5945
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: kube-proxy-hn9ht
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 313c38bf-b5a0-4589-8ece-88c94c9f5aa2
    resourceVersion: "2609672"
    uid: bc4a82a3-9764-49d2-b266-b59b9a567b8b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=InterfaceNamePrefix
      - --pod-interface-name-prefix=azv
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c7qc6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c7qc6
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-c7qc6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:54:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f4fb1fd55b018a092c5c15ee0f9d1e45a2cc65d0a7c1afd30b21d5c08d98375e
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:fa7e87099b634ff6432f5e7ea8ee622e0d25355f7b6fbe7ded06fb3ffa1f6630
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:54:03Z"
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c7qc6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://87eacc2499f8dbbf0b34af04e6cd479f6393b50c66788992d4c01f99137ccbae
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:fa7e87099b634ff6432f5e7ea8ee622e0d25355f7b6fbe7ded06fb3ffa1f6630
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://87eacc2499f8dbbf0b34af04e6cd479f6393b50c66788992d4c01f99137ccbae
          exitCode: 0
          finishedAt: "2025-05-25T00:54:03Z"
          reason: Completed
          startedAt: "2025-05-25T00:54:03Z"
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c7qc6
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-05-25T00:54:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-25T01:00:10Z"
    generateName: metrics-server-6d968d6d47-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6d968d6d47
    name: metrics-server-6d968d6d47-4jdg8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-6d968d6d47
      uid: 41ffc5ef-03e7-4023-9473-3406e3f2ec08
    resourceVersion: "2612571"
    uid: 441d924f-71a1-4491-b2bb-5442c2a38c8f
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=150m
      - --extra-cpu=0.5m
      - --memory=100Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnps5
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 151m
          memory: 108Mi
        requests:
          cpu: 151m
          memory: 108Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnps5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-fnps5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T01:00:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T01:00:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T01:01:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T01:01:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T01:00:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5d5969094fd7c7286004ef4336a9741b0a4c7384a86e5e34984acd9eac76c25c
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
      imageID: mcr.microsoft.com/oss/v2/kubernetes/metrics-server@sha256:bdd8cfd650eec9bf323f1a1967e25aa8bb57593002631c087f20865ddc2b3a9c
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T01:00:12Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnps5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://35393753bed2bffb08763d800c68c369f0d618b62ae1962fa3b951e0b02dbe1c
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer@sha256:125fd6db5aee9b76540e0ce7c60b70f4d029697d1b369a2036a0760355a775a2
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T01:00:12Z"
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fnps5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.226
    podIPs:
    - ip: 10.244.1.226
    qosClass: Burstable
    startTime: "2025-05-25T01:00:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-25T00:58:55Z"
    generateName: metrics-server-6d968d6d47-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6d968d6d47
    name: metrics-server-6d968d6d47-k6n2k
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-6d968d6d47
      uid: 41ffc5ef-03e7-4023-9473-3406e3f2ec08
    resourceVersion: "2612142"
    uid: b2f6cc7c-9223-41c0-be0c-30d6198b78f3
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=150m
      - --extra-cpu=0.5m
      - --memory=100Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4h9z5
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 151m
          memory: 108Mi
        requests:
          cpu: 151m
          memory: 108Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4h9z5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-4h9z5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T01:00:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T01:00:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f050fba991cbab06d0418cbb1c5ff6e86bac654053eaa67540a0ac5050b37d6f
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
      imageID: mcr.microsoft.com/oss/v2/kubernetes/metrics-server@sha256:bdd8cfd650eec9bf323f1a1967e25aa8bb57593002631c087f20865ddc2b3a9c
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:59:02Z"
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4h9z5
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://719a1318ac3ce166c7c022882a12c0cdaa4e8cec9a1815ab5c5da2870df036f6
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imageID: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer@sha256:125fd6db5aee9b76540e0ce7c60b70f4d029697d1b369a2036a0760355a775a2
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:58:59Z"
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4h9z5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    phase: Running
    podIP: 10.244.1.169
    podIPs:
    - ip: 10.244.1.169
    qosClass: Burstable
    startTime: "2025-05-25T00:58:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: f1d125c06bef154eeefcc35e47ec9a1db035dfb1126d8e74b46c683c5e2d9133
    creationTimestamp: "2025-06-12T00:21:09Z"
    generateName: retina-agent-
    labels:
      controller-revision-hash: "5985486558"
      k8s-app: retina
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: retina-agent-5hlmr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: retina-agent
      uid: 24dce887-0c29-4807-a5d9-8002a14c85a9
    resourceVersion: "10901042"
    uid: 03a121f5-11fd-43d6-bfab-fee91382f321
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000001
    containers:
    - args:
      - --health-probe-bind-address=:18081
      - --metrics-bind-address=:18080
      - --config
      - /retina/config/config.yaml
      command:
      - /retina/controller
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: mcr.microsoft.com/containernetworking/retina-agent:v0.0.34
      imagePullPolicy: IfNotPresent
      name: retina
      ports:
      - containerPort: 10093
        hostPort: 10093
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: 10093
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 45
        successThreshold: 1
        timeoutSeconds: 30
      resources:
        limits:
          cpu: 500m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        capabilities:
          add:
          - SYS_ADMIN
          - SYS_RESOURCE
          - NET_ADMIN
          - NET_RAW
          - IPC_LOCK
          drop:
          - ALL
        privileged: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: debug
      - mountPath: /sys/kernel/tracing
        name: trace
      - mountPath: /sys/fs/bpf
        name: bpf
      - mountPath: /sys/fs/cgroup
        name: cgroup
      - mountPath: /tmp
        name: tmp
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /etc/os-release
        name: host-os-release
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r4rlz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - --config
      - /retina/config/config.yaml
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/containernetworking/retina-init:v0.0.34
      imagePullPolicy: IfNotPresent
      name: retina-agent-init
      resources: {}
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /sys/fs/bpf
        mountPropagation: Bidirectional
        name: bpf
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r4rlz
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: retina-agent
    serviceAccountName: retina-agent
    terminationGracePeriodSeconds: 90
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: debug
    - hostPath:
        path: /sys/kernel/tracing
        type: ""
      name: trace
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf
    - hostPath:
        path: /sys/fs/cgroup
        type: ""
      name: cgroup
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 420
        name: retina-config
      name: config
    - hostPath:
        path: /var/run/cilium
        type: DirectoryOrCreate
      name: cilium
    - hostPath:
        path: /etc/os-release
        type: FileOrCreate
      name: host-os-release
    - name: kube-api-access-r4rlz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:21:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:21:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:21:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:21:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:21:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://11874c17ef7eef217d29b81d1afe8046cb41ed323c33bd502b1cb326e3ccead6
      image: mcr.microsoft.com/containernetworking/retina-agent:v0.0.34
      imageID: mcr.microsoft.com/containernetworking/retina-agent@sha256:91c7d26674a42fe5371ddb9feb3ca6f64303b8d484b3fd11b938d9b00355196c
      lastState: {}
      name: retina
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-12T00:21:22Z"
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: debug
      - mountPath: /sys/kernel/tracing
        name: trace
      - mountPath: /sys/fs/bpf
        name: bpf
      - mountPath: /sys/fs/cgroup
        name: cgroup
      - mountPath: /tmp
        name: tmp
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /etc/os-release
        name: host-os-release
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r4rlz
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://8362e342b40880696a08251d0affb1b8a3d695d91ef508be4438e4554f1080ef
      image: mcr.microsoft.com/containernetworking/retina-init:v0.0.34
      imageID: mcr.microsoft.com/containernetworking/retina-init@sha256:1449b37d638ce1b88b00d5d61ccb6bf60d1553b84d9acf8012c1b0e5264c49cc
      lastState: {}
      name: retina-agent-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8362e342b40880696a08251d0affb1b8a3d695d91ef508be4438e4554f1080ef
          exitCode: 0
          finishedAt: "2025-06-12T00:21:12Z"
          reason: Completed
          startedAt: "2025-06-12T00:21:12Z"
      volumeMounts:
      - mountPath: /sys/fs/bpf
        name: bpf
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r4rlz
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.5
    podIPs:
    - ip: 10.224.0.5
    qosClass: Burstable
    startTime: "2025-06-12T00:21:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: f1d125c06bef154eeefcc35e47ec9a1db035dfb1126d8e74b46c683c5e2d9133
    creationTimestamp: "2025-06-12T00:21:55Z"
    generateName: retina-agent-
    labels:
      controller-revision-hash: "5985486558"
      k8s-app: retina
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: retina-agent-f8vzn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: retina-agent
      uid: 24dce887-0c29-4807-a5d9-8002a14c85a9
    resourceVersion: "10901298"
    uid: 045242f6-7888-4e89-8ed5-50f782f34447
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-agentpool-28010283-vmss000000
    containers:
    - args:
      - --health-probe-bind-address=:18081
      - --metrics-bind-address=:18080
      - --config
      - /retina/config/config.yaml
      command:
      - /retina/controller
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: mcr.microsoft.com/containernetworking/retina-agent:v0.0.34
      imagePullPolicy: IfNotPresent
      name: retina
      ports:
      - containerPort: 10093
        hostPort: 10093
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: 10093
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 45
        successThreshold: 1
        timeoutSeconds: 30
      resources:
        limits:
          cpu: 500m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 200Mi
      securityContext:
        capabilities:
          add:
          - SYS_ADMIN
          - SYS_RESOURCE
          - NET_ADMIN
          - NET_RAW
          - IPC_LOCK
          drop:
          - ALL
        privileged: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: debug
      - mountPath: /sys/kernel/tracing
        name: trace
      - mountPath: /sys/fs/bpf
        name: bpf
      - mountPath: /sys/fs/cgroup
        name: cgroup
      - mountPath: /tmp
        name: tmp
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /etc/os-release
        name: host-os-release
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9vxk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - --config
      - /retina/config/config.yaml
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
      image: mcr.microsoft.com/containernetworking/retina-init:v0.0.34
      imagePullPolicy: IfNotPresent
      name: retina-agent-init
      resources: {}
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /sys/fs/bpf
        mountPropagation: Bidirectional
        name: bpf
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9vxk
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: retina-agent
    serviceAccountName: retina-agent
    terminationGracePeriodSeconds: 90
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: debug
    - hostPath:
        path: /sys/kernel/tracing
        type: ""
      name: trace
    - hostPath:
        path: /sys/fs/bpf
        type: ""
      name: bpf
    - hostPath:
        path: /sys/fs/cgroup
        type: ""
      name: cgroup
    - emptyDir: {}
      name: tmp
    - configMap:
        defaultMode: 420
        name: retina-config
      name: config
    - hostPath:
        path: /var/run/cilium
        type: DirectoryOrCreate
      name: cilium
    - hostPath:
        path: /etc/os-release
        type: FileOrCreate
      name: host-os-release
    - name: kube-api-access-q9vxk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:21:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:22:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:22:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:22:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-12T00:21:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://275408c77e668d937ae6249cbde4e9d51d7cb3628e2bae6c3da78fe5b0624c8e
      image: mcr.microsoft.com/containernetworking/retina-agent:v0.0.34
      imageID: mcr.microsoft.com/containernetworking/retina-agent@sha256:91c7d26674a42fe5371ddb9feb3ca6f64303b8d484b3fd11b938d9b00355196c
      lastState: {}
      name: retina
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-12T00:22:07Z"
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: debug
      - mountPath: /sys/kernel/tracing
        name: trace
      - mountPath: /sys/fs/bpf
        name: bpf
      - mountPath: /sys/fs/cgroup
        name: cgroup
      - mountPath: /tmp
        name: tmp
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /etc/os-release
        name: host-os-release
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9vxk
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    initContainerStatuses:
    - containerID: containerd://3464f4f98eb154880059a0a5459f9243608497c3242173377c32d7152f79fe89
      image: mcr.microsoft.com/containernetworking/retina-init:v0.0.34
      imageID: mcr.microsoft.com/containernetworking/retina-init@sha256:1449b37d638ce1b88b00d5d61ccb6bf60d1553b84d9acf8012c1b0e5264c49cc
      lastState: {}
      name: retina-agent-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3464f4f98eb154880059a0a5459f9243608497c3242173377c32d7152f79fe89
          exitCode: 0
          finishedAt: "2025-06-12T00:21:58Z"
          reason: Completed
          startedAt: "2025-06-12T00:21:58Z"
      volumeMounts:
      - mountPath: /sys/fs/bpf
        name: bpf
      - mountPath: /var/run/cilium
        name: cilium
      - mountPath: /retina/config
        name: config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q9vxk
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.224.0.4
    podIPs:
    - ip: 10.224.0.4
    qosClass: Burstable
    startTime: "2025-06-12T00:21:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      istio.io/rev: default
      kubectl.kubernetes.io/default-container: python-demo
      kubectl.kubernetes.io/default-logs-container: python-demo
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      proxy.istio.io/config: '{"proxyStatsMatcher": {"inclusionRegexps": [".*adaptive_concurrency.*"]}}'
      sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
    creationTimestamp: "2025-05-25T00:58:55Z"
    generateName: python-demo-6d7dcd759f-
    labels:
      app: python-demo
      pod-template-hash: 6d7dcd759f
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: python-demo
      service.istio.io/canonical-revision: latest
    name: python-demo-6d7dcd759f-gsmb6
    namespace: webservice
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: python-demo-6d7dcd759f
      uid: 7c1897ef-1ca3-4d34-836f-44bf22786655
    resourceVersion: "2611737"
    uid: f41df097-2326-4ff7-a155-56bff6cfcec9
  spec:
    containers:
    - args:
      - pip install flask requests && python -u app.py
      command:
      - sh
      - -c
      image: python:3.10-slim
      imagePullPolicy: IfNotPresent
      name: python-demo
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app
        name: app-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9lt2
        readOnly: true
      workingDir: /app
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:info
      env:
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: ISTIO_CPU_LIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: PROXY_CONFIG
        value: |
          {"proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_CONFIG_XDS_AGENT":"true"},"meshId":"cluster-1","proxyStatsMatcher":{"inclusionRegexps":[".*adaptive_concurrency.*"]}}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"containerPort":8080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: python-demo
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.memory
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ISTIO_META_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: python-demo
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/webservice/deployments/python-demo
      - name: ISTIO_META_MESH_ID
        value: cluster-1
      - name: TRUST_DOMAIN
        value: cluster-1
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      - name: ISTIO_META_CLUSTER_ID
        value: cluster-1
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 4
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      startupProbe:
        failureThreshold: 600
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9lt2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - istio-iptables
      - -p
      - "15001"
      - -z
      - "15006"
      - -u
      - "1337"
      - -m
      - REDIRECT
      - -i
      - '*'
      - -x
      - ""
      - -b
      - '*'
      - -d
      - 15090,15021,15020
      - --log_output_level=default:info
      env:
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_CONFIG_XDS_AGENT
        value: "true"
      image: docker.io/istio/proxyv2:1.25.2
      imagePullPolicy: IfNotPresent
      name: istio-init
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: false
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9lt2
        readOnly: true
    nodeName: aks-agentpool-28010283-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - name: istio-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: istio-ca
            expirationSeconds: 43200
            path: istio-token
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - configMap:
        defaultMode: 420
        name: python-demo-code
      name: app-volume
    - name: kube-api-access-l9lt2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:59:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-25T00:58:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7a3cd18ad3aca83bfc083273dfaf687b172db29d7c8a87a029268c6b3ef28526
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:59:04Z"
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /var/run/secrets/tokens
        name: istio-token
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9lt2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://1013424a9318996de9dd7318d2e64d49447015c459f95406c947cad9029735f8
      image: docker.io/library/python:3.10-slim
      imageID: docker.io/library/python@sha256:49454d2bf78a48f217eb25ecbcb4b5face313fea6a6e82706465a6990303ada2
      lastState: {}
      name: python-demo
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-25T00:59:04Z"
      volumeMounts:
      - mountPath: /app
        name: app-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9lt2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.224.0.5
    hostIPs:
    - ip: 10.224.0.5
    initContainerStatuses:
    - containerID: containerd://fd491bb92990d1ad6d6aff551b88f79a867aa0eba9d7971c1d91cee9ed9ecb2f
      image: docker.io/istio/proxyv2:1.25.2
      imageID: docker.io/istio/proxyv2@sha256:49ed9dd2c06383c0a847877a707a3563d0968d83779ad8d13a0c022a48c5c407
      lastState: {}
      name: istio-init
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fd491bb92990d1ad6d6aff551b88f79a867aa0eba9d7971c1d91cee9ed9ecb2f
          exitCode: 0
          finishedAt: "2025-05-25T00:58:59Z"
          reason: Completed
          startedAt: "2025-05-25T00:58:59Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l9lt2
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.1.106
    podIPs:
    - ip: 10.244.1.106
    qosClass: Burstable
    startTime: "2025-05-25T00:58:55Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"applicationset-controller","app.kubernetes.io/name":"argocd-applicationset-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-applicationset-controller","namespace":"argocd"},"spec":{"ports":[{"name":"webhook","port":7000,"protocol":"TCP","targetPort":"webhook"},{"name":"metrics","port":8080,"protocol":"TCP","targetPort":"metrics"}],"selector":{"app.kubernetes.io/name":"argocd-applicationset-controller"}}}
    creationTimestamp: "2025-06-19T07:38:32Z"
    labels:
      app.kubernetes.io/component: applicationset-controller
      app.kubernetes.io/name: argocd-applicationset-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-applicationset-controller
    namespace: argocd
    resourceVersion: "14268415"
    uid: 1f198f2e-ab94-4a49-be9c-6f8892e23eec
  spec:
    clusterIP: 10.0.138.216
    clusterIPs:
    - 10.0.138.216
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: webhook
      port: 7000
      protocol: TCP
      targetPort: webhook
    - name: metrics
      port: 8080
      protocol: TCP
      targetPort: metrics
    selector:
      app.kubernetes.io/name: argocd-applicationset-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"appProtocol":"TCP","name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
    creationTimestamp: "2025-06-19T07:38:32Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "14268423"
    uid: 3c41a1a1-32e3-4270-adde-3894ce5623ce
  spec:
    clusterIP: 10.0.85.179
    clusterIPs:
    - 10.0.85.179
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: TCP
      name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
    creationTimestamp: "2025-06-19T07:38:33Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "14268429"
    uid: 18b53230-eaeb-4e53-afd1-fc3f0574bff2
  spec:
    clusterIP: 10.0.19.64
    clusterIPs:
    - 10.0.19.64
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/name":"argocd-notifications-controller-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-notifications-controller-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":9001,"protocol":"TCP","targetPort":9001}],"selector":{"app.kubernetes.io/name":"argocd-notifications-controller"}}}
    creationTimestamp: "2025-06-19T07:38:34Z"
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/name: argocd-notifications-controller-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-notifications-controller-metrics
    namespace: argocd
    resourceVersion: "14268438"
    uid: 3fd3524a-73bb-4de9-9af1-57b06147f3a2
  spec:
    clusterIP: 10.0.240.80
    clusterIPs:
    - 10.0.240.80
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app.kubernetes.io/name: argocd-notifications-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
    creationTimestamp: "2025-06-19T07:38:35Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "14268444"
    uid: 2bcabec1-cba9-4847-9926-f0b10b711a1e
  spec:
    clusterIP: 10.0.141.126
    clusterIPs:
    - 10.0.141.126
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
    creationTimestamp: "2025-06-19T07:38:35Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "14268451"
    uid: 930e3b08-cf04-4c4d-80ea-55a990f7e96d
  spec:
    clusterIP: 10.0.176.82
    clusterIPs:
    - 10.0.176.82
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2025-06-19T07:38:36Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "14268459"
    uid: 4b723cd0-d0e0-41ab-9f90-929046e01796
  spec:
    clusterIP: 10.0.233.154
    clusterIPs:
    - 10.0.233.154
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
    creationTimestamp: "2025-06-19T07:38:37Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "14268465"
    uid: 73b8c65f-6024-4abb-a20c-5a3d007d9b23
  spec:
    clusterIP: 10.0.98.246
    clusterIPs:
    - 10.0.98.246
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:/Service:bookinfo/details
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:/Service:bookinfo/details"},"labels":{"app":"details","service":"details"},"name":"details","namespace":"bookinfo"},"spec":{"ports":[{"name":"http","port":9080}],"selector":{"app":"details"}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    labels:
      app: details
      service: details
    name: details
    namespace: bookinfo
    resourceVersion: "14284008"
    uid: 9d249ad6-aeaf-4385-99e3-71776a9ef46f
  spec:
    clusterIP: 10.0.76.112
    clusterIPs:
    - 10.0.76.112
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: details
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:/Service:bookinfo/productpage
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:/Service:bookinfo/productpage"},"labels":{"app":"productpage","service":"productpage"},"name":"productpage","namespace":"bookinfo"},"spec":{"ports":[{"name":"http","port":9080}],"selector":{"app":"productpage"}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    labels:
      app: productpage
      service: productpage
    name: productpage
    namespace: bookinfo
    resourceVersion: "14284005"
    uid: 4bbf670a-827f-41ba-b22a-91f38706773e
  spec:
    clusterIP: 10.0.132.98
    clusterIPs:
    - 10.0.132.98
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: productpage
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:/Service:bookinfo/ratings
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:/Service:bookinfo/ratings"},"labels":{"app":"ratings","service":"ratings"},"name":"ratings","namespace":"bookinfo"},"spec":{"ports":[{"name":"http","port":9080}],"selector":{"app":"ratings"}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    labels:
      app: ratings
      service: ratings
    name: ratings
    namespace: bookinfo
    resourceVersion: "14284002"
    uid: f6d85815-f8cb-43ce-a69c-ed2a4e5847e6
  spec:
    clusterIP: 10.0.165.243
    clusterIPs:
    - 10.0.165.243
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: ratings
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:/Service:bookinfo/reviews
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:/Service:bookinfo/reviews"},"labels":{"app":"reviews","service":"reviews"},"name":"reviews","namespace":"bookinfo"},"spec":{"ports":[{"name":"http","port":9080}],"selector":{"app":"reviews"}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    labels:
      app: reviews
      service: reviews
    name: reviews
    namespace: bookinfo
    resourceVersion: "14283999"
    uid: 32c466f5-bd41-4eec-92e0-d7a47603fa00
  spec:
    clusterIP: 10.0.60.27
    clusterIPs:
    - 10.0.60.27
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: reviews
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-05-19T08:05:07Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "211"
    uid: c92f81b7-8d13-4777-9525-9bff8ea4600c
  spec:
    clusterIP: 10.0.0.1
    clusterIPs:
    - 10.0.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: istio-gateway
      meta.helm.sh/release-namespace: istio-ingress
    creationTimestamp: "2025-05-19T08:26:43Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: istio-gateway
      app.kubernetes.io/instance: istio-gateway
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istio-gateway
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.26.0
      helm.sh/chart: gateway-1.26.0
      istio: app-istio-gateway
      istio.io/dataplane-mode: none
    name: istio-gateway
    namespace: istio-ingress
    resourceVersion: "8078"
    uid: 96165ba0-a671-4ff1-9816-fc24be8e77b9
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.128.211
    clusterIPs:
    - 10.0.128.211
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: status-port
      nodePort: 30703
      port: 15021
      protocol: TCP
      targetPort: 15021
    - name: http2
      nodePort: 30658
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      nodePort: 31888
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: istio-gateway
      istio: app-istio-gateway
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 4.157.97.91
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:30Z"
    labels:
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 10.0.2
      helm.sh/chart: grafana-6.58.4
    name: grafana
    namespace: istio-system
    resourceVersion: "1476806"
    uid: 9a7a5a35-429d-4432-9e9f-8738fa253c03
  spec:
    clusterIP: 10.0.118.57
    clusterIPs:
    - 10.0.118.57
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: service
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-05-22T13:36:30Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.10.0
      helm.sh/chart: kube-state-metrics-5.14.0
      sidecar.istio.io/inject: "false"
    name: istio-monitoring-demo-kube-state-metrics
    namespace: istio-system
    resourceVersion: "1476799"
    uid: 8df24b90-989c-4b66-8075-d3cc763a5116
  spec:
    clusterIP: 10.0.112.89
    clusterIPs:
    - 10.0.112.89
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: istio-istiod
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T12:11:45Z"
    labels:
      app: istiod
      app.kubernetes.io/instance: istio-istiod
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istiod
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.25.1
      helm.sh/chart: istiod-1.25.1
      install.operator.istio.io/owning-resource: unknown
      istio: pilot
      istio.io/rev: default
      operator.istio.io/component: Pilot
      release: istio-istiod
    name: istiod
    namespace: istio-system
    resourceVersion: "1449719"
    uid: bdb4dd6e-c86c-4d3f-8410-77daa76e7c01
  spec:
    clusterIP: 10.0.28.197
    clusterIPs:
    - 10.0.28.197
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc-xds
      port: 15010
      protocol: TCP
      targetPort: 15010
    - name: https-dns
      port: 15012
      protocol: TCP
      targetPort: 15012
    - name: https-webhook
      port: 443
      protocol: TCP
      targetPort: 15017
    - name: http-monitoring
      port: 15014
      protocol: TCP
      targetPort: 15014
    selector:
      app: istiod
      istio: pilot
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:30Z"
    labels:
      app: prometheus
      app.kubernetes.io/managed-by: Helm
      chart: prometheus-19.6.1
      component: server
      heritage: Helm
      release: istio-monitoring-demo
    name: prometheus
    namespace: istio-system
    resourceVersion: "1476803"
    uid: ac3cf85d-c3d0-4d52-924d-1dedcc36d3f4
  spec:
    clusterIP: 10.0.191.218
    clusterIPs:
    - 10.0.191.218
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app: prometheus
      component: server
      release: istio-monitoring-demo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-05-19T08:11:06Z"
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.15.0-4
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
    name: ama-metrics-ksm
    namespace: kube-system
    resourceVersion: "2823"
    uid: 81c98029-1c49-40df-adef-60c9ad435cfd
  spec:
    clusterIP: 10.0.95.249
    clusterIPs:
    - 10.0.95.249
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: ama-metrics-ksm
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics-operator-targets
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-operator-targets
    namespace: kube-system
    resourceVersion: "2821"
    uid: ec43664f-0162-4ef3-84d1-e8f6cfdafa88
  spec:
    clusterIP: 10.0.28.61
    clusterIPs:
    - 10.0.28.61
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: targetallocation
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      rsName: ama-metrics-operator-targets
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: aks-managed-workload-identity
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:07:41Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      azure-workload-identity.io/system: "true"
      helm.toolkit.fluxcd.io/name: workload-identity-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: azure-wi-webhook-webhook-service
    namespace: kube-system
    resourceVersion: "1749"
    uid: 14450641-55a5-4618-8dd4-b6bf23c5f3ec
  spec:
    clusterIP: 10.0.41.125
    clusterIPs:
    - 10.0.41.125
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
    selector:
      azure-workload-identity.io/system: "true"
      kubernetes.azure.com/managedby: aks
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.0.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "504"
    uid: c8fa1012-10b5-455b-b5e2-826136dc4c83
  spec:
    clusterIP: 10.0.0.10
    clusterIPs:
    - 10.0.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":"ms-https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "586"
    uid: 43e109c1-24ba-4813-b0cd-9bc49c6038ff
  spec:
    clusterIP: 10.0.53.241
    clusterIPs:
    - 10.0.53.241
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: ms-https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: aks-managed-kappie
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:12Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      helm.toolkit.fluxcd.io/name: kappie-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
    name: network-observability
    namespace: kube-system
    resourceVersion: "2968"
    uid: f2e9bba1-587c-4bec-91b3-88e116db114f
  spec:
    clusterIP: 10.0.96.203
    clusterIPs:
    - 10.0.96.203
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: retina
      port: 10093
      protocol: TCP
      targetPort: 10093
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"python-demo"},"name":"python-demo","namespace":"webservice"},"spec":{"ports":[{"port":80,"targetPort":8080}],"selector":{"app":"python-demo"}}}
    creationTimestamp: "2025-05-19T08:22:28Z"
    labels:
      app: python-demo
    name: python-demo
    namespace: webservice
    resourceVersion: "6600"
    uid: 0b8a00dd-924c-4d89-be2c-a606678b5c8e
  spec:
    clusterIP: 10.0.199.250
    clusterIPs:
    - 10.0.199.250
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: python-demo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-node
    namespace: kube-system
    resourceVersion: "15554162"
    uid: a6ceae7f-4e6f-48f1-99ed-c0092043b7ec
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        dsName: ama-metrics-node
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          schema-versions: v1
        creationTimestamp: null
        labels:
          dsName: ama-metrics-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: 'mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:'
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
            value: "28333"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-collector
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 150Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
          - mountPath: /anchors/mariner
            name: anchors-mariner
            readOnly: true
          - mountPath: /anchors/ubuntu
            name: anchors-ubuntu
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config-node
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - hostPath:
            path: /etc/pki/ca-trust/source/anchors/
            type: DirectoryOrCreate
          name: anchors-mariner
        - hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
          name: anchors-ubuntu
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 2
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-win-node
    namespace: kube-system
    resourceVersion: "12743210"
    uid: 66c82061-139f-437b-92ae-a43abb81ac86
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        dsName: ama-metrics-win-node
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          schema-versions: v1
        creationTimestamp: null
        labels:
          dsName: ama-metrics-win-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: 'mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:'
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-win
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYMETRICS_PORT
            value: "28333"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-win
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 300
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: prometheus-collector
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - addon-token-adapter-win
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter-win
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config-node-windows
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"azure-cns","kubernetes.azure.com/managedby":"aks"},"name":"azure-cns","namespace":"kube-system"},"spec":{"minReadySeconds":10,"selector":{"matchLabels":{"k8s-app":"azure-cns"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true","kubernetes.azure.com/azure-cns-configmap-checksum":"8396831874e5aa6f959d904ef1f7a508261f1018e4355946a9be6f0dbb662979","prometheus.io/port":"10092"},"labels":{"k8s-app":"azure-cns","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["-c","tcp://$(CNSIpAddress):$(CNSPort)","-t","$(CNSLogTarget)","-o","$(CNSLogDir)"],"env":[{"name":"CNSIpAddress","value":"127.0.0.1"},{"name":"CNSPort","value":"10090"},{"name":"CNSLogTarget","value":"stdoutfile"},{"name":"CNSLogDir","value":"/var/log"},{"name":"CNS_CONFIGURATION_PATH","value":"/etc/azure-cns/cns_config.json"},{"name":"NODENAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"POD_CIDRs","value":"10.244.0.0/16"},{"name":"SERVICE_CIDRs","value":"10.0.0.0/16"},{"name":"INFRA_VNET_CIDRs","value":"10.224.0.0/12"}],"image":"mcr.microsoft.com/containernetworking/azure-cns:v1.6.25","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"metrics"}},"name":"cns-container","ports":[{"containerPort":10090,"name":"api"},{"containerPort":10092,"name":"metrics"}],"readinessProbe":{"failureThreshold":1,"httpGet":{"path":"/readyz","port":"metrics","scheme":"HTTP"},"periodSeconds":1,"successThreshold":1},"resources":{"limits":{"cpu":"40m","memory":"250Mi"},"requests":{"cpu":"40m","memory":"250Mi"}},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/healthz","port":"metrics"}},"volumeMounts":[{"mountPath":"/var/log","name":"log"},{"mountPath":"/var/lib/azure-network","name":"cns-state"},{"mountPath":"/etc/azure-cns","name":"cns-config"},{"mountPath":"/opt/cni/bin","name":"cni-bin"},{"mountPath":"/var/run/azure-vnet","name":"azure-vnet"},{"mountPath":"/var/lock/azure-vnet","name":"cni-lock"},{"mountPath":"/var/run/azure-vnet.json","name":"legacy-cni-state"},{"mountPath":"/etc/cni/net.d","name":"cni-conflist"}]}],"hostNetwork":true,"initContainers":[{"args":["deploy","--skip-verify","azure-vnet","-o","/opt/cni/bin/azure-vnet","azure-vnet-telemetry","-o","/opt/cni/bin/azure-vnet-telemetry"],"command":["/dropgz"],"image":"mcr.microsoft.com/containernetworking/azure-cni:v1.6.21","imagePullPolicy":"IfNotPresent","name":"cni-installer","volumeMounts":[{"mountPath":"/opt/cni/bin","name":"cni-bin"},{"mountPath":"/etc/cni/net.d","name":"cni-conflist"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"azure-cns","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/log/azure-cns","type":"DirectoryOrCreate"},"name":"log"},{"hostPath":{"path":"/var/lib/azure-network","type":"DirectoryOrCreate"},"name":"cns-state"},{"hostPath":{"path":"/opt/cni/bin","type":"Directory"},"name":"cni-bin"},{"hostPath":{"path":"/var/run/azure-vnet","type":"DirectoryOrCreate"},"name":"azure-vnet"},{"hostPath":{"path":"/var/lock/azure-vnet","type":"DirectoryOrCreate"},"name":"cni-lock"},{"hostPath":{"path":"/var/run/azure-vnet.json","type":"FileOrCreate"},"name":"legacy-cni-state"},{"hostPath":{"path":"/etc/cni/net.d","type":"Directory"},"name":"cni-conflist"},{"configMap":{"name":"cns-config"},"name":"cns-config"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"2%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: azure-cns
      kubernetes.azure.com/managedby: aks
    name: azure-cns
    namespace: kube-system
    resourceVersion: "15554171"
    uid: 79b61ab0-8ef2-4848-b67e-e3729ed26e3b
  spec:
    minReadySeconds: 10
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-cns
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
          kubernetes.azure.com/azure-cns-configmap-checksum: 8396831874e5aa6f959d904ef1f7a508261f1018e4355946a9be6f0dbb662979
          prometheus.io/port: "10092"
        creationTimestamp: null
        labels:
          k8s-app: azure-cns
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - -c
          - tcp://$(CNSIpAddress):$(CNSPort)
          - -t
          - $(CNSLogTarget)
          - -o
          - $(CNSLogDir)
          env:
          - name: CNSIpAddress
            value: 127.0.0.1
          - name: CNSPort
            value: "10090"
          - name: CNSLogTarget
            value: stdoutfile
          - name: CNSLogDir
            value: /var/log
          - name: CNS_CONFIGURATION_PATH
            value: /etc/azure-cns/cns_config.json
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_CIDRs
            value: 10.244.0.0/16
          - name: SERVICE_CIDRs
            value: 10.0.0.0/16
          - name: INFRA_VNET_CIDRs
            value: 10.224.0.0/12
          image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.25
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cns-container
          ports:
          - containerPort: 10090
            name: api
            protocol: TCP
          - containerPort: 10092
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /readyz
              port: metrics
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 40m
              memory: 250Mi
            requests:
              cpu: 40m
              memory: 250Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: log
          - mountPath: /var/lib/azure-network
            name: cns-state
          - mountPath: /etc/azure-cns
            name: cns-config
          - mountPath: /opt/cni/bin
            name: cni-bin
          - mountPath: /var/run/azure-vnet
            name: azure-vnet
          - mountPath: /var/lock/azure-vnet
            name: cni-lock
          - mountPath: /var/run/azure-vnet.json
            name: legacy-cni-state
          - mountPath: /etc/cni/net.d
            name: cni-conflist
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - args:
          - deploy
          - --skip-verify
          - azure-vnet
          - -o
          - /opt/cni/bin/azure-vnet
          - azure-vnet-telemetry
          - -o
          - /opt/cni/bin/azure-vnet-telemetry
          command:
          - /dropgz
          image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.21
          imagePullPolicy: IfNotPresent
          name: cni-installer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/cni/bin
            name: cni-bin
          - mountPath: /etc/cni/net.d
            name: cni-conflist
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-cns
        serviceAccountName: azure-cns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log/azure-cns
            type: DirectoryOrCreate
          name: log
        - hostPath:
            path: /var/lib/azure-network
            type: DirectoryOrCreate
          name: cns-state
        - hostPath:
            path: /opt/cni/bin
            type: Directory
          name: cni-bin
        - hostPath:
            path: /var/run/azure-vnet
            type: DirectoryOrCreate
          name: azure-vnet
        - hostPath:
            path: /var/lock/azure-vnet
            type: DirectoryOrCreate
          name: cni-lock
        - hostPath:
            path: /var/run/azure-vnet.json
            type: FileOrCreate
          name: legacy-cni-state
        - hostPath:
            path: /etc/cni/net.d
            type: Directory
          name: cni-conflist
        - configMap:
            defaultMode: 420
            name: cns-config
          name: cns-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 2
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"azure-cns-win","kubernetes.azure.com/managedby":"aks"},"name":"azure-cns-win","namespace":"kube-system"},"spec":{"minReadySeconds":10,"selector":{"matchLabels":{"k8s-app":"azure-cns-win"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true","kubernetes.azure.com/azure-cns-configmap-checksum":"8396831874e5aa6f959d904ef1f7a508261f1018e4355946a9be6f0dbb662979","prometheus.io/port":"10092"},"labels":{"k8s-app":"azure-cns-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":[".\\azure-cns.exe","-c","tcp://$(CNSIpAddress):$(CNSPort)","-t","$(CNSLogTarget)","-o","$(CNSLogDir)","-storefilepath","$(CNSStoreFilePath)","-config-path","%CONTAINER_SANDBOX_MOUNT_POINT%\\$(CNS_CONFIGURATION_PATH)"],"command":["powershell.exe"],"env":[{"name":"PATH","value":"%CONTAINER_SANDBOX_MOUNT_POINT%\\Windows\\System32\\WindowsPowershell\\v1.0\\"},{"name":"CNSIpAddress","value":"127.0.0.1"},{"name":"CNSPort","value":"10090"},{"name":"CNSLogTarget","value":"stdoutfile"},{"name":"CNSLogDir","value":"/k/azurecns"},{"name":"CNSStoreFilePath","value":"/k/azurecns/"},{"name":"CNS_CONFIGURATION_PATH","value":"/etc/azure-cns/cns_config.json"},{"name":"NODENAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}},{"name":"POD_CIDRs","value":"10.244.0.0/16"},{"name":"SERVICE_CIDRs","value":"10.0.0.0/16"},{"name":"INFRA_VNET_CIDRs","value":"10.224.0.0/12"}],"image":"mcr.microsoft.com/containernetworking/azure-cns:v1.6.25","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":"metrics"}},"name":"cns-container","ports":[{"containerPort":10090,"name":"api"},{"containerPort":10092,"name":"metrics"}],"readinessProbe":{"failureThreshold":1,"httpGet":{"path":"/readyz","port":"metrics","scheme":"HTTP"},"periodSeconds":1,"successThreshold":1},"resources":{"limits":{"cpu":"250m","memory":"250Mi"}},"securityContext":{"privileged":true},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/healthz","port":"metrics"}},"volumeMounts":[{"mountPath":"/k/azurecns","name":"log"},{"mountPath":"/etc/azure-cns","name":"cns-config"},{"mountPath":"/var/run/azure-vnet","name":"azure-vnet"}],"workingDir":"$env:CONTAINER_SANDBOX_MOUNT_POINT"}],"hostNetwork":true,"initContainers":[{"args":["%CONTAINER_SANDBOX_MOUNT_POINT%/dropgz","deploy","--skip-verify","azure-vnet-stateless","-o","/k/azurecni/bin/azure-vnet.exe"],"command":["powershell.exe"],"env":[{"name":"PATHEXT","value":".EXE;;"}],"image":"mcr.microsoft.com/containernetworking/azure-cni:v1.6.21","imagePullPolicy":"IfNotPresent","name":"cni-installer","securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/k/azurecni/bin/","name":"cni-bin"}]}],"priorityClassName":"system-node-critical","securityContext":{"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"azure-cns","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/k/azurecns","type":"DirectoryOrCreate"},"name":"log"},{"configMap":{"name":"cns-win-config"},"name":"cns-config"},{"hostPath":{"path":"/var/run/azure-vnet","type":"DirectoryOrCreate"},"name":"azure-vnet"},{"hostPath":{"path":"/k/azurecni/bin","type":"DirectoryOrCreate"},"name":"cni-bin"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"2%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: azure-cns-win
      kubernetes.azure.com/managedby: aks
    name: azure-cns-win
    namespace: kube-system
    resourceVersion: "8131261"
    uid: 28faae77-1e7c-4883-bda3-2419f793fe8a
  spec:
    minReadySeconds: 10
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-cns-win
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
          kubernetes.azure.com/azure-cns-configmap-checksum: 8396831874e5aa6f959d904ef1f7a508261f1018e4355946a9be6f0dbb662979
          prometheus.io/port: "10092"
        creationTimestamp: null
        labels:
          k8s-app: azure-cns-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - .\azure-cns.exe
          - -c
          - tcp://$(CNSIpAddress):$(CNSPort)
          - -t
          - $(CNSLogTarget)
          - -o
          - $(CNSLogDir)
          - -storefilepath
          - $(CNSStoreFilePath)
          - -config-path
          - '%CONTAINER_SANDBOX_MOUNT_POINT%\$(CNS_CONFIGURATION_PATH)'
          command:
          - powershell.exe
          env:
          - name: PATH
            value: '%CONTAINER_SANDBOX_MOUNT_POINT%\Windows\System32\WindowsPowershell\v1.0\'
          - name: CNSIpAddress
            value: 127.0.0.1
          - name: CNSPort
            value: "10090"
          - name: CNSLogTarget
            value: stdoutfile
          - name: CNSLogDir
            value: /k/azurecns
          - name: CNSStoreFilePath
            value: /k/azurecns/
          - name: CNS_CONFIGURATION_PATH
            value: /etc/azure-cns/cns_config.json
          - name: NODENAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_CIDRs
            value: 10.244.0.0/16
          - name: SERVICE_CIDRs
            value: 10.0.0.0/16
          - name: INFRA_VNET_CIDRs
            value: 10.224.0.0/12
          image: mcr.microsoft.com/containernetworking/azure-cns:v1.6.25
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cns-container
          ports:
          - containerPort: 10090
            name: api
            protocol: TCP
          - containerPort: 10092
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /readyz
              port: metrics
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
          securityContext:
            privileged: true
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /k/azurecns
            name: log
          - mountPath: /etc/azure-cns
            name: cns-config
          - mountPath: /var/run/azure-vnet
            name: azure-vnet
          workingDir: $env:CONTAINER_SANDBOX_MOUNT_POINT
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - args:
          - '%CONTAINER_SANDBOX_MOUNT_POINT%/dropgz'
          - deploy
          - --skip-verify
          - azure-vnet-stateless
          - -o
          - /k/azurecni/bin/azure-vnet.exe
          command:
          - powershell.exe
          env:
          - name: PATHEXT
            value: .EXE;;
          image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.21
          imagePullPolicy: IfNotPresent
          name: cni-installer
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /k/azurecni/bin/
            name: cni-bin
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: azure-cns
        serviceAccountName: azure-cns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /k/azurecns
            type: DirectoryOrCreate
          name: log
        - configMap:
            defaultMode: 420
            name: cns-win-config
          name: cns-config
        - hostPath:
            path: /var/run/azure-vnet
            type: DirectoryOrCreate
          name: azure-vnet
        - hostPath:
            path: /k/azurecni/bin
            type: DirectoryOrCreate
          name: cni-bin
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 2%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"azure-ip-masq-agent","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","tier":"node"},"name":"azure-ip-masq-agent","namespace":"kube-system"},"spec":{"minReadySeconds":60,"selector":{"matchLabels":{"k8s-app":"azure-ip-masq-agent","tier":"node"}},"template":{"metadata":{"labels":{"k8s-app":"azure-ip-masq-agent","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"automountServiceAccountToken":false,"containers":[{"args":["--v=2","--resync-interval=60"],"image":"mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2","imagePullPolicy":"IfNotPresent","name":"azure-ip-masq-agent","resources":{"limits":{"cpu":"500m","memory":"250Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"],"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/etc/config","name":"azure-ip-masq-agent-config-volume"},{"mountPath":"/run/xtables.lock","name":"iptableslock"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"name":"azure-ip-masq-agent-config-volume","projected":{"sources":[{"configMap":{"items":[{"key":"ip-masq-agent","mode":444,"path":"ip-masq-agent"}],"name":"azure-ip-masq-agent-config","optional":true}},{"configMap":{"items":[{"key":"ip-masq-agent-reconciled","mode":444,"path":"ip-masq-agent-reconciled"}],"name":"azure-ip-masq-agent-config-reconciled","optional":true}}]}},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"iptableslock"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"25%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      tier: node
    name: azure-ip-masq-agent
    namespace: kube-system
    resourceVersion: "15554150"
    uid: 389e6f6e-9d15-483b-b655-6b28d3c964a5
  spec:
    minReadySeconds: 60
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-ip-masq-agent
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: azure-ip-masq-agent
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --v=2
          - --resync-interval=60
          image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
          imagePullPolicy: IfNotPresent
          name: azure-ip-masq-agent
          resources:
            limits:
              cpu: 500m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: azure-ip-masq-agent-config-volume
          - mountPath: /run/xtables.lock
            name: iptableslock
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - name: azure-ip-masq-agent-config-volume
          projected:
            defaultMode: 420
            sources:
            - configMap:
                items:
                - key: ip-masq-agent
                  mode: 444
                  path: ip-masq-agent
                name: azure-ip-masq-agent-config
                optional: true
            - configMap:
                items:
                - key: ip-masq-agent-reconciled
                  mode: 444
                  path: ip-masq-agent-reconciled
                name: azure-ip-masq-agent-config-reconciled
                optional: true
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 25%
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["cloud-node-manager","--node-name=$(NODE_NAME)","--enable-deprecated-beta-topology-labels=true"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager
    namespace: kube-system
    resourceVersion: "15554154"
    uid: 00f4829c-8389-40f6-afb4-fb5e6a09ae6c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - cloud-node-manager
          - --node-name=$(NODE_NAME)
          - --enable-deprecated-beta-topology-labels=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 2
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager-windows","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager-windows"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager-windows","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"command":["c:\\hpc\\cloud-node-manager.exe","--node-name=$(NODE_NAME)"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6-windows-hpc","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}}}],"hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager-windows
    namespace: kube-system
    resourceVersion: "4906485"
    uid: 2f22aff9-cd74-4991-a129-563ae99a7156
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager-windows
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager-windows
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - command:
          - c:\hpc\cloud-node-manager.exe
          - --node-name=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.31.6-windows-hpc
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=10s","--health-port=29603","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--mode=kubelet-registration-probe"]},"initialDelaySeconds":60,"timeoutSeconds":30},"name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-perf-optimization=true"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":30},"name":"azuredisk","ports":[{"containerPort":29603,"name":"healthz","protocol":"TCP"}],"resources":{"limits":{"memory":"5600Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"},{"mountPath":"/sys/bus/scsi/devices","name":"sys-devices-dir"},{"mountPath":"/sys/class/scsi_host/","name":"scsi-host-dir"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/disk.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"},{"hostPath":{"path":"/sys/bus/scsi/devices","type":"Directory"},"name":"sys-devices-dir"},{"hostPath":{"path":"/sys/class/scsi_host/","type":"Directory"},"name":"scsi-host-dir"}]}}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node
    namespace: kube-system
    resourceVersion: "15554142"
    uid: 5551cafe-8ed9-48af-9608-1791395ddf4d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=10s
          - --health-port=29603
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-perf-optimization=true
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: azuredisk
          ports:
          - containerPort: 29603
            name: healthz
            protocol: TCP
          resources:
            limits:
              memory: 5600Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
          - mountPath: /sys/bus/scsi/devices
            name: sys-devices-dir
          - mountPath: /sys/class/scsi_host/
            name: scsi-host-dir
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/disk.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys/bus/scsi/devices
            type: Directory
          name: sys-devices-dir
        - hostPath:
            path: /sys/class/scsi_host/
            type: Directory
          name: scsi-host-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 2
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--v=2","--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true"],"command":["azurediskplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10-windows-hp","imagePullPolicy":"IfNotPresent","name":"azuredisk","securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10-windows-hp","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"drop":["ALL"]}}}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node-win
    namespace: kube-system
    resourceVersion: "4906553"
    uid: f115dda9-1861-446f-ac62-61fe142a13ef
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --v=2
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          command:
          - azurediskplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10-windows-hp
          imagePullPolicy: IfNotPresent
          name: azuredisk
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\disk.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.31.10-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=10s","--health-port=29613","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--mode=kubelet-registration-probe"]},"initialDelaySeconds":60,"timeoutSeconds":30},"name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-get-volume-stats=true","--mount-permissions=0777","--metrics-address=0.0.0.0:29615"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":30},"name":"azurefile","ports":[{"containerPort":29613,"name":"healthz","protocol":"TCP"},{"containerPort":29615,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"memory":"400Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/file.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"}]}}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node
    namespace: kube-system
    resourceVersion: "15554158"
    uid: 924fb994-dfc9-4c55-bd01-28e852690d85
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=10s
          - --health-port=29613
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-get-volume-stats=true
          - --mount-permissions=0777
          - --metrics-address=0.0.0.0:29615
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: azurefile
          ports:
          - containerPort: 29613
            name: healthz
            protocol: TCP
          - containerPort: 29615
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/file.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 1
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)","--v=2"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true"],"command":["azurefileplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5-windows-hp","imagePullPolicy":"IfNotPresent","name":"azurefile","securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5-windows-hp","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"drop":["ALL"]}}}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node-win
    namespace: kube-system
    resourceVersion: "544"
    uid: 6b3ce062-df8c-4dd6-8db0-f0bb41ca6ac9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          - --v=2
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          command:
          - azurefileplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5-windows-hp
          imagePullPolicy: IfNotPresent
          name: azurefile
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\file.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.31.5-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"},"name":"kube-proxy","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"component":"kube-proxy","tier":"node"}},"template":{"metadata":{"annotations":null,"labels":{"component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["kube-proxy","--conntrack-max-per-core=0","--metrics-bind-address=0.0.0.0:10249","--cluster-cidr=10.244.0.0/16","--detect-local-mode=InterfaceNamePrefix","--pod-interface-name-prefix=azv","--v=3"],"image":"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8","imagePullPolicy":"IfNotPresent","name":"kube-proxy","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/run/xtables.lock","name":"iptableslock"},{"mountPath":"/lib/modules","name":"modules"}]}],"hostNetwork":true,"initContainers":[{"command":["/bin/sh","-c","get_num_cpu() {\n  # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: \"0-3\", \"0,1,2\", \"0-3,4\")\n  # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html\n  sys_cpu_online=$(cat /sys/devices/system/cpu/online)\n  result=0\n  OLD_IFS=\"$IFS\"; IFS=\",\"\n  for rng in \"$sys_cpu_online\"; do\n    if echo \"$rng\" | grep -q -- \"-\"; then\n      min=${rng%-*}; max=${rng#*-}\n      if [ \"$min\" -le \"$max\" ]; then\n        result=$((result + (max - min + 1)))\n      fi\n    else\n      result=$((result + 1))\n    fi\n  done\n  IFS=\"$OLD_IFS\"\n  echo $result\n}\n\nSYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?\u003c=net.netfilter.nf_conntrack_max=).*')\nif [ -z \"$DESIRED\" ]; then\n  NUM_CPU=$(get_num_cpu)\n  DESIRED=$((32768*$NUM_CPU))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"],"image":"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8","imagePullPolicy":"IfNotPresent","name":"kube-proxy-bootstrap","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/etc/sysctl.d","name":"sysctls"},{"mountPath":"/lib/modules","name":"modules"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"kube-proxy","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"iptableslock"},{"hostPath":{"path":"/etc/sysctl.d","type":"Directory"},"name":"sysctls"},{"hostPath":{"path":"/lib/modules","type":"Directory"},"name":"modules"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: kube-proxy
      kubernetes.azure.com/managedby: aks
      tier: node
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "15554166"
    uid: 313c38bf-b5a0-4589-8ece-88c94c9f5aa2
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: kube-proxy
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: kube-proxy
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - kube-proxy
          - --conntrack-max-per-core=0
          - --metrics-bind-address=0.0.0.0:10249
          - --cluster-cidr=10.244.0.0/16
          - --detect-local-mode=InterfaceNamePrefix
          - --pod-interface-name-prefix=azv
          - --v=3
          image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: iptableslock
          - mountPath: /lib/modules
            name: modules
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /bin/sh
          - -c
          - |
            get_num_cpu() {
              # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
              # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
              sys_cpu_online=$(cat /sys/devices/system/cpu/online)
              result=0
              OLD_IFS="$IFS"; IFS=","
              for rng in "$sys_cpu_online"; do
                if echo "$rng" | grep -q -- "-"; then
                  min=${rng%-*}; max=${rng#*-}
                  if [ "$min" -le "$max" ]; then
                    result=$((result + (max - min + 1)))
                  fi
                else
                  result=$((result + 1))
                fi
              done
              IFS="$OLD_IFS"
              echo $result
            }

            SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
            echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
            DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
            if [ -z "$DESIRED" ]; then
              NUM_CPU=$(get_num_cpu)
              DESIRED=$((32768*$NUM_CPU))
              if [ $DESIRED -lt 131072 ]; then
                DESIRED=131072
              fi

              echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
              echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
              echo $DESIRED > $SYSCTL
            else
              echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
              echo "Setting nf_conntrack_max to $DESIRED."
              echo $DESIRED > $SYSCTL
            fi
          image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.31.8
          imagePullPolicy: IfNotPresent
          name: kube-proxy-bootstrap
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/sysctl.d
            name: sysctls
          - mountPath: /lib/modules
            name: modules
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
        - hostPath:
            path: /etc/sysctl.d
            type: Directory
          name: sysctls
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 2
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
      meta.helm.sh/release-name: aks-managed-kappie
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:12Z"
    generation: 3
    labels:
      app.kubernetes.io/managed-by: Helm
      helm.toolkit.fluxcd.io/name: kappie-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      k8s-app: retina
      kubernetes.azure.com/managedby: aks
    name: retina-agent
    namespace: kube-system
    resourceVersion: "15554145"
    uid: 24dce887-0c29-4807-a5d9-8002a14c85a9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: retina
    template:
      metadata:
        annotations:
          checksum/config: f1d125c06bef154eeefcc35e47ec9a1db035dfb1126d8e74b46c683c5e2d9133
        creationTimestamp: null
        labels:
          k8s-app: retina
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.azure.com/ebpf-dataplane
                  operator: NotIn
                  values:
                  - cilium
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/fips_enabled
                  operator: NotIn
                  values:
                  - "true"
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.azure.com/ebpf-dataplane
                  operator: NotIn
                  values:
                  - cilium
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/os-sku
                  operator: NotIn
                  values:
                  - Ubuntu
        containers:
        - args:
          - --health-probe-bind-address=:18081
          - --metrics-bind-address=:18080
          - --config
          - /retina/config/config.yaml
          command:
          - /retina/controller
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: mcr.microsoft.com/containernetworking/retina-agent:v0.0.34
          imagePullPolicy: IfNotPresent
          name: retina
          ports:
          - containerPort: 10093
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 10093
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 45
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            limits:
              cpu: 500m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            capabilities:
              add:
              - SYS_ADMIN
              - SYS_RESOURCE
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              drop:
              - ALL
            privileged: false
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys/kernel/debug
            name: debug
          - mountPath: /sys/kernel/tracing
            name: trace
          - mountPath: /sys/fs/bpf
            name: bpf
          - mountPath: /sys/fs/cgroup
            name: cgroup
          - mountPath: /tmp
            name: tmp
          - mountPath: /retina/config
            name: config
          - mountPath: /var/run/cilium
            name: cilium
          - mountPath: /etc/os-release
            name: host-os-release
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - args:
          - --config
          - /retina/config/config.yaml
          image: mcr.microsoft.com/containernetworking/retina-init:v0.0.34
          imagePullPolicy: IfNotPresent
          name: retina-agent-init
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /sys/fs/bpf
            mountPropagation: Bidirectional
            name: bpf
          - mountPath: /var/run/cilium
            name: cilium
          - mountPath: /retina/config
            name: config
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: retina-agent
        serviceAccountName: retina-agent
        terminationGracePeriodSeconds: 90
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /sys/kernel/debug
            type: ""
          name: debug
        - hostPath:
            path: /sys/kernel/tracing
            type: ""
          name: trace
        - hostPath:
            path: /sys/fs/bpf
            type: ""
          name: bpf
        - hostPath:
            path: /sys/fs/cgroup
            type: ""
          name: cgroup
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            name: retina-config
          name: config
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium
        - hostPath:
            path: /etc/os-release
            type: FileOrCreate
          name: host-os-release
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 2
    desiredNumberScheduled: 2
    numberAvailable: 2
    numberMisscheduled: 0
    numberReady: 2
    observedGeneration: 3
    updatedNumberScheduled: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
      meta.helm.sh/release-name: aks-managed-kappie
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:12Z"
    generation: 3
    labels:
      app.kubernetes.io/managed-by: Helm
      helm.toolkit.fluxcd.io/name: kappie-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      k8s-app: retina-win
      kubernetes.azure.com/managedby: aks
    name: retina-agent-win
    namespace: kube-system
    resourceVersion: "10900741"
    uid: 6df07239-bf2c-4868-993a-ebb63460913d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: retina-win
    template:
      metadata:
        annotations:
          checksum/config: aa73fafd7c1f981e72eef8f31d4ce1dd49850736c59dea443f86b89a9cb2cba9
        creationTimestamp: null
        labels:
          k8s-app: retina-win
          kubernetes.azure.com/managedby: aks
      spec:
        containers:
        - command:
          - powershell.exe
          - -command
          - $env:CONTAINER_SANDBOX_MOUNT_POINT/controller.exe --config ./retina/config.yaml
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: mcr.microsoft.com/containernetworking/retina-agent:v0.0.34
          imagePullPolicy: IfNotPresent
          name: retinawin
          ports:
          - containerPort: 10093
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 300Mi
            requests:
              cpu: 500m
              memory: 300Mi
          securityContext:
            capabilities:
              add:
              - SYS_ADMIN
              - SYS_RESOURCE
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: retina
            name: retina-config-win
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: windows
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: false
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: retina-agent
        serviceAccountName: retina-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: retina-config-win
          name: retina-config-win
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"windows-kube-proxy-initializer","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"windows-kube-proxy-initializer","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"windows-kube-proxy-initializer"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"windows-kube-proxy-initializer","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"image":"mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808","imagePullPolicy":"IfNotPresent","name":"pause"}],"priorityClassName":"system-node-critical","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-05-19T08:05:33Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: windows-kube-proxy-initializer
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: windows-kube-proxy-initializer
    namespace: kube-system
    resourceVersion: "626"
    uid: c268779d-2fe3-432d-837a-57c2bf0c4ea7
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: windows-kube-proxy-initializer
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: windows-kube-proxy-initializer
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - image: mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"applicationset-controller","app.kubernetes.io/name":"argocd-applicationset-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-applicationset-controller","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-applicationset-controller"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-applicationset-controller"}},"spec":{"containers":[{"args":["/usr/local/bin/argocd-applicationset-controller"],"env":[{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.global.preserved.annotations","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.global.preserved.labels","name":"argocd-cmd-params-cm","optional":true}}},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.leader.election","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"key":"repo.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.policy","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.policy.override","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.debug","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.dryrun","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.git.submodule","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.progressive.syncs","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.tokenref.strict.mode","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.new.git.file.globbing","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.repo.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.repo.server.strict.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.repo.server.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.concurrent.reconciliations.max","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.namespaces","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.scm.root.ca.path","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.allowed.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.webhook.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.requeue.after","name":"argocd-cmd-params-cm","optional":true}}}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","name":"argocd-applicationset-controller","ports":[{"containerPort":7000,"name":"webhook"},{"containerPort":8080,"name":"metrics"}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-applicationset-controller","volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2025-06-19T07:38:38Z"
    generation: 1
    labels:
      app.kubernetes.io/component: applicationset-controller
      app.kubernetes.io/name: argocd-applicationset-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-applicationset-controller
    namespace: argocd
    resourceVersion: "15553591"
    uid: 8d4f36aa-5994-4c78-92d7-0806e0d3988a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-applicationset-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-applicationset-controller
      spec:
        containers:
        - args:
          - /usr/local/bin/argocd-applicationset-controller
          env:
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.annotations
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.labels
                name: argocd-cmd-params-cm
                optional: true
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.leader.election
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_POLICY
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.policy.override
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.debug
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.dryrun
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.progressive.syncs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.tokenref.strict.mode
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.concurrent.reconciliations.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.requeue.after
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          name: argocd-applicationset-controller
          ports:
          - containerPort: 7000
            name: webhook
            protocol: TCP
          - containerPort: 8080
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /tmp
            name: tmp
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-applicationset-controller
        serviceAccountName: argocd-applicationset-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - emptyDir: {}
          name: tmp
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T07:38:38Z"
      lastUpdateTime: "2025-06-19T07:38:40Z"
      message: ReplicaSet "argocd-applicationset-controller-67c79fccd" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:10Z"
      lastUpdateTime: "2025-06-22T01:43:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-dex-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-dex-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/shared/argocd-dex","rundex"],"env":[{"name":"ARGOCD_DEX_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"dexserver.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEX_SERVER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"dexserver.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEX_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"key":"dexserver.disable.tls","name":"argocd-cmd-params-cm","optional":true}}}],"image":"ghcr.io/dexidp/dex:v2.41.1","imagePullPolicy":"Always","name":"dex","ports":[{"containerPort":5556},{"containerPort":5557},{"containerPort":5558}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"},{"mountPath":"/tls","name":"argocd-dex-server-tls"}]}],"initContainers":[{"command":["/bin/cp","-n","/usr/local/bin/argocd","/shared/argocd-dex"],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","name":"copyutil","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/shared","name":"static-files"},{"mountPath":"/tmp","name":"dexconfig"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-dex-server","volumes":[{"emptyDir":{},"name":"static-files"},{"emptyDir":{},"name":"dexconfig"},{"name":"argocd-dex-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-dex-server-tls"}}]}}}}
    creationTimestamp: "2025-06-19T07:38:39Z"
    generation: 1
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "15553790"
    uid: ea1f5b4b-76c4-4a6e-9b7f-7cf6d133885f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          env:
          - name: ARGOCD_DEX_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: dexserver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          image: ghcr.io/dexidp/dex:v2.41.1
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
          - mountPath: /tls
            name: argocd-dex-server-tls
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - emptyDir: {}
          name: dexconfig
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T07:38:39Z"
      lastUpdateTime: "2025-06-19T07:38:43Z"
      message: ReplicaSet "argocd-dex-server-76686f75bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:17Z"
      lastUpdateTime: "2025-06-22T01:43:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/name":"argocd-notifications-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-notifications-controller","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-notifications-controller"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-notifications-controller"}},"spec":{"containers":[{"args":["/usr/local/bin/argocd-notifications"],"env":[{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"key":"application.namespaces","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.selfservice.enabled","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"notificationscontroller.repo.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","livenessProbe":{"tcpSocket":{"port":9001}},"name":"argocd-notifications-controller","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"}],"workingDir":"/app"}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"argocd-notifications-controller","volumes":[{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}}]}}}}
    creationTimestamp: "2025-06-19T07:38:39Z"
    generation: 1
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/name: argocd-notifications-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-notifications-controller
    namespace: argocd
    resourceVersion: "15553631"
    uid: 3f63b198-2679-48b5-a424-fe275da372ce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-notifications-controller
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-notifications-controller
      spec:
        containers:
        - args:
          - /usr/local/bin/argocd-notifications
          env:
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.selfservice.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9001
            timeoutSeconds: 1
          name: argocd-notifications-controller
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          workingDir: /app
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: argocd-notifications-controller
        serviceAccountName: argocd-notifications-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T07:38:39Z"
      lastUpdateTime: "2025-06-19T07:38:41Z"
      message: ReplicaSet "argocd-notifications-controller-588d87b767" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:10Z"
      lastUpdateTime: "2025-06-22T01:43:10Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd"},"name":"argocd-redis","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-redis"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-redis"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["--save","","--appendonly","no","--requirepass $(REDIS_PASSWORD)"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"auth","name":"argocd-redis"}}}],"image":"redis:7.2.7-alpine","imagePullPolicy":"Always","name":"redis","ports":[{"containerPort":6379}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}}],"initContainers":[{"command":["argocd","admin","redis-initial-password"],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"IfNotPresent","name":"secret-init","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}}}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"runAsUser":999,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"argocd-redis"}}}}
    creationTimestamp: "2025-06-19T07:38:40Z"
    generation: 1
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
    name: argocd-redis
    namespace: argocd
    resourceVersion: "15553716"
    uid: 585cad80-ca2d-4065-aeec-6ffcd97d1991
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          - --requirepass $(REDIS_PASSWORD)
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          image: redis:7.2.7-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - argocd
          - admin
          - redis-initial-password
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: IfNotPresent
          name: secret-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T07:38:40Z"
      lastUpdateTime: "2025-06-19T07:38:45Z"
      message: ReplicaSet "argocd-redis-59c6f8b4b5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:13Z"
      lastUpdateTime: "2025-06-22T01:43:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-repo-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-repo-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"args":["/usr/local/bin/argocd-repo-server"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"auth","name":"argocd-redis"}}},{"name":"ARGOCD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"timeout.reconciliation","name":"argocd-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"reposerver.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"reposerver.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"reposerver.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"reposerver.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"reposerver.metrics.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_TLS","valueFrom":{"configMapKeyRef":{"key":"reposerver.disable.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"key":"reposerver.tls.minversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"key":"reposerver.tls.maxversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"key":"reposerver.tls.ciphers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"reposerver.repo.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"key":"redis.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"key":"redis.compression","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"key":"redis.db","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"reposerver.default.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"otlp.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_INSECURE","valueFrom":{"configMapKeyRef":{"key":"otlp.insecure","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_HEADERS","valueFrom":{"configMapKeyRef":{"key":"otlp.headers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_OTLP_ATTRS","valueFrom":{"configMapKeyRef":{"key":"otlp.attrs","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.max.combined.directory.manifests.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS","valueFrom":{"configMapKeyRef":{"key":"reposerver.plugin.tar.exclusions","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS","valueFrom":{"configMapKeyRef":{"key":"reposerver.plugin.use.manifest.generate.paths","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS","valueFrom":{"configMapKeyRef":{"key":"reposerver.allow.oob.symlinks","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.streamed.manifest.max.tar.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.streamed.manifest.max.extracted.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.helm.manifest.max.extracted.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE","valueFrom":{"configMapKeyRef":{"key":"reposerver.disable.helm.manifest.max.extracted.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REVISION_CACHE_LOCK_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"reposerver.revision.cache.lock.timeout","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_MODULES_ENABLED","valueFrom":{"configMapKeyRef":{"key":"reposerver.enable.git.submodule","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"reposerver.git.lsremote.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GIT_REQUEST_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"reposerver.git.request.timeout","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_GRPC_MAX_SIZE_MB","valueFrom":{"configMapKeyRef":{"key":"reposerver.grpc.max.size","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES","valueFrom":{"configMapKeyRef":{"key":"reposerver.include.hidden.directories","name":"argocd-cmd-params-cm","optional":true}}},{"name":"HELM_CACHE_HOME","value":"/helm-working-dir"},{"name":"HELM_CONFIG_HOME","value":"/helm-working-dir"},{"name":"HELM_DATA_HOME","value":"/helm-working-dir"}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz?full=true","port":8084},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":5},"name":"argocd-repo-server","ports":[{"containerPort":8081},{"containerPort":8084}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8084},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/gpg/source","name":"gpg-keys"},{"mountPath":"/app/config/gpg/keys","name":"gpg-keyring"},{"mountPath":"/app/config/reposerver/tls","name":"argocd-repo-server-tls"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/helm-working-dir","name":"helm-working-dir"},{"mountPath":"/home/argocd/cmp-server/plugins","name":"plugins"}]}],"initContainers":[{"command":["/bin/cp","-n","/usr/local/bin/argocd","/var/run/argocd/argocd-cmp-server"],"image":"quay.io/argoproj/argocd:v3.0.6","name":"copyutil","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/var/run/argocd","name":"var-files"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-repo-server","volumes":[{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"configMap":{"name":"argocd-gpg-keys-cm"},"name":"gpg-keys"},{"emptyDir":{},"name":"gpg-keyring"},{"emptyDir":{},"name":"tmp"},{"emptyDir":{},"name":"helm-working-dir"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}},{"emptyDir":{},"name":"var-files"},{"emptyDir":{},"name":"plugins"}]}}}}
    creationTimestamp: "2025-06-19T07:38:41Z"
    generation: 1
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "15553820"
    uid: 6ef874fd-c257-4894-9d75-d70952d18159
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - /usr/local/bin/argocd-repo-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          - name: ARGOCD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.repo.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.max.combined.directory.manifests.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.tar.exclusions
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.use.manifest.generate.paths
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
            valueFrom:
              configMapKeyRef:
                key: reposerver.allow.oob.symlinks
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.tar.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REVISION_CACHE_LOCK_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.revision.cache.lock.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: reposerver.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.lsremote.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_REQUEST_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.request.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GRPC_MAX_SIZE_MB
            valueFrom:
              configMapKeyRef:
                key: reposerver.grpc.max.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES
            valueFrom:
              configMapKeyRef:
                key: reposerver.include.hidden.directories
                name: argocd-cmd-params-cm
                optional: true
          - name: HELM_CACHE_HOME
            value: /helm-working-dir
          - name: HELM_CONFIG_HOME
            value: /helm-working-dir
          - name: HELM_DATA_HOME
            value: /helm-working-dir
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          - mountPath: /tmp
            name: tmp
          - mountPath: /helm-working-dir
            name: helm-working-dir
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /var/run/argocd/argocd-cmp-server
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: IfNotPresent
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-repo-server
        serviceAccountName: argocd-repo-server
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: helm-working-dir
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - emptyDir: {}
          name: var-files
        - emptyDir: {}
          name: plugins
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T07:38:41Z"
      lastUpdateTime: "2025-06-19T07:38:52Z"
      message: ReplicaSet "argocd-repo-server-57db679bf7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:18Z"
      lastUpdateTime: "2025-06-22T01:43:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd"},"name":"argocd-server","namespace":"argocd"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-server"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-server"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["/usr/local/bin/argocd-server"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"auth","name":"argocd-redis"}}},{"name":"ARGOCD_SERVER_INSECURE","valueFrom":{"configMapKeyRef":{"key":"server.insecure","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_BASEHREF","valueFrom":{"configMapKeyRef":{"key":"server.basehref","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_ROOTPATH","valueFrom":{"configMapKeyRef":{"key":"server.rootpath","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"server.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LOG_LEVEL","valueFrom":{"configMapKeyRef":{"key":"server.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"key":"repo.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DEX_SERVER","valueFrom":{"configMapKeyRef":{"key":"server.dex.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DISABLE_AUTH","valueFrom":{"configMapKeyRef":{"key":"server.disable.auth","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_ENABLE_GZIP","valueFrom":{"configMapKeyRef":{"key":"server.enable.gzip","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"key":"server.repo.server.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_X_FRAME_OPTIONS","valueFrom":{"configMapKeyRef":{"key":"server.x.frame.options","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_CONTENT_SECURITY_POLICY","valueFrom":{"configMapKeyRef":{"key":"server.content.security.policy","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"server.repo.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"key":"server.repo.server.strict.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"server.dex.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"key":"server.dex.server.strict.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MIN_VERSION","valueFrom":{"configMapKeyRef":{"key":"server.tls.minversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_MAX_VERSION","valueFrom":{"configMapKeyRef":{"key":"server.tls.maxversion","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_TLS_CIPHERS","valueFrom":{"configMapKeyRef":{"key":"server.tls.ciphers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.connection.status.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.oidc.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.login.attempts.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_STATIC_ASSETS","valueFrom":{"configMapKeyRef":{"key":"server.staticassets","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.app.state.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"key":"redis.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"key":"redis.compression","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"key":"redis.db","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"server.default.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_MAX_COOKIE_NUMBER","valueFrom":{"configMapKeyRef":{"key":"server.http.cookie.maxnumber","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"server.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"server.metrics.listen.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"otlp.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_INSECURE","valueFrom":{"configMapKeyRef":{"key":"otlp.insecure","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_HEADERS","valueFrom":{"configMapKeyRef":{"key":"otlp.headers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_OTLP_ATTRS","valueFrom":{"configMapKeyRef":{"key":"otlp.attrs","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"key":"application.namespaces","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION","valueFrom":{"configMapKeyRef":{"key":"server.enable.proxy.extension","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_K8SCLIENT_RETRY_MAX","valueFrom":{"configMapKeyRef":{"key":"server.k8sclient.retry.max","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF","valueFrom":{"configMapKeyRef":{"key":"server.k8sclient.retry.base.backoff","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_API_CONTENT_TYPES","valueFrom":{"configMapKeyRef":{"key":"server.api.content.types","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"server.webhook.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.new.git.file.globbing","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.scm.root.ca.path","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.allowed.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS","valueFrom":{"configMapKeyRef":{"key":"applicationsetcontroller.enable.scm.providers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_HYDRATOR_ENABLED","valueFrom":{"configMapKeyRef":{"key":"hydrator.enabled","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_SYNC_WITH_REPLACE_ALLOWED","valueFrom":{"configMapKeyRef":{"key":"server.sync.replace.allowed","name":"argocd-cmd-params-cm","optional":true}}}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","livenessProbe":{"httpGet":{"path":"/healthz?full=true","port":8080},"initialDelaySeconds":3,"periodSeconds":30,"timeoutSeconds":5},"name":"argocd-server","ports":[{"containerPort":8080},{"containerPort":8083}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080},"initialDelaySeconds":3,"periodSeconds":30},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/ssh","name":"ssh-known-hosts"},{"mountPath":"/app/config/tls","name":"tls-certs"},{"mountPath":"/app/config/server/tls","name":"argocd-repo-server-tls"},{"mountPath":"/app/config/dex/tls","name":"argocd-dex-server-tls"},{"mountPath":"/home/argocd","name":"plugins-home"},{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/home/argocd/params","name":"argocd-cmd-params-cm"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-server","volumes":[{"emptyDir":{},"name":"plugins-home"},{"emptyDir":{},"name":"tmp"},{"configMap":{"name":"argocd-ssh-known-hosts-cm"},"name":"ssh-known-hosts"},{"configMap":{"name":"argocd-tls-certs-cm"},"name":"tls-certs"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}},{"name":"argocd-dex-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-dex-server-tls"}},{"configMap":{"items":[{"key":"server.profile.enabled","path":"profiler.enabled"}],"name":"argocd-cmd-params-cm","optional":true},"name":"argocd-cmd-params-cm"}]}}}}
    creationTimestamp: "2025-06-19T07:38:41Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
    name: argocd-server
    namespace: argocd
    resourceVersion: "15553798"
    uid: 7d995577-51e0-4026-85da-12605ec3a2e0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - /usr/local/bin/argocd-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          - name: ARGOCD_SERVER_INSECURE
            valueFrom:
              configMapKeyRef:
                key: server.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_BASEHREF
            valueFrom:
              configMapKeyRef:
                key: server.basehref
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ROOTPATH
            valueFrom:
              configMapKeyRef:
                key: server.rootpath
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: server.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: server.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER
            valueFrom:
              configMapKeyRef:
                key: server.dex.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DISABLE_AUTH
            valueFrom:
              configMapKeyRef:
                key: server.disable.auth
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_GZIP
            valueFrom:
              configMapKeyRef:
                key: server.enable.gzip
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_X_FRAME_OPTIONS
            valueFrom:
              configMapKeyRef:
                key: server.x.frame.options
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONTENT_SECURITY_POLICY
            valueFrom:
              configMapKeyRef:
                key: server.content.security.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: server.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.connection.status.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.oidc.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.login.attempts.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_STATIC_ASSETS
            valueFrom:
              configMapKeyRef:
                key: server.staticassets
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.app.state.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_MAX_COOKIE_NUMBER
            valueFrom:
              configMapKeyRef:
                key: server.http.cookie.maxnumber
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_METRICS_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
            valueFrom:
              configMapKeyRef:
                key: server.enable.proxy.extension
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_MAX
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.base.backoff
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_API_CONTENT_TYPES
            valueFrom:
              configMapKeyRef:
                key: server.api.content.types
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: server.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_HYDRATOR_ENABLED
            valueFrom:
              configMapKeyRef:
                key: hydrator.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SYNC_WITH_REPLACE_ALLOWED
            valueFrom:
              configMapKeyRef:
                key: server.sync.replace.allowed
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
          - mountPath: /app/config/dex/tls
            name: argocd-dex-server-tls
          - mountPath: /home/argocd
            name: plugins-home
          - mountPath: /tmp
            name: tmp
          - mountPath: /home/argocd/params
            name: argocd-cmd-params-cm
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: plugins-home
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
        - configMap:
            defaultMode: 420
            items:
            - key: server.profile.enabled
              path: profiler.enabled
            name: argocd-cmd-params-cm
            optional: true
          name: argocd-cmd-params-cm
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T07:38:41Z"
      lastUpdateTime: "2025-06-19T07:39:12Z"
      message: ReplicaSet "argocd-server-67b6bf4f8d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:17Z"
      lastUpdateTime: "2025-06-22T01:43:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/details-v1
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:apps/Deployment:bookinfo/details-v1"},"labels":{"app":"details","version":"v1"},"name":"details-v1","namespace":"bookinfo"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"details","version":"v1"}},"template":{"metadata":{"labels":{"app":"details","version":"v1"}},"spec":{"containers":[{"env":[{"name":"ENABLE_EXTERNAL_BOOK_SERVICE","value":"true"}],"image":"docker.io/istio/examples-bookinfo-details-v1:1.16.4","imagePullPolicy":"IfNotPresent","name":"details","ports":[{"containerPort":9080}]}],"serviceAccountName":"bookinfo-details"}}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: details
      version: v1
    name: details-v1
    namespace: bookinfo
    resourceVersion: "15553703"
    uid: 971b4265-16d2-4ce4-9e7a-13e16520f17e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: details
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: details
          version: v1
      spec:
        containers:
        - env:
          - name: ENABLE_EXTERNAL_BOOK_SERVICE
            value: "true"
          image: docker.io/istio/examples-bookinfo-details-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: details
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-details
        serviceAccountName: bookinfo-details
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T08:25:33Z"
      lastUpdateTime: "2025-06-19T08:25:45Z"
      message: ReplicaSet "details-v1-69c7fccbf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:13Z"
      lastUpdateTime: "2025-06-22T01:43:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/productpage-v1
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:apps/Deployment:bookinfo/productpage-v1"},"labels":{"app":"productpage","version":"v1"},"name":"productpage-v1","namespace":"bookinfo"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"productpage","version":"v1"}},"template":{"metadata":{"annotations":{"prometheus.io/path":"/metrics","prometheus.io/port":"9080","prometheus.io/scrape":"true"},"labels":{"app":"productpage","version":"v1"}},"spec":{"containers":[{"image":"docker.io/istio/examples-bookinfo-productpage-v1:1.16.4","imagePullPolicy":"IfNotPresent","name":"productpage","ports":[{"containerPort":9080}],"volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"serviceAccountName":"bookinfo-productpage","volumes":[{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: productpage
      version: v1
    name: productpage-v1
    namespace: bookinfo
    resourceVersion: "14284269"
    uid: b526c44f-1826-4069-8e46-6301743c1671
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: productpage
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: productpage
          version: v1
      spec:
        containers:
        - image: docker.io/istio/examples-bookinfo-productpage-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: productpage
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-productpage
        serviceAccountName: bookinfo-productpage
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T08:25:47Z"
      lastUpdateTime: "2025-06-19T08:25:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-19T08:25:33Z"
      lastUpdateTime: "2025-06-19T08:25:47Z"
      message: ReplicaSet "productpage-v1-58ddcf596c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/ratings-v1
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:apps/Deployment:bookinfo/ratings-v1"},"labels":{"app":"ratings","version":"v1"},"name":"ratings-v1","namespace":"bookinfo"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ratings","version":"v1"}},"template":{"metadata":{"labels":{"app":"ratings","version":"v1"}},"spec":{"containers":[{"image":"docker.io/istio/examples-bookinfo-ratings-v1:1.16.4","imagePullPolicy":"IfNotPresent","name":"ratings","ports":[{"containerPort":9080}]}],"serviceAccountName":"bookinfo-ratings"}}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: ratings
      version: v1
    name: ratings-v1
    namespace: bookinfo
    resourceVersion: "14284264"
    uid: 9c208f47-52e4-4846-83c2-0cd0a4273498
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ratings
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ratings
          version: v1
      spec:
        containers:
        - image: docker.io/istio/examples-bookinfo-ratings-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: ratings
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-ratings
        serviceAccountName: bookinfo-ratings
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T08:25:47Z"
      lastUpdateTime: "2025-06-19T08:25:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-19T08:25:33Z"
      lastUpdateTime: "2025-06-19T08:25:47Z"
      message: ReplicaSet "ratings-v1-6fb7f74478" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/reviews-v1
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:apps/Deployment:bookinfo/reviews-v1"},"labels":{"app":"reviews","version":"v1"},"name":"reviews-v1","namespace":"bookinfo"},"spec":{"selector":{"matchLabels":{"app":"reviews","version":"v1"}},"template":{"metadata":{"labels":{"app":"reviews","version":"v1"}},"spec":{"containers":[{"env":[{"name":"LOG_DIR","value":"/tmp/logs"}],"image":"docker.io/istio/examples-bookinfo-reviews-v1:1.16.4","imagePullPolicy":"IfNotPresent","name":"reviews","ports":[{"containerPort":9080}],"volumeMounts":[{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/opt/ibm/wlp/output","name":"wlp-output"}]}],"serviceAccountName":"bookinfo-reviews","volumes":[{"emptyDir":{},"name":"wlp-output"},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: reviews
      version: v1
    name: reviews-v1
    namespace: bookinfo
    resourceVersion: "15553698"
    uid: 58a356e2-b4ee-44e3-8451-7dff3c736ae7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: reviews
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews
          version: v1
      spec:
        containers:
        - env:
          - name: LOG_DIR
            value: /tmp/logs
          image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: reviews
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /opt/ibm/wlp/output
            name: wlp-output
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-reviews
        serviceAccountName: bookinfo-reviews
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: wlp-output
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T08:25:33Z"
      lastUpdateTime: "2025-06-19T08:25:49Z"
      message: ReplicaSet "reviews-v1-79587cf9db" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:13Z"
      lastUpdateTime: "2025-06-22T01:43:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/reviews-v2
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:apps/Deployment:bookinfo/reviews-v2"},"labels":{"app":"reviews","version":"v2"},"name":"reviews-v2","namespace":"bookinfo"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"reviews","version":"v2"}},"template":{"metadata":{"labels":{"app":"reviews","version":"v2"}},"spec":{"containers":[{"env":[{"name":"LOG_DIR","value":"/tmp/logs"}],"image":"docker.io/istio/examples-bookinfo-reviews-v2:1.16.4","imagePullPolicy":"IfNotPresent","name":"reviews","ports":[{"containerPort":9080}],"volumeMounts":[{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/opt/ibm/wlp/output","name":"wlp-output"}]}],"serviceAccountName":"bookinfo-reviews","volumes":[{"emptyDir":{},"name":"wlp-output"},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: reviews
      version: v2
    name: reviews-v2
    namespace: bookinfo
    resourceVersion: "15553710"
    uid: e67fb95f-8f3a-4f0f-9c30-8a3721f37776
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: reviews
        version: v2
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews
          version: v2
      spec:
        containers:
        - env:
          - name: LOG_DIR
            value: /tmp/logs
          image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.4
          imagePullPolicy: IfNotPresent
          name: reviews
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /opt/ibm/wlp/output
            name: wlp-output
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-reviews
        serviceAccountName: bookinfo-reviews
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: wlp-output
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T08:25:33Z"
      lastUpdateTime: "2025-06-19T08:25:49Z"
      message: ReplicaSet "reviews-v2-5f7b9d899d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:13Z"
      lastUpdateTime: "2025-06-22T01:43:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/reviews-v3
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"argocd.argoproj.io/tracking-id":"bookinfo:apps/Deployment:bookinfo/reviews-v3"},"labels":{"app":"reviews","version":"v3"},"name":"reviews-v3","namespace":"bookinfo"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"reviews","version":"v3"}},"template":{"metadata":{"labels":{"app":"reviews","version":"v3"}},"spec":{"containers":[{"env":[{"name":"LOG_DIR","value":"/tmp/logs"}],"image":"docker.io/istio/examples-bookinfo-reviews-v3:1.16.4","imagePullPolicy":"IfNotPresent","name":"reviews","ports":[{"containerPort":9080}],"volumeMounts":[{"mountPath":"/tmp","name":"tmp"},{"mountPath":"/opt/ibm/wlp/output","name":"wlp-output"}]}],"serviceAccountName":"bookinfo-reviews","volumes":[{"emptyDir":{},"name":"wlp-output"},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: reviews
      version: v3
    name: reviews-v3
    namespace: bookinfo
    resourceVersion: "14284311"
    uid: 7195f755-f7f1-4324-9566-5d07f77be62e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: reviews
        version: v3
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews
          version: v3
      spec:
        containers:
        - env:
          - name: LOG_DIR
            value: /tmp/logs
          image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.4
          imagePullPolicy: IfNotPresent
          name: reviews
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /opt/ibm/wlp/output
            name: wlp-output
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-reviews
        serviceAccountName: bookinfo-reviews
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: wlp-output
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-19T08:25:50Z"
      lastUpdateTime: "2025-06-19T08:25:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-06-19T08:25:33Z"
      lastUpdateTime: "2025-06-19T08:25:50Z"
      message: ReplicaSet "reviews-v3-698888c6c4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-gateway
      meta.helm.sh/release-namespace: istio-ingress
    creationTimestamp: "2025-05-19T08:26:43Z"
    generation: 1
    labels:
      app: istio-gateway
      app.kubernetes.io/instance: istio-gateway
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istio-gateway
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.26.0
      helm.sh/chart: gateway-1.26.0
      istio: app-istio-gateway
      istio.io/dataplane-mode: none
    name: istio-gateway
    namespace: istio-ingress
    resourceVersion: "8058"
    uid: 9ad88a80-6a15-4a6a-af72-47f6a8b13204
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: istio-gateway
        istio: app-istio-gateway
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          inject.istio.io/templates: gateway
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "true"
        creationTimestamp: null
        labels:
          app: istio-gateway
          app.kubernetes.io/instance: istio-gateway
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: istio-gateway
          app.kubernetes.io/part-of: istio
          app.kubernetes.io/version: 1.26.0
          helm.sh/chart: gateway-1.26.0
          istio: app-istio-gateway
          istio.io/dataplane-mode: none
          sidecar.istio.io/inject: "true"
      spec:
        containers:
        - image: auto
          imagePullPolicy: Always
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
        serviceAccount: istio-gateway
        serviceAccountName: istio-gateway
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-19T08:26:46Z"
      lastUpdateTime: "2025-05-19T08:26:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-19T08:26:43Z"
      lastUpdateTime: "2025-05-19T08:26:46Z"
      message: ReplicaSet "istio-gateway-b6fdc6d4d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:30Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 10.0.2
      helm.sh/chart: grafana-6.58.4
    name: grafana
    namespace: istio-system
    resourceVersion: "1477010"
    uid: 76147fc1-2dd2-4631-a93f-d45f2749d385
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: istio-monitoring-demo
        app.kubernetes.io/name: grafana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 9c04413b18ae878556af30dbdaa3f703d0e59494ca868b634e89ce125cc64210
          checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          kubectl.kubernetes.io/default-container: grafana
        creationTimestamp: null
        labels:
          app: grafana
          app.kubernetes.io/instance: istio-monitoring-demo
          app.kubernetes.io/name: grafana
          sidecar.istio.io/inject: "false"
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Admin
          - name: GF_AUTH_BASIC_ENABLED
            value: "false"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: admin
          - name: GF_SECURITY_ADMIN_USER
            value: admin
          image: docker.io/grafana/grafana:10.0.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
          - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
            name: config
            subPath: datasources.yaml
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-22T13:36:51Z"
      lastUpdateTime: "2025-05-22T13:36:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-22T13:36:31Z"
      lastUpdateTime: "2025-05-22T13:36:51Z"
      message: ReplicaSet "grafana-6b77d45549" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:30Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.10.0
      helm.sh/chart: kube-state-metrics-5.14.0
      sidecar.istio.io/inject: "false"
    name: istio-monitoring-demo-kube-state-metrics
    namespace: istio-system
    resourceVersion: "1476954"
    uid: 91b4f5c2-0628-4cae-9dc0-051d21fe6b98
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: istio-monitoring-demo
        app.kubernetes.io/name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: istio-monitoring-demo
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.10.0
          helm.sh/chart: kube-state-metrics-5.14.0
          sidecar.istio.io/inject: "false"
      spec:
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: istio-monitoring-demo-kube-state-metrics
        serviceAccountName: istio-monitoring-demo-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-22T13:36:41Z"
      lastUpdateTime: "2025-05-22T13:36:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-22T13:36:31Z"
      lastUpdateTime: "2025-05-22T13:36:41Z"
      message: ReplicaSet "istio-monitoring-demo-kube-state-metrics-6cfd96d66f" has
        successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-istiod
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T12:11:45Z"
    generation: 1
    labels:
      app: istiod
      app.kubernetes.io/instance: istio-istiod
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istiod
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.25.1
      helm.sh/chart: istiod-1.25.1
      install.operator.istio.io/owning-resource: unknown
      istio: pilot
      istio.io/rev: default
      operator.istio.io/component: Pilot
      release: istio-istiod
    name: istiod
    namespace: istio-system
    resourceVersion: "1461965"
    uid: 93a39f64-8aac-4a1f-a448-2ec0cd7fe312
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        istio: pilot
    strategy:
      rollingUpdate:
        maxSurge: 100%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "15014"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "false"
        creationTimestamp: null
        labels:
          app: istiod
          app.kubernetes.io/instance: istio-istiod
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: istiod
          app.kubernetes.io/part-of: istio
          app.kubernetes.io/version: 1.25.1
          helm.sh/chart: istiod-1.25.1
          install.operator.istio.io/owning-resource: unknown
          istio: pilot
          istio.io/dataplane-mode: none
          istio.io/rev: default
          operator.istio.io/component: Pilot
          sidecar.istio.io/inject: "false"
      spec:
        containers:
        - args:
          - discovery
          - --monitoringAddr=:15014
          - --log_output_level=default:info
          - --domain
          - cluster.local
          - --keepaliveMaxServerConnectionAge
          - 30m
          env:
          - name: REVISION
            value: default
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: KUBECONFIG
            value: /var/run/secrets/remote/config
          - name: CA_TRUSTED_NODE_ACCOUNTS
            value: istio-system/ztunnel
          - name: PILOT_TRACE_SAMPLING
            value: "1"
          - name: PILOT_ENABLE_ANALYSIS
            value: "false"
          - name: CLUSTER_ID
            value: cluster-1
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "1"
                resource: limits.cpu
          - name: PLATFORM
          image: docker.io/istio/pilot:1.25.2
          imagePullPolicy: IfNotPresent
          name: discovery
          ports:
          - containerPort: 8080
            name: http-debug
            protocol: TCP
          - containerPort: 15010
            name: grpc-xds
            protocol: TCP
          - containerPort: 15012
            name: tls-xds
            protocol: TCP
          - containerPort: 15017
            name: https-webhooks
            protocol: TCP
          - containerPort: 15014
            name: http-monitoring
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: istio-token
            readOnly: true
          - mountPath: /var/run/secrets/istio-dns
            name: local-certs
          - mountPath: /etc/cacerts
            name: cacerts
            readOnly: true
          - mountPath: /var/run/secrets/remote
            name: istio-kubeconfig
            readOnly: true
          - mountPath: /var/run/secrets/istiod/tls
            name: istio-csr-dns-cert
            readOnly: true
          - mountPath: /var/run/secrets/istiod/ca
            name: istio-csr-ca-configmap
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: istiod
        serviceAccountName: istiod
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: cni.istio.io/not-ready
          operator: Exists
        volumes:
        - emptyDir:
            medium: Memory
          name: local-certs
        - name: istio-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - name: cacerts
          secret:
            defaultMode: 420
            optional: true
            secretName: cacerts
        - name: istio-kubeconfig
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-kubeconfig
        - name: istio-csr-dns-cert
          secret:
            defaultMode: 420
            optional: true
            secretName: istiod-tls
        - configMap:
            defaultMode: 420
            name: istio-ca-root-cert
            optional: true
          name: istio-csr-ca-configmap
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-22T12:11:45Z"
      lastUpdateTime: "2025-05-22T12:11:49Z"
      message: ReplicaSet "istiod-d77496c98" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-22T12:49:57Z"
      lastUpdateTime: "2025-05-22T12:49:57Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:30Z"
    generation: 1
    labels:
      app: prometheus
      app.kubernetes.io/managed-by: Helm
      chart: prometheus-19.6.1
      component: server
      heritage: Helm
      release: istio-monitoring-demo
    name: prometheus
    namespace: istio-system
    resourceVersion: "1476943"
    uid: 589a8b99-25f0-4fb2-980d-d2450f789c45
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: prometheus
        component: server
        release: istio-monitoring-demo
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          chart: prometheus-19.6.1
          component: server
          heritage: Helm
          release: istio-monitoring-demo
          sidecar.istio.io/inject: "false"
      spec:
        containers:
        - args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:9090/-/reload
          image: jimmidyson/configmap-reload:v0.8.0
          imagePullPolicy: IfNotPresent
          name: prometheus-server-configmap-reload
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: prom/prometheus:v2.41.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus
        serviceAccountName: prometheus
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus
          name: config-volume
        - emptyDir: {}
          name: storage-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-22T13:36:40Z"
      lastUpdateTime: "2025-05-22T13:36:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-22T13:36:31Z"
      lastUpdateTime: "2025-05-22T13:36:40Z"
      message: ReplicaSet "prometheus-7c5576b7b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: ama-metrics
    namespace: kube-system
    resourceVersion: "15553694"
    uid: d648a732-9022-4bdf-b330-2ab290edc3bc
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        rsName: ama-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          rsName: ama-metrics
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: AZMON_OPERATOR_ENABLED
            value: "true"
          - name: AZMON_COLLECTOR_HPA_ENABLED
            value: "true"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: v2.15.0-4
          - name: OPERATOR_TARGETS_TA_IMG_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-targetallocator
          - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-cfg
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-collector
          resources:
            limits:
              cpu: "7"
              memory: 14Gi
            requests:
              cpu: 150m
              memory: 500Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
          - mountPath: /anchors/mariner
            name: anchors-mariner
            readOnly: true
          - mountPath: /anchors/ubuntu
            name: anchors-ubuntu
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              rsName: ama-metrics
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              rsName: ama-metrics
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - hostPath:
            path: /etc/pki/ca-trust/source/anchors/
            type: DirectoryOrCreate
          name: anchors-mariner
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
          name: anchors-ubuntu
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-05-19T08:11:06Z"
      lastUpdateTime: "2025-06-16T00:17:23Z"
      message: ReplicaSet "ama-metrics-66bf7c6c5b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:13Z"
      lastUpdateTime: "2025-06-22T01:43:13Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 1
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.15.0-4
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-ksm
    namespace: kube-system
    resourceVersion: "3084"
    uid: 85d6d900-b84d-4c41-8ac4-b5777b52c186
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app.kubernetes.io/name: ama-metrics-ksm
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: ama-metrics
          app.kubernetes.io/name: ama-metrics-ksm
          app.kubernetes.io/part-of: ama-metrics-ksm
          app.kubernetes.io/version: 2.15.0-4
          helm.sh/chart: azure-monitor-metrics-addon-0.1.0
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          - --telemetry-port=8081
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:v2.15.0-4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: ama-metrics-ksm
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 5Gi
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsUser: 65534
        serviceAccount: ama-metrics-ksm
        serviceAccountName: ama-metrics-ksm
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-19T08:11:26Z"
      lastUpdateTime: "2025-05-19T08:11:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-19T08:11:06Z"
      lastUpdateTime: "2025-05-19T08:11:26Z"
      message: ReplicaSet "ama-metrics-ksm-8fbf76b85" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics-operator-targets
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-operator-targets
    namespace: kube-system
    resourceVersion: "15553753"
    uid: 5909aa71-83e6-4f5a-8d66-7f53afa48dce
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        kubernetes.azure.com/managedby: aks
        rsName: ama-metrics-operator-targets
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          rsName: ama-metrics-operator-targets
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --enable-prometheus-cr-watcher
          env:
          - name: OTELCOL_NAMESPACE
            value: kube-system
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP
            value: azmonitoring.coreos.com
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-targetallocator
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-targetallocator
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health-ta
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: targetallocator
          ports:
          - containerPort: 8081
            name: health-ta
            protocol: TCP
          resources:
            limits:
              cpu: "5"
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ta-config-shared
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            value: kube-system
          - name: CONTAINER_TYPE
            value: ConfigReaderSidecar
          - name: MODE
            value: advanced
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: customEnvironment
            value: azurepubliccloud
          - name: WINMODE
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-cfg
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-cfg
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: config-reader
          ports:
          - containerPort: 8081
            name: health
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 1m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /ta-configuration
            name: ta-config-shared
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - emptyDir: {}
          name: ta-config-shared
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-19T08:11:06Z"
      lastUpdateTime: "2025-06-16T00:17:19Z"
      message: ReplicaSet "ama-metrics-operator-targets-85985d89f7" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T01:43:14Z"
      lastUpdateTime: "2025-06-22T01:43:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-workload-identity
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:07:41Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      azure-workload-identity.io/system: "true"
      helm.toolkit.fluxcd.io/name: workload-identity-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: azure-wi-webhook-controller-manager
    namespace: kube-system
    resourceVersion: "2611753"
    uid: 01fd8ba4-2bba-4947-8de1-90a328baf5d5
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        azure-workload-identity.io/system: "true"
        kubernetes.azure.com/managedby: aks
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          azure-workload-identity.io/system: "true"
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - -log-level=info
          - -disable-cert-rotation=true
          - -webhook-cert-dir=/certs
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AZURE_ENVIRONMENT
            value: AZUREPUBLICCLOUD
          - name: AZURE_TENANT_ID
            value: 1076231c-4971-42f2-8c33-aa8680e81ea8
          image: mcr.microsoft.com/oss/azure/workload-identity/webhook:v1.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-wi-webhook-admin
        serviceAccountName: azure-wi-webhook-admin
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: azure-wi-webhook-server-cert
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-05-19T08:07:41Z"
      lastUpdateTime: "2025-05-19T08:07:51Z"
      message: ReplicaSet "azure-wi-webhook-controller-manager-7f68bf8b86" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-25T00:59:05Z"
      lastUpdateTime: "2025-05-25T00:59:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","version":"v20"},"name":"coredns","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"kube-dns","version":"v20"}},"strategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"prometheus.io/port":"9153"},"labels":{"k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","version":"v20"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["-conf","/etc/coredns/Corefile"],"env":[{"name":"GOMAXPROCS","valueFrom":{"resourceFieldRef":{"resource":"limits.cpu"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"coredns","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"},{"containerPort":9153,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/ready","port":8181,"scheme":"HTTP"}},"resources":{"limits":{"cpu":3,"memory":"500Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"add":["NET_BIND_SERVICE"],"drop":["ALL"]},"procMount":"Default","readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/etc/coredns","name":"config-volume","readOnly":true},{"mountPath":"/etc/coredns/custom","name":"custom-config-volume","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"configMap":{"items":[{"key":"Corefile","path":"Corefile"}],"name":"coredns"},"name":"config-volume"},{"configMap":{"name":"coredns-custom","optional":true},"name":"custom-config-volume"},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      version: v20
    name: coredns
    namespace: kube-system
    resourceVersion: "2611691"
    uid: c7a9b54e-a2a5-46c7-812c-794c90f109bd
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        version: v20
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-05-19T08:06:45Z"
      lastUpdateTime: "2025-05-19T08:06:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-19T08:05:31Z"
      lastUpdateTime: "2025-05-19T08:06:49Z"
      message: ReplicaSet "coredns-57d886c994" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"coredns-autoscaler","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"coredns-autoscaler"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=coredns-autoscaler","--target=deployment/coredns","--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}","--logtostderr=true","--v=2"],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/last-poll","port":8080},"initialDelaySeconds":10,"periodSeconds":10},"name":"autoscaler","resources":{"limits":{"cpu":"200m","memory":"500Mi"},"requests":{"cpu":"20m","memory":"10Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}]}}}}
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: coredns-autoscaler
    namespace: kube-system
    resourceVersion: "2611581"
    uid: af291fe6-6109-4199-8801-5858b6446932
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-19T08:05:31Z"
      lastUpdateTime: "2025-05-19T08:06:39Z"
      message: ReplicaSet "coredns-autoscaler-55bcd876cc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-25T00:58:59Z"
      lastUpdateTime: "2025-05-25T00:58:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-image-cleaner
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:07:31Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: image-cleaner
      control-plane: controller-manager
      helm.toolkit.fluxcd.io/name: image-cleaner-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: eraser-controller-manager
    namespace: kube-system
    resourceVersion: "1777"
    uid: 55cb0ea1-a01a-4b30-b963-69504568daa1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: image-cleaner
        control-plane: controller-manager
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: image-cleaner
          control-plane: controller-manager
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --config=/config/controller_manager_config.yaml
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: OTEL_SERVICE_NAME
            value: eraser-manager
          image: mcr.microsoft.com/oss/eraser/eraser-manager:v1.3.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: manager-config
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: eraser-controller-manager
        serviceAccountName: eraser-controller-manager
        terminationGracePeriodSeconds: 10
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: eraser-manager-config
          name: manager-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-19T08:07:41Z"
      lastUpdateTime: "2025-05-19T08:07:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-19T08:07:31Z"
      lastUpdateTime: "2025-05-19T08:07:41Z"
      message: ReplicaSet "eraser-controller-manager-8694d54d99" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"konnectivity-agent","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"konnectivity-agent","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"konnectivity-agent"}},"strategy":{"rollingUpdate":{"maxSurge":0,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"checksum/client-cert":"a0bb96253fccb141cf0164336fabce09841592ac858f0bb4c2c0dd14a04fce5f"},"labels":{"app":"konnectivity-agent","component":"tunnel","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"args":["--proxy-server-host=ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io","--proxy-server-port=443","--health-server-port=8082","--keepalive-time=30s","--agent-key=/certs/client.key","--agent-cert=/certs/client.crt","--ca-cert=/certs/ca.crt","--agent-identifiers=default-route=true","--alpn-proto=konnectivity","-v=2"],"command":["/proxy-agent"],"image":"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":60},"name":"konnectivity-agent","readinessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"20m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/certs","name":"certs"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"konnectivity-agent","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"name":"certs","secret":{"secretName":"konnectivity-certs"}}]}}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: konnectivity-agent
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "2611497"
    uid: 058e577c-ddac-4071-a964-514fb170b4fd
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/client-cert: a0bb96253fccb141cf0164336fabce09841592ac858f0bb4c2c0dd14a04fce5f
          checksum/service-account-key: 5afa97a989c2287a2923afec333d04949a99969ca7d03dce773349e1210088dc
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-05-19T08:06:44Z"
      lastUpdateTime: "2025-05-19T08:06:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-19T08:05:32Z"
      lastUpdateTime: "2025-05-25T00:54:00Z"
      message: ReplicaSet "konnectivity-agent-7ffd9d8654" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 4
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"konnectivity-agent-autoscaler","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"konnectivity-agent-autoscaler","namespace":"kube-system"},"spec":{"paused":false,"replicas":1,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"konnectivity-agent-autoscaler"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"app":"konnectivity-agent-autoscaler","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=konnectivity-agent-autoscaler","--target=deployment/konnectivity-agent","--logtostderr=true","--v=2"],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/last-poll","port":8080},"initialDelaySeconds":10,"periodSeconds":10},"name":"autoscaler","resources":{"limits":{"cpu":"350m","memory":"512M"},"requests":{"cpu":"20m","memory":"10Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"konnectivity-agent-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}]}}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent-autoscaler
    namespace: kube-system
    resourceVersion: "2611584"
    uid: 0a754b7c-802a-42de-b790-3f390090ca00
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: konnectivity-agent-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: konnectivity-agent-autoscaler
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 350m
              memory: 512M
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent-autoscaler
        serviceAccountName: konnectivity-agent-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-19T08:05:32Z"
      lastUpdateTime: "2025-05-19T08:06:41Z"
      message: ReplicaSet "konnectivity-agent-autoscaler-679b77b4f" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-25T00:58:59Z"
      lastUpdateTime: "2025-05-25T00:58:59Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"metrics-server","namespace":"kube-system"},"spec":{"paused":false,"replicas":2,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks"},"name":"metrics-server"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=150m","--extra-cpu=0.5m","--memory=100Mi","--extra-memory=4Mi","--poll-period=180000","--threshold=5","--deployment=metrics-server","--container=metrics-server"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2","imagePullPolicy":"IfNotPresent","name":"metrics-server-vpa","resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"5m","memory":"30Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]},{"command":["/metrics-server","--kubelet-insecure-tls","--kubelet-preferred-address-types=InternalIP","--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","--cert-dir=/tmp","--secure-port=4443"],"image":"mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":20,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"name":"metrics-server","ports":[{"containerPort":4443,"name":"ms-https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"metrics-server","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"emptyDir":{},"name":"tmp-dir"},{"configMap":{"name":"metrics-server-config","optional":true},"name":"metrics-server-config-volume"}]}}}}
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "2612576"
    uid: 85a04362-b2b7-4a72-8a27-35010af5d6e7
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 151m
              memory: 108Mi
            requests:
              cpu: 151m
              memory: 108Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-05-19T08:07:50Z"
      lastUpdateTime: "2025-05-19T08:07:50Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-19T08:05:32Z"
      lastUpdateTime: "2025-05-19T08:07:56Z"
      message: ReplicaSet "metrics-server-6d968d6d47" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"python-demo","namespace":"webservice"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"python-demo"}},"template":{"metadata":{"annotations":{"proxy.istio.io/config":"{\"proxyStatsMatcher\": {\"inclusionRegexps\": [\".*adaptive_concurrency.*\"]}}"},"labels":{"app":"python-demo"}},"spec":{"containers":[{"args":["pip install flask requests \u0026\u0026 python -u app.py"],"command":["sh","-c"],"image":"python:3.10-slim","name":"python-demo","ports":[{"containerPort":8080}],"volumeMounts":[{"mountPath":"/app","name":"app-volume"}],"workingDir":"/app"}],"volumes":[{"configMap":{"name":"python-demo-code"},"name":"app-volume"}]}}}}
    creationTimestamp: "2025-05-19T08:22:29Z"
    generation: 1
    name: python-demo
    namespace: webservice
    resourceVersion: "2611741"
    uid: a08468fb-e1d6-492c-a88e-be89e9a07c26
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: python-demo
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          proxy.istio.io/config: '{"proxyStatsMatcher": {"inclusionRegexps": [".*adaptive_concurrency.*"]}}'
        creationTimestamp: null
        labels:
          app: python-demo
      spec:
        containers:
        - args:
          - pip install flask requests && python -u app.py
          command:
          - sh
          - -c
          image: python:3.10-slim
          imagePullPolicy: IfNotPresent
          name: python-demo
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app
            name: app-volume
          workingDir: /app
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: python-demo-code
          name: app-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-05-19T08:22:29Z"
      lastUpdateTime: "2025-05-19T08:22:39Z"
      message: ReplicaSet "python-demo-6d7dcd759f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-25T00:59:05Z"
      lastUpdateTime: "2025-05-25T00:59:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T07:38:38Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-applicationset-controller
      pod-template-hash: 67c79fccd
    name: argocd-applicationset-controller-67c79fccd
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-applicationset-controller
      uid: 8d4f36aa-5994-4c78-92d7-0806e0d3988a
    resourceVersion: "15553585"
    uid: 13fe87ca-6cac-4cd9-b125-2e32d0c95823
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-applicationset-controller
        pod-template-hash: 67c79fccd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-applicationset-controller
          pod-template-hash: 67c79fccd
      spec:
        containers:
        - args:
          - /usr/local/bin/argocd-applicationset-controller
          env:
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.annotations
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.global.preserved.labels
                name: argocd-cmd-params-cm
                optional: true
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.leader.election
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_POLICY
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.policy.override
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.debug
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.dryrun
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.progressive.syncs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.tokenref.strict.mode
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.concurrent.reconciliations.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.requeue.after
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          name: argocd-applicationset-controller
          ports:
          - containerPort: 7000
            name: webhook
            protocol: TCP
          - containerPort: 8080
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /tmp
            name: tmp
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-applicationset-controller
        serviceAccountName: argocd-applicationset-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - emptyDir: {}
          name: tmp
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T07:38:39Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-dex-server
      pod-template-hash: 76686f75bd
    name: argocd-dex-server-76686f75bd
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-dex-server
      uid: ea1f5b4b-76c4-4a6e-9b7f-7cf6d133885f
    resourceVersion: "15553789"
    uid: a4874a28-6ef8-4c6f-b980-e41f8c05a86d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-dex-server
        pod-template-hash: 76686f75bd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-dex-server
          pod-template-hash: 76686f75bd
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /shared/argocd-dex
          - rundex
          env:
          - name: ARGOCD_DEX_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: dexserver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEX_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: dexserver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          image: ghcr.io/dexidp/dex:v2.41.1
          imagePullPolicy: Always
          name: dex
          ports:
          - containerPort: 5556
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          - containerPort: 5558
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
          - mountPath: /tls
            name: argocd-dex-server-tls
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /shared
            name: static-files
          - mountPath: /tmp
            name: dexconfig
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-dex-server
        serviceAccountName: argocd-dex-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: static-files
        - emptyDir: {}
          name: dexconfig
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T07:38:39Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-notifications-controller
      pod-template-hash: 588d87b767
    name: argocd-notifications-controller-588d87b767
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-notifications-controller
      uid: 3f63b198-2679-48b5-a424-fe275da372ce
    resourceVersion: "15553628"
    uid: fb19f93f-2dd9-448d-8bb0-ade385fce2c3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-notifications-controller
        pod-template-hash: 588d87b767
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-notifications-controller
          pod-template-hash: 588d87b767
      spec:
        containers:
        - args:
          - /usr/local/bin/argocd-notifications
          env:
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.selfservice.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: notificationscontroller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 9001
            timeoutSeconds: 1
          name: argocd-notifications-controller
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          workingDir: /app
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: argocd-notifications-controller
        serviceAccountName: argocd-notifications-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T07:38:40Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-redis
      pod-template-hash: 59c6f8b4b5
    name: argocd-redis-59c6f8b4b5
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-redis
      uid: 585cad80-ca2d-4065-aeec-6ffcd97d1991
    resourceVersion: "15553715"
    uid: 78da815b-ae8a-43d6-ad33-74193085b478
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-redis
        pod-template-hash: 59c6f8b4b5
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-redis
          pod-template-hash: 59c6f8b4b5
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-redis
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - --save
          - ""
          - --appendonly
          - "no"
          - --requirepass $(REDIS_PASSWORD)
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          image: redis:7.2.7-alpine
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - argocd
          - admin
          - redis-initial-password
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: IfNotPresent
          name: secret-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: argocd-redis
        serviceAccountName: argocd-redis
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T07:38:41Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-repo-server
      pod-template-hash: 57db679bf7
    name: argocd-repo-server-57db679bf7
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-repo-server
      uid: 6ef874fd-c257-4894-9d75-d70952d18159
    resourceVersion: "15553818"
    uid: ba9e5d2a-cf18-4c31-a33b-f4dbb48c065c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-repo-server
        pod-template-hash: 57db679bf7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-repo-server
          pod-template-hash: 57db679bf7
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-repo-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - /usr/local/bin/argocd-repo-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          - name: ARGOCD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: reposerver.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: reposerver.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_TLS
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: reposerver.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.repo.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: reposerver.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.max.combined.directory.manifests.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.tar.exclusions
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS
            valueFrom:
              configMapKeyRef:
                key: reposerver.plugin.use.manifest.generate.paths
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS
            valueFrom:
              configMapKeyRef:
                key: reposerver.allow.oob.symlinks
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.tar.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.streamed.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE
            valueFrom:
              configMapKeyRef:
                key: reposerver.disable.helm.manifest.max.extracted.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REVISION_CACHE_LOCK_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.revision.cache.lock.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_MODULES_ENABLED
            valueFrom:
              configMapKeyRef:
                key: reposerver.enable.git.submodule
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.lsremote.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GIT_REQUEST_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: reposerver.git.request.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_GRPC_MAX_SIZE_MB
            valueFrom:
              configMapKeyRef:
                key: reposerver.grpc.max.size
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES
            valueFrom:
              configMapKeyRef:
                key: reposerver.include.hidden.directories
                name: argocd-cmd-params-cm
                optional: true
          - name: HELM_CACHE_HOME
            value: /helm-working-dir
          - name: HELM_CONFIG_HOME
            value: /helm-working-dir
          - name: HELM_DATA_HOME
            value: /helm-working-dir
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: argocd-repo-server
          ports:
          - containerPort: 8081
            protocol: TCP
          - containerPort: 8084
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8084
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/gpg/source
            name: gpg-keys
          - mountPath: /app/config/gpg/keys
            name: gpg-keyring
          - mountPath: /app/config/reposerver/tls
            name: argocd-repo-server-tls
          - mountPath: /tmp
            name: tmp
          - mountPath: /helm-working-dir
            name: helm-working-dir
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/cp
          - -n
          - /usr/local/bin/argocd
          - /var/run/argocd/argocd-cmp-server
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: IfNotPresent
          name: copyutil
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-repo-server
        serviceAccountName: argocd-repo-server
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: helm-working-dir
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - emptyDir: {}
          name: var-files
        - emptyDir: {}
          name: plugins
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T07:38:41Z"
    generation: 1
    labels:
      app.kubernetes.io/name: argocd-server
      pod-template-hash: 67b6bf4f8d
    name: argocd-server-67b6bf4f8d
    namespace: argocd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argocd-server
      uid: 7d995577-51e0-4026-85da-12605ec3a2e0
    resourceVersion: "15553797"
    uid: f76c644f-73eb-4db4-b0ab-be297986cb75
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-server
        pod-template-hash: 67b6bf4f8d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-server
          pod-template-hash: 67b6bf4f8d
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-server
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - /usr/local/bin/argocd-server
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          - name: ARGOCD_SERVER_INSECURE
            valueFrom:
              configMapKeyRef:
                key: server.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_BASEHREF
            valueFrom:
              configMapKeyRef:
                key: server.basehref
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ROOTPATH
            valueFrom:
              configMapKeyRef:
                key: server.rootpath
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: server.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                key: server.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER
            valueFrom:
              configMapKeyRef:
                key: server.dex.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DISABLE_AUTH
            valueFrom:
              configMapKeyRef:
                key: server.disable.auth
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_GZIP
            valueFrom:
              configMapKeyRef:
                key: server.enable.gzip
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_X_FRAME_OPTIONS
            valueFrom:
              configMapKeyRef:
                key: server.x.frame.options
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONTENT_SECURITY_POLICY
            valueFrom:
              configMapKeyRef:
                key: server.content.security.policy
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: server.dex.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MIN_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.minversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_MAX_VERSION
            valueFrom:
              configMapKeyRef:
                key: server.tls.maxversion
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_TLS_CIPHERS
            valueFrom:
              configMapKeyRef:
                key: server.tls.ciphers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.connection.status.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.oidc.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.login.attempts.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_STATIC_ASSETS
            valueFrom:
              configMapKeyRef:
                key: server.staticassets
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.app.state.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: server.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_MAX_COOKIE_NUMBER
            valueFrom:
              configMapKeyRef:
                key: server.http.cookie.maxnumber
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_METRICS_LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: server.metrics.listen.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
            valueFrom:
              configMapKeyRef:
                key: server.enable.proxy.extension
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_MAX
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
            valueFrom:
              configMapKeyRef:
                key: server.k8sclient.retry.base.backoff
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_API_CONTENT_TYPES
            valueFrom:
              configMapKeyRef:
                key: server.api.content.types
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: server.webhook.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.new.git.file.globbing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.scm.root.ca.path
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.allowed.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS
            valueFrom:
              configMapKeyRef:
                key: applicationsetcontroller.enable.scm.providers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_HYDRATOR_ENABLED
            valueFrom:
              configMapKeyRef:
                key: hydrator.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_SYNC_WITH_REPLACE_ALLOWED
            valueFrom:
              configMapKeyRef:
                key: server.sync.replace.allowed
                name: argocd-cmd-params-cm
                optional: true
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz?full=true
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: argocd-server
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8083
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/config/tls
            name: tls-certs
          - mountPath: /app/config/server/tls
            name: argocd-repo-server-tls
          - mountPath: /app/config/dex/tls
            name: argocd-dex-server-tls
          - mountPath: /home/argocd
            name: plugins-home
          - mountPath: /tmp
            name: tmp
          - mountPath: /home/argocd/params
            name: argocd-cmd-params-cm
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-server
        serviceAccountName: argocd-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: plugins-home
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - name: argocd-dex-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-dex-server-tls
        - configMap:
            defaultMode: 420
            items:
            - key: server.profile.enabled
              path: profiler.enabled
            name: argocd-cmd-params-cm
            optional: true
          name: argocd-cmd-params-cm
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/details-v1
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: details
      pod-template-hash: 69c7fccbf
      version: v1
    name: details-v1-69c7fccbf
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: details-v1
      uid: 971b4265-16d2-4ce4-9e7a-13e16520f17e
    resourceVersion: "15553702"
    uid: 492bb0a5-363d-4155-bacd-09e2b7a554a4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: details
        pod-template-hash: 69c7fccbf
        version: v1
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: details
          pod-template-hash: 69c7fccbf
          version: v1
      spec:
        containers:
        - env:
          - name: ENABLE_EXTERNAL_BOOK_SERVICE
            value: "true"
          image: docker.io/istio/examples-bookinfo-details-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: details
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-details
        serviceAccountName: bookinfo-details
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/productpage-v1
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: productpage
      pod-template-hash: 58ddcf596c
      version: v1
    name: productpage-v1-58ddcf596c
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productpage-v1
      uid: b526c44f-1826-4069-8e46-6301743c1671
    resourceVersion: "14284266"
    uid: c419d91d-829f-4232-bb40-6e67cbe7bc16
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: productpage
        pod-template-hash: 58ddcf596c
        version: v1
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: productpage
          pod-template-hash: 58ddcf596c
          version: v1
      spec:
        containers:
        - image: docker.io/istio/examples-bookinfo-productpage-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: productpage
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-productpage
        serviceAccountName: bookinfo-productpage
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/ratings-v1
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: ratings
      pod-template-hash: 6fb7f74478
      version: v1
    name: ratings-v1-6fb7f74478
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ratings-v1
      uid: 9c208f47-52e4-4846-83c2-0cd0a4273498
    resourceVersion: "14284262"
    uid: 2ae84d45-05ed-4c43-bad2-c5b66b003b18
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ratings
        pod-template-hash: 6fb7f74478
        version: v1
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ratings
          pod-template-hash: 6fb7f74478
          version: v1
      spec:
        containers:
        - image: docker.io/istio/examples-bookinfo-ratings-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: ratings
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-ratings
        serviceAccountName: bookinfo-ratings
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/reviews-v1
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: reviews
      pod-template-hash: 79587cf9db
      version: v1
    name: reviews-v1-79587cf9db
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: reviews-v1
      uid: 58a356e2-b4ee-44e3-8451-7dff3c736ae7
    resourceVersion: "15553696"
    uid: 936dad47-2a3e-4d06-84e4-4525370f999e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: reviews
        pod-template-hash: 79587cf9db
        version: v1
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews
          pod-template-hash: 79587cf9db
          version: v1
      spec:
        containers:
        - env:
          - name: LOG_DIR
            value: /tmp/logs
          image: docker.io/istio/examples-bookinfo-reviews-v1:1.16.4
          imagePullPolicy: IfNotPresent
          name: reviews
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /opt/ibm/wlp/output
            name: wlp-output
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-reviews
        serviceAccountName: bookinfo-reviews
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: wlp-output
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/reviews-v2
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: reviews
      pod-template-hash: 5f7b9d899d
      version: v2
    name: reviews-v2-5f7b9d899d
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: reviews-v2
      uid: e67fb95f-8f3a-4f0f-9c30-8a3721f37776
    resourceVersion: "15553709"
    uid: 3db52762-3a4a-46fb-a515-a2fe9d64a9de
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: reviews
        pod-template-hash: 5f7b9d899d
        version: v2
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews
          pod-template-hash: 5f7b9d899d
          version: v2
      spec:
        containers:
        - env:
          - name: LOG_DIR
            value: /tmp/logs
          image: docker.io/istio/examples-bookinfo-reviews-v2:1.16.4
          imagePullPolicy: IfNotPresent
          name: reviews
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /opt/ibm/wlp/output
            name: wlp-output
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-reviews
        serviceAccountName: bookinfo-reviews
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: wlp-output
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      argocd.argoproj.io/tracking-id: bookinfo:apps/Deployment:bookinfo/reviews-v3
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-19T08:25:33Z"
    generation: 1
    labels:
      app: reviews
      pod-template-hash: 698888c6c4
      version: v3
    name: reviews-v3-698888c6c4
    namespace: bookinfo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: reviews-v3
      uid: 7195f755-f7f1-4324-9566-5d07f77be62e
    resourceVersion: "14284307"
    uid: 1e8b4c84-0a12-4884-ad1f-2febb0b4a4e8
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: reviews
        pod-template-hash: 698888c6c4
        version: v3
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews
          pod-template-hash: 698888c6c4
          version: v3
      spec:
        containers:
        - env:
          - name: LOG_DIR
            value: /tmp/logs
          image: docker.io/istio/examples-bookinfo-reviews-v3:1.16.4
          imagePullPolicy: IfNotPresent
          name: reviews
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
          - mountPath: /opt/ibm/wlp/output
            name: wlp-output
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: bookinfo-reviews
        serviceAccountName: bookinfo-reviews
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: wlp-output
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-gateway
      meta.helm.sh/release-namespace: istio-ingress
    creationTimestamp: "2025-05-19T08:26:43Z"
    generation: 1
    labels:
      app: istio-gateway
      app.kubernetes.io/instance: istio-gateway
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istio-gateway
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.26.0
      helm.sh/chart: gateway-1.26.0
      istio: app-istio-gateway
      istio.io/dataplane-mode: none
      pod-template-hash: b6fdc6d4d
      sidecar.istio.io/inject: "true"
    name: istio-gateway-b6fdc6d4d
    namespace: istio-ingress
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istio-gateway
      uid: 9ad88a80-6a15-4a6a-af72-47f6a8b13204
    resourceVersion: "8057"
    uid: 95032ae7-fac7-4929-9d66-d32765e39aa0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: istio-gateway
        istio: app-istio-gateway
        pod-template-hash: b6fdc6d4d
    template:
      metadata:
        annotations:
          inject.istio.io/templates: gateway
          prometheus.io/path: /stats/prometheus
          prometheus.io/port: "15020"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "true"
        creationTimestamp: null
        labels:
          app: istio-gateway
          app.kubernetes.io/instance: istio-gateway
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: istio-gateway
          app.kubernetes.io/part-of: istio
          app.kubernetes.io/version: 1.26.0
          helm.sh/chart: gateway-1.26.0
          istio: app-istio-gateway
          istio.io/dataplane-mode: none
          pod-template-hash: b6fdc6d4d
          sidecar.istio.io/inject: "true"
      spec:
        containers:
        - image: auto
          imagePullPolicy: Always
          name: istio-proxy
          ports:
          - containerPort: 15090
            name: http-envoy-prom
            protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          sysctls:
          - name: net.ipv4.ip_unprivileged_port_start
            value: "0"
        serviceAccount: istio-gateway
        serviceAccountName: istio-gateway
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:31Z"
    generation: 1
    labels:
      app: grafana
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/name: grafana
      pod-template-hash: 6b77d45549
      sidecar.istio.io/inject: "false"
    name: grafana-6b77d45549
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 76147fc1-2dd2-4631-a93f-d45f2749d385
    resourceVersion: "1477009"
    uid: 46191d6e-cb74-4b2a-a477-be4d10087167
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: istio-monitoring-demo
        app.kubernetes.io/name: grafana
        pod-template-hash: 6b77d45549
    template:
      metadata:
        annotations:
          checksum/config: 9c04413b18ae878556af30dbdaa3f703d0e59494ca868b634e89ce125cc64210
          checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
          kubectl.kubernetes.io/default-container: grafana
        creationTimestamp: null
        labels:
          app: grafana
          app.kubernetes.io/instance: istio-monitoring-demo
          app.kubernetes.io/name: grafana
          pod-template-hash: 6b77d45549
          sidecar.istio.io/inject: "false"
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Admin
          - name: GF_AUTH_BASIC_ENABLED
            value: "false"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: admin
          - name: GF_SECURITY_ADMIN_USER
            value: admin
          image: docker.io/grafana/grafana:10.0.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
          - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
            name: config
            subPath: datasources.yaml
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:30Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: istio-monitoring-demo
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.10.0
      helm.sh/chart: kube-state-metrics-5.14.0
      pod-template-hash: 6cfd96d66f
      sidecar.istio.io/inject: "false"
    name: istio-monitoring-demo-kube-state-metrics-6cfd96d66f
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istio-monitoring-demo-kube-state-metrics
      uid: 91b4f5c2-0628-4cae-9dc0-051d21fe6b98
    resourceVersion: "1476953"
    uid: a8108d87-0af0-48c4-8686-f622ab328a20
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: istio-monitoring-demo
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 6cfd96d66f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: istio-monitoring-demo
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.10.0
          helm.sh/chart: kube-state-metrics-5.14.0
          pod-template-hash: 6cfd96d66f
          sidecar.istio.io/inject: "false"
      spec:
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: istio-monitoring-demo-kube-state-metrics
        serviceAccountName: istio-monitoring-demo-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-istiod
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T12:11:45Z"
    generation: 1
    labels:
      app: istiod
      app.kubernetes.io/instance: istio-istiod
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istiod
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.25.1
      helm.sh/chart: istiod-1.25.1
      install.operator.istio.io/owning-resource: unknown
      istio: pilot
      istio.io/dataplane-mode: none
      istio.io/rev: default
      operator.istio.io/component: Pilot
      pod-template-hash: d77496c98
      sidecar.istio.io/inject: "false"
    name: istiod-d77496c98
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: istiod
      uid: 93a39f64-8aac-4a1f-a448-2ec0cd7fe312
    resourceVersion: "1461964"
    uid: f4f5bcb8-786d-4d1d-a04c-784e09709c79
  spec:
    replicas: 1
    selector:
      matchLabels:
        istio: pilot
        pod-template-hash: d77496c98
    template:
      metadata:
        annotations:
          prometheus.io/port: "15014"
          prometheus.io/scrape: "true"
          sidecar.istio.io/inject: "false"
        creationTimestamp: null
        labels:
          app: istiod
          app.kubernetes.io/instance: istio-istiod
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: istiod
          app.kubernetes.io/part-of: istio
          app.kubernetes.io/version: 1.25.1
          helm.sh/chart: istiod-1.25.1
          install.operator.istio.io/owning-resource: unknown
          istio: pilot
          istio.io/dataplane-mode: none
          istio.io/rev: default
          operator.istio.io/component: Pilot
          pod-template-hash: d77496c98
          sidecar.istio.io/inject: "false"
      spec:
        containers:
        - args:
          - discovery
          - --monitoringAddr=:15014
          - --log_output_level=default:info
          - --domain
          - cluster.local
          - --keepaliveMaxServerConnectionAge
          - 30m
          env:
          - name: REVISION
            value: default
          - name: PILOT_CERT_PROVIDER
            value: istiod
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: KUBECONFIG
            value: /var/run/secrets/remote/config
          - name: CA_TRUSTED_NODE_ACCOUNTS
            value: istio-system/ztunnel
          - name: PILOT_TRACE_SAMPLING
            value: "1"
          - name: PILOT_ENABLE_ANALYSIS
            value: "false"
          - name: CLUSTER_ID
            value: cluster-1
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.memory
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "1"
                resource: limits.cpu
          - name: PLATFORM
          image: docker.io/istio/pilot:1.25.2
          imagePullPolicy: IfNotPresent
          name: discovery
          ports:
          - containerPort: 8080
            name: http-debug
            protocol: TCP
          - containerPort: 15010
            name: grpc-xds
            protocol: TCP
          - containerPort: 15012
            name: tls-xds
            protocol: TCP
          - containerPort: 15017
            name: https-webhooks
            protocol: TCP
          - containerPort: 15014
            name: http-monitoring
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: istio-token
            readOnly: true
          - mountPath: /var/run/secrets/istio-dns
            name: local-certs
          - mountPath: /etc/cacerts
            name: cacerts
            readOnly: true
          - mountPath: /var/run/secrets/remote
            name: istio-kubeconfig
            readOnly: true
          - mountPath: /var/run/secrets/istiod/tls
            name: istio-csr-dns-cert
            readOnly: true
          - mountPath: /var/run/secrets/istiod/ca
            name: istio-csr-ca-configmap
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: istiod
        serviceAccountName: istiod
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: cni.istio.io/not-ready
          operator: Exists
        volumes:
        - emptyDir:
            medium: Memory
          name: local-certs
        - name: istio-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: istio-ca
                expirationSeconds: 43200
                path: istio-token
        - name: cacerts
          secret:
            defaultMode: 420
            optional: true
            secretName: cacerts
        - name: istio-kubeconfig
          secret:
            defaultMode: 420
            optional: true
            secretName: istio-kubeconfig
        - name: istio-csr-dns-cert
          secret:
            defaultMode: 420
            optional: true
            secretName: istiod-tls
        - configMap:
            defaultMode: 420
            name: istio-ca-root-cert
            optional: true
          name: istio-csr-ca-configmap
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: istio-monitoring-demo
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T13:36:30Z"
    generation: 1
    labels:
      app: prometheus
      chart: prometheus-19.6.1
      component: server
      heritage: Helm
      pod-template-hash: 7c5576b7b
      release: istio-monitoring-demo
      sidecar.istio.io/inject: "false"
    name: prometheus-7c5576b7b
    namespace: istio-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus
      uid: 589a8b99-25f0-4fb2-980d-d2450f789c45
    resourceVersion: "1476942"
    uid: 9d13e3d7-61fd-481d-b5b6-ed4c94b00c15
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: prometheus
        component: server
        pod-template-hash: 7c5576b7b
        release: istio-monitoring-demo
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: prometheus
          chart: prometheus-19.6.1
          component: server
          heritage: Helm
          pod-template-hash: 7c5576b7b
          release: istio-monitoring-demo
          sidecar.istio.io/inject: "false"
      spec:
        containers:
        - args:
          - --volume-dir=/etc/config
          - --webhook-url=http://127.0.0.1:9090/-/reload
          image: jimmidyson/configmap-reload:v0.8.0
          imagePullPolicy: IfNotPresent
          name: prometheus-server-configmap-reload
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: prom/prometheus:v2.41.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus
        serviceAccountName: prometheus
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus
          name: config-volume
        - emptyDir: {}
          name: storage-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 3
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: "6678547544"
      rsName: ama-metrics
    name: ama-metrics-6678547544
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics
      uid: d648a732-9022-4bdf-b330-2ab290edc3bc
    resourceVersion: "12743483"
    uid: d1cc095a-7d38-475c-a8c4-0248f142057a
  spec:
    replicas: 0
    selector:
      matchLabels:
        pod-template-hash: "6678547544"
        rsName: ama-metrics
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: "6678547544"
          rsName: ama-metrics
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: AZMON_OPERATOR_ENABLED
            value: "true"
          - name: AZMON_COLLECTOR_HPA_ENABLED
            value: "true"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: v2.15.0-4
          - name: OPERATOR_TARGETS_TA_IMG_VERSION
            value: 6.16.0-main-04-15-2025-d78050c6-targetallocator
          - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
            value: 6.16.0-main-04-15-2025-d78050c6-cfg
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.16.0-main-04-15-2025-d78050c6
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.16.0-main-04-15-2025-d78050c6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-collector
          resources:
            limits:
              cpu: "7"
              memory: 14Gi
            requests:
              cpu: 150m
              memory: 500Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
          - mountPath: /anchors/mariner
            name: anchors-mariner
            readOnly: true
          - mountPath: /anchors/ubuntu
            name: anchors-ubuntu
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250423.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              rsName: ama-metrics
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              rsName: ama-metrics
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - hostPath:
            path: /etc/pki/ca-trust/source/anchors/
            type: DirectoryOrCreate
          name: anchors-mariner
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
          name: anchors-ubuntu
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-06-16T00:17:00Z"
    generation: 2
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 66bf7c6c5b
      rsName: ama-metrics
    name: ama-metrics-66bf7c6c5b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics
      uid: d648a732-9022-4bdf-b330-2ab290edc3bc
    resourceVersion: "15553692"
    uid: fc0698c7-6853-4d88-9206-3e961a646de3
  spec:
    replicas: 2
    selector:
      matchLabels:
        pod-template-hash: 66bf7c6c5b
        rsName: ama-metrics
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 66bf7c6c5b
          rsName: ama-metrics
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: AZMON_OPERATOR_ENABLED
            value: "true"
          - name: AZMON_COLLECTOR_HPA_ENABLED
            value: "true"
          - name: customEnvironment
            value: azurepubliccloud
          - name: OMS_TLD
            value: opinsights.azure.com
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_CPU_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1m
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT
            valueFrom:
              resourceFieldRef:
                containerName: prometheus-collector
                divisor: 1Mi
                resource: limits.memory
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: KUBE_STATE_VERSION
            value: v2.15.0-4
          - name: OPERATOR_TARGETS_TA_IMG_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-targetallocator
          - name: OPERATOR_TARGETS_CFG_READER_IMG_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-cfg
          - name: NODE_EXPORTER_VERSION
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b
          - name: MODE
            value: advanced
          - name: WINMODE
            value: advanced
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: prometheus-collector
          resources:
            limits:
              cpu: "7"
              memory: 14Gi
            requests:
              cpu: 150m
              memory: 500Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /var/log/containers
            name: host-log-containers
            readOnly: true
          - mountPath: /var/log/pods
            name: host-log-pods
            readOnly: true
          - mountPath: /anchors/mariner
            name: anchors-mariner
            readOnly: true
          - mountPath: /anchors/ubuntu
            name: anchors-ubuntu
            readOnly: true
        - args:
          - --secret-namespace=kube-system
          - --secret-name=aad-msi-auth-token
          - --token-server-listening-port=7777
          - --health-server-listening-port=9999
          - --restart-pod-waiting-minutes-on-broken-connection=240
          command:
          - /addon-token-adapter
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/aks/msi/addon-token-adapter:master.250604.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9999
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
          name: addon-token-adapter
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 30Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              rsName: ama-metrics
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              rsName: ama-metrics
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - hostPath:
            path: /var/log/containers
            type: ""
          name: host-log-containers
        - hostPath:
            path: /var/log/pods
            type: ""
          name: host-log-pods
        - hostPath:
            path: /etc/pki/ca-trust/source/anchors/
            type: DirectoryOrCreate
          name: anchors-mariner
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - hostPath:
            path: /usr/local/share/ca-certificates/
            type: DirectoryOrCreate
          name: anchors-ubuntu
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 1
    labels:
      app.kubernetes.io/component: ama-metrics
      app.kubernetes.io/name: ama-metrics-ksm
      app.kubernetes.io/part-of: ama-metrics-ksm
      app.kubernetes.io/version: 2.15.0-4
      helm.sh/chart: azure-monitor-metrics-addon-0.1.0
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 8fbf76b85
    name: ama-metrics-ksm-8fbf76b85
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics-ksm
      uid: 85d6d900-b84d-4c41-8ac4-b5777b52c186
    resourceVersion: "3082"
    uid: dccde6fb-7031-4249-9e4e-29ee675b10a5
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: ama-metrics-ksm
        pod-template-hash: 8fbf76b85
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: ama-metrics
          app.kubernetes.io/name: ama-metrics-ksm
          app.kubernetes.io/part-of: ama-metrics-ksm
          app.kubernetes.io/version: 2.15.0-4
          helm.sh/chart: azure-monitor-metrics-addon-0.1.0
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 8fbf76b85
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          - --telemetry-port=8081
          env:
          - name: AZMON_COLLECT_ENV
            value: "false"
          image: mcr.microsoft.com/oss/v2/kubernetes/kube-state-metrics:v2.15.0-4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: ama-metrics-ksm
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 5Gi
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsUser: 65534
        serviceAccount: ama-metrics-ksm
        serviceAccountName: ama-metrics-ksm
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    generation: 2
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5655df64b9
      rsName: ama-metrics-operator-targets
    name: ama-metrics-operator-targets-5655df64b9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics-operator-targets
      uid: 5909aa71-83e6-4f5a-8d66-7f53afa48dce
    resourceVersion: "12743409"
    uid: 70dbab22-264a-4548-a3af-fafa8ccaf3d6
  spec:
    replicas: 0
    selector:
      matchLabels:
        kubernetes.azure.com/managedby: aks
        pod-template-hash: 5655df64b9
        rsName: ama-metrics-operator-targets
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5655df64b9
          rsName: ama-metrics-operator-targets
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --enable-prometheus-cr-watcher
          env:
          - name: OTELCOL_NAMESPACE
            value: kube-system
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP
            value: azmonitoring.coreos.com
          - name: AGENT_VERSION
            value: 6.16.0-main-04-15-2025-d78050c6-targetallocator
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.16.0-main-04-15-2025-d78050c6-targetallocator
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health-ta
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: targetallocator
          ports:
          - containerPort: 8081
            name: health-ta
            protocol: TCP
          resources:
            limits:
              cpu: "5"
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ta-config-shared
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            value: kube-system
          - name: CONTAINER_TYPE
            value: ConfigReaderSidecar
          - name: MODE
            value: advanced
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: customEnvironment
            value: azurepubliccloud
          - name: WINMODE
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: AGENT_VERSION
            value: 6.16.0-main-04-15-2025-d78050c6-cfg
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.16.0-main-04-15-2025-d78050c6-cfg
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: config-reader
          ports:
          - containerPort: 8081
            name: health
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 1m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /ta-configuration
            name: ta-config-shared
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - emptyDir: {}
          name: ta-config-shared
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-06-16T00:17:00Z"
    generation: 1
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 85985d89f7
      rsName: ama-metrics-operator-targets
    name: ama-metrics-operator-targets-85985d89f7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-metrics-operator-targets
      uid: 5909aa71-83e6-4f5a-8d66-7f53afa48dce
    resourceVersion: "15553751"
    uid: 2baac704-3f63-4cfb-ad63-393014deaf8b
  spec:
    replicas: 1
    selector:
      matchLabels:
        kubernetes.azure.com/managedby: aks
        pod-template-hash: 85985d89f7
        rsName: ama-metrics-operator-targets
    template:
      metadata:
        annotations:
          agentVersion: 0.0.0.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 85985d89f7
          rsName: ama-metrics-operator-targets
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: azuremonitor/metrics.replica.preferred
                  operator: In
                  values:
                  - "true"
              weight: 50
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
        containers:
        - args:
          - --enable-prometheus-cr-watcher
          env:
          - name: OTELCOL_NAMESPACE
            value: kube-system
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: PROMETHEUS_OPERATOR_V1_CUSTOM_GROUP
            value: azmonitoring.coreos.com
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-targetallocator
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-targetallocator
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health-ta
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: targetallocator
          ports:
          - containerPort: 8081
            name: health-ta
            protocol: TCP
          resources:
            limits:
              cpu: "5"
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ta-config-shared
        - env:
          - name: CLUSTER
            value: /subscriptions/9a42948e-6087-47d2-bdb8-b530d558db22/resourceGroups/ajay-lab/providers/Microsoft.ContainerService/managedClusters/ajay-istio
          - name: AKSREGION
            value: eastus
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            value: kube-system
          - name: CONTAINER_TYPE
            value: ConfigReaderSidecar
          - name: MODE
            value: advanced
          - name: MAC
            value: "true"
          - name: AZMON_COLLECT_ENV
            value: "false"
          - name: KUBE_STATE_NAME
            value: ama-metrics-ksm
          - name: NODE_EXPORTER_NAME
          - name: NODE_EXPORTER_TARGETPORT
            value: "19100"
          - name: customEnvironment
            value: azurepubliccloud
          - name: WINMODE
          - name: MINIMAL_INGESTION_PROFILE
            value: "true"
          - name: AGENT_VERSION
            value: 6.17.0-main-05-29-2025-1a3ab39b-cfg
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.17.0-main-05-29-2025-1a3ab39b-cfg
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          name: config-reader
          ports:
          - containerPort: 8081
            name: health
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 1m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/prometheus/certs
            name: ama-metrics-tls-secret-volume
            readOnly: true
          - mountPath: /etc/config/settings/prometheus
            name: prometheus-config-vol
            readOnly: true
          - mountPath: /ta-configuration
            name: ta-config-shared
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-metrics-serviceaccount
        serviceAccountName: ama-metrics-serviceaccount
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: ama-metrics-settings-configmap
            optional: true
          name: settings-vol-config
        - configMap:
            defaultMode: 420
            name: ama-metrics-prometheus-config
            optional: true
          name: prometheus-config-vol
        - name: ama-metrics-tls-secret-volume
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-metrics-mtls-secret
        - emptyDir: {}
          name: ta-config-shared
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-workload-identity
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:07:41Z"
    generation: 1
    labels:
      azure-workload-identity.io/system: "true"
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7f68bf8b86
    name: azure-wi-webhook-controller-manager-7f68bf8b86
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: azure-wi-webhook-controller-manager
      uid: 01fd8ba4-2bba-4947-8de1-90a328baf5d5
    resourceVersion: "2611750"
    uid: 56799691-db5c-49a4-86e5-0e2d40fcb83c
  spec:
    replicas: 2
    selector:
      matchLabels:
        azure-workload-identity.io/system: "true"
        kubernetes.azure.com/managedby: aks
        pod-template-hash: 7f68bf8b86
    template:
      metadata:
        creationTimestamp: null
        labels:
          azure-workload-identity.io/system: "true"
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 7f68bf8b86
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - -log-level=info
          - -disable-cert-rotation=true
          - -webhook-cert-dir=/certs
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AZURE_ENVIRONMENT
            value: AZUREPUBLICCLOUD
          - name: AZURE_TENANT_ID
            value: 1076231c-4971-42f2-8c33-aa8680e81ea8
          image: mcr.microsoft.com/oss/azure/workload-identity/webhook:v1.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: cert
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-wi-webhook-admin
        serviceAccountName: azure-wi-webhook-admin
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: azure-wi-webhook-server-cert
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 57d886c994
      version: v20
    name: coredns-57d886c994
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: c7a9b54e-a2a5-46c7-812c-794c90f109bd
    resourceVersion: "2611690"
    uid: ffc004ca-d428-4c16-91ba-83c326e529dd
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 57d886c994
        version: v20
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          pod-template-hash: 57d886c994
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-19T08:05:31Z"
    generation: 1
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 55bcd876cc
    name: coredns-autoscaler-55bcd876cc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns-autoscaler
      uid: af291fe6-6109-4199-8801-5858b6446932
    resourceVersion: "2611580"
    uid: 66ea956b-98f8-449f-93b4-bd1b9ebddad6
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
        pod-template-hash: 55bcd876cc
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 55bcd876cc
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: aks-managed-image-cleaner
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:07:31Z"
    generation: 1
    labels:
      app.kubernetes.io/name: image-cleaner
      control-plane: controller-manager
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 8694d54d99
    name: eraser-controller-manager-8694d54d99
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: eraser-controller-manager
      uid: 55cb0ea1-a01a-4b30-b963-69504568daa1
    resourceVersion: "1776"
    uid: e3f2913a-726d-43f9-9ec8-e9ec829eb61a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/name: image-cleaner
        control-plane: controller-manager
        pod-template-hash: 8694d54d99
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: image-cleaner
          control-plane: controller-manager
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 8694d54d99
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --config=/config/controller_manager_config.yaml
          command:
          - /manager
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: OTEL_SERVICE_NAME
            value: eraser-manager
          image: mcr.microsoft.com/oss/eraser/eraser-manager:v1.3.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "2"
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /config
            name: manager-config
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: eraser-controller-manager
        serviceAccountName: eraser-controller-manager
        terminationGracePeriodSeconds: 10
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: eraser-manager-config
          name: manager-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-05-19T08:56:07Z"
    generation: 5
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 546d867c6
    name: konnectivity-agent-546d867c6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: 058e577c-ddac-4071-a964-514fb170b4fd
    resourceVersion: "2609582"
    uid: 225e46b1-8bad-478e-8134-f8d58528bf43
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: 546d867c6
    template:
      metadata:
        annotations:
          checksum/client-cert: 16e4626567f8243556fbad47c044b5ca0bb8f73d972de033dbdb9aa11f96cd8f
          checksum/service-account-key: 5afa97a989c2287a2923afec333d04949a99969ca7d03dce773349e1210088dc
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 546d867c6
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    observedGeneration: 5
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 4
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5ddc78fdf4
    name: konnectivity-agent-5ddc78fdf4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: 058e577c-ddac-4071-a964-514fb170b4fd
    resourceVersion: "17450"
    uid: a38bf0fa-5597-4f47-8c1e-ed08f1ffe83e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: 5ddc78fdf4
    template:
      metadata:
        annotations:
          checksum/client-cert: 16e4626567f8243556fbad47c044b5ca0bb8f73d972de033dbdb9aa11f96cd8f
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5ddc78fdf4
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-05-25T00:53:57Z"
    generation: 3
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7ffd9d8654
    name: konnectivity-agent-7ffd9d8654
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: 058e577c-ddac-4071-a964-514fb170b4fd
    resourceVersion: "2611494"
    uid: 2fe29be1-496c-4303-844b-14b3dbe7d591
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: 7ffd9d8654
    template:
      metadata:
        annotations:
          checksum/client-cert: a0bb96253fccb141cf0164336fabce09841592ac858f0bb4c2c0dd14a04fce5f
          checksum/service-account-key: 5afa97a989c2287a2923afec333d04949a99969ca7d03dce773349e1210088dc
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 7ffd9d8654
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=ajay-istio-dns-c5iha437.hcp.eastus.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 1
    labels:
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 679b77b4f
    name: konnectivity-agent-autoscaler-679b77b4f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 0a754b7c-802a-42de-b790-3f390090ca00
    resourceVersion: "2611583"
    uid: 298db080-28d6-4790-a63d-87c0cf387324
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: konnectivity-agent-autoscaler
        pod-template-hash: 679b77b4f
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: konnectivity-agent-autoscaler
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 679b77b4f
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 350m
              memory: 512M
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent-autoscaler
        serviceAccountName: konnectivity-agent-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-05-19T08:06:45Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6d968d6d47
    name: metrics-server-6d968d6d47
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 85a04362-b2b7-4a72-8a27-35010af5d6e7
    resourceVersion: "2612573"
    uid: 41ffc5ef-03e7-4023-9473-3406e3f2ec08
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 6d968d6d47
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 6d968d6d47
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 151m
              memory: 108Mi
            requests:
              cpu: 151m
              memory: 108Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-19T08:05:32Z"
    generation: 3
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7d48979d75
    name: metrics-server-7d48979d75
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 85a04362-b2b7-4a72-8a27-35010af5d6e7
    resourceVersion: "1912"
    uid: 783f9897-0642-4c3e-bc6d-a54bf01fb0d6
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 7d48979d75
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 7d48979d75
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-05-19T08:22:29Z"
    generation: 1
    labels:
      app: python-demo
      pod-template-hash: 6d7dcd759f
    name: python-demo-6d7dcd759f
    namespace: webservice
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: python-demo
      uid: a08468fb-e1d6-492c-a88e-be89e9a07c26
    resourceVersion: "2611739"
    uid: 7c1897ef-1ca3-4d34-836f-44bf22786655
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: python-demo
        pod-template-hash: 6d7dcd759f
    template:
      metadata:
        annotations:
          proxy.istio.io/config: '{"proxyStatsMatcher": {"inclusionRegexps": [".*adaptive_concurrency.*"]}}'
        creationTimestamp: null
        labels:
          app: python-demo
          pod-template-hash: 6d7dcd759f
      spec:
        containers:
        - args:
          - pip install flask requests && python -u app.py
          command:
          - sh
          - -c
          image: python:3.10-slim
          imagePullPolicy: IfNotPresent
          name: python-demo
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app
            name: app-volume
          workingDir: /app
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: python-demo-code
          name: app-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"application-controller","app.kubernetes.io/name":"argocd-application-controller","app.kubernetes.io/part-of":"argocd"},"name":"argocd-application-controller","namespace":"argocd"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"serviceName":"argocd-application-controller","template":{"metadata":{"labels":{"app.kubernetes.io/name":"argocd-application-controller"}},"spec":{"affinity":{"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/name":"argocd-application-controller"}},"topologyKey":"kubernetes.io/hostname"},"weight":100},{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/part-of":"argocd"}},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["/usr/local/bin/argocd-application-controller"],"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"auth","name":"argocd-redis"}}},{"name":"ARGOCD_CONTROLLER_REPLICAS","value":"1"},{"name":"ARGOCD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"timeout.reconciliation","name":"argocd-cm","optional":true}}},{"name":"ARGOCD_HARD_RECONCILIATION_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"timeout.hard.reconciliation","name":"argocd-cm","optional":true}}},{"name":"ARGOCD_RECONCILIATION_JITTER","valueFrom":{"configMapKeyRef":{"key":"timeout.reconciliation.jitter","name":"argocd-cm","optional":true}}},{"name":"ARGOCD_REPO_ERROR_GRACE_PERIOD_SECONDS","valueFrom":{"configMapKeyRef":{"key":"controller.repo.error.grace.period.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER","valueFrom":{"configMapKeyRef":{"key":"repo.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"key":"controller.repo.server.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS","valueFrom":{"configMapKeyRef":{"key":"controller.status.processors","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS","valueFrom":{"configMapKeyRef":{"key":"controller.operation.processors","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT","valueFrom":{"configMapKeyRef":{"key":"controller.log.format","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL","valueFrom":{"configMapKeyRef":{"key":"controller.log.level","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_LOG_FORMAT_TIMESTAMP","valueFrom":{"configMapKeyRef":{"key":"log.format.timestamp","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"controller.metrics.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"key":"controller.self.heal.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_TIMEOUT_SECONDS","valueFrom":{"configMapKeyRef":{"key":"controller.self.heal.backoff.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_FACTOR","valueFrom":{"configMapKeyRef":{"key":"controller.self.heal.backoff.factor","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_CAP_SECONDS","valueFrom":{"configMapKeyRef":{"key":"controller.self.heal.backoff.cap.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_COOLDOWN_SECONDS","valueFrom":{"configMapKeyRef":{"key":"controller.self.heal.backoff.cooldown.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SYNC_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"controller.sync.timeout.seconds","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT","valueFrom":{"configMapKeyRef":{"key":"controller.repo.server.plaintext","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS","valueFrom":{"configMapKeyRef":{"key":"controller.repo.server.strict.tls","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH","valueFrom":{"configMapKeyRef":{"key":"controller.resource.health.persist","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APP_STATE_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"controller.app.state.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_SERVER","valueFrom":{"configMapKeyRef":{"key":"redis.server","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDIS_COMPRESSION","valueFrom":{"configMapKeyRef":{"key":"redis.compression","name":"argocd-cmd-params-cm","optional":true}}},{"name":"REDISDB","valueFrom":{"configMapKeyRef":{"key":"redis.db","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_DEFAULT_CACHE_EXPIRATION","valueFrom":{"configMapKeyRef":{"key":"controller.default.cache.expiration","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"otlp.address","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_OTLP_INSECURE","valueFrom":{"configMapKeyRef":{"key":"otlp.insecure","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_OTLP_HEADERS","valueFrom":{"configMapKeyRef":{"key":"otlp.headers","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_OTLP_ATTRS","valueFrom":{"configMapKeyRef":{"key":"otlp.attrs","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_NAMESPACES","valueFrom":{"configMapKeyRef":{"key":"application.namespaces","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_CONTROLLER_SHARDING_ALGORITHM","valueFrom":{"configMapKeyRef":{"key":"controller.sharding.algorithm","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT","valueFrom":{"configMapKeyRef":{"key":"controller.kubectl.parallelism.limit","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_K8SCLIENT_RETRY_MAX","valueFrom":{"configMapKeyRef":{"key":"controller.k8sclient.retry.max","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF","valueFrom":{"configMapKeyRef":{"key":"controller.k8sclient.retry.base.backoff","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_APPLICATION_CONTROLLER_SERVER_SIDE_DIFF","valueFrom":{"configMapKeyRef":{"key":"controller.diff.server.side","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_IGNORE_NORMALIZER_JQ_TIMEOUT","valueFrom":{"configMapKeyRef":{"key":"controller.ignore.normalizer.jq.timeout","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_HYDRATOR_ENABLED","valueFrom":{"configMapKeyRef":{"key":"hydrator.enabled","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_CLUSTER_CACHE_BATCH_EVENTS_PROCESSING","valueFrom":{"configMapKeyRef":{"key":"controller.cluster.cache.batch.events.processing","name":"argocd-cmd-params-cm","optional":true}}},{"name":"ARGOCD_CLUSTER_CACHE_EVENTS_PROCESSING_INTERVAL","valueFrom":{"configMapKeyRef":{"key":"controller.cluster.cache.events.processing.interval","name":"argocd-cmd-params-cm","optional":true}}},{"name":"KUBECACHEDIR","value":"/tmp/kubecache"}],"image":"quay.io/argoproj/argocd:v3.0.6","imagePullPolicy":"Always","name":"argocd-application-controller","ports":[{"containerPort":8082}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8082},"initialDelaySeconds":5,"periodSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/app/config/controller/tls","name":"argocd-repo-server-tls"},{"mountPath":"/home/argocd","name":"argocd-home"},{"mountPath":"/home/argocd/params","name":"argocd-cmd-params-cm"},{"mountPath":"/tmp","name":"argocd-application-controller-tmp"}],"workingDir":"/home/argocd"}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"argocd-application-controller","volumes":[{"emptyDir":{},"name":"argocd-home"},{"emptyDir":{},"name":"argocd-application-controller-tmp"},{"name":"argocd-repo-server-tls","secret":{"items":[{"key":"tls.crt","path":"tls.crt"},{"key":"tls.key","path":"tls.key"},{"key":"ca.crt","path":"ca.crt"}],"optional":true,"secretName":"argocd-repo-server-tls"}},{"configMap":{"items":[{"key":"controller.profile.enabled","path":"profiler.enabled"}],"name":"argocd-cmd-params-cm","optional":true},"name":"argocd-cmd-params-cm"}]}}}}
    creationTimestamp: "2025-06-19T07:38:42Z"
    generation: 1
    labels:
      app.kubernetes.io/component: application-controller
      app.kubernetes.io/name: argocd-application-controller
      app.kubernetes.io/part-of: argocd
    name: argocd-application-controller
    namespace: argocd
    resourceVersion: "15553836"
    uid: dd79a822-8a3e-4067-9386-5ceb34378300
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: argocd-application-controller
    serviceName: argocd-application-controller
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: argocd-application-controller
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: argocd-application-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/part-of: argocd
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - /usr/local/bin/argocd-application-controller
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: auth
                name: argocd-redis
          - name: ARGOCD_CONTROLLER_REPLICAS
            value: "1"
          - name: ARGOCD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_HARD_RECONCILIATION_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: timeout.hard.reconciliation
                name: argocd-cm
                optional: true
          - name: ARGOCD_RECONCILIATION_JITTER
            valueFrom:
              configMapKeyRef:
                key: timeout.reconciliation.jitter
                name: argocd-cm
                optional: true
          - name: ARGOCD_REPO_ERROR_GRACE_PERIOD_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.repo.error.grace.period.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER
            valueFrom:
              configMapKeyRef:
                key: repo.server
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.repo.server.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS
            valueFrom:
              configMapKeyRef:
                key: controller.status.processors
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS
            valueFrom:
              configMapKeyRef:
                key: controller.operation.processors
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                key: controller.log.format
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                key: controller.log.level
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_LOG_FORMAT_TIMESTAMP
            valueFrom:
              configMapKeyRef:
                key: log.format.timestamp
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: controller.metrics.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_TIMEOUT_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.backoff.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_FACTOR
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.backoff.factor
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_CAP_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.backoff.cap.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_COOLDOWN_SECONDS
            valueFrom:
              configMapKeyRef:
                key: controller.self.heal.backoff.cooldown.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SYNC_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: controller.sync.timeout.seconds
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
            valueFrom:
              configMapKeyRef:
                key: controller.repo.server.plaintext
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS
            valueFrom:
              configMapKeyRef:
                key: controller.repo.server.strict.tls
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH
            valueFrom:
              configMapKeyRef:
                key: controller.resource.health.persist
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: controller.app.state.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_SERVER
            valueFrom:
              configMapKeyRef:
                key: redis.server
                name: argocd-cmd-params-cm
                optional: true
          - name: REDIS_COMPRESSION
            valueFrom:
              configMapKeyRef:
                key: redis.compression
                name: argocd-cmd-params-cm
                optional: true
          - name: REDISDB
            valueFrom:
              configMapKeyRef:
                key: redis.db
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
            valueFrom:
              configMapKeyRef:
                key: controller.default.cache.expiration
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS
            valueFrom:
              configMapKeyRef:
                key: otlp.address
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_INSECURE
            valueFrom:
              configMapKeyRef:
                key: otlp.insecure
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_HEADERS
            valueFrom:
              configMapKeyRef:
                key: otlp.headers
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_OTLP_ATTRS
            valueFrom:
              configMapKeyRef:
                key: otlp.attrs
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_NAMESPACES
            valueFrom:
              configMapKeyRef:
                key: application.namespaces
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_CONTROLLER_SHARDING_ALGORITHM
            valueFrom:
              configMapKeyRef:
                key: controller.sharding.algorithm
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT
            valueFrom:
              configMapKeyRef:
                key: controller.kubectl.parallelism.limit
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_MAX
            valueFrom:
              configMapKeyRef:
                key: controller.k8sclient.retry.max
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF
            valueFrom:
              configMapKeyRef:
                key: controller.k8sclient.retry.base.backoff
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_APPLICATION_CONTROLLER_SERVER_SIDE_DIFF
            valueFrom:
              configMapKeyRef:
                key: controller.diff.server.side
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_IGNORE_NORMALIZER_JQ_TIMEOUT
            valueFrom:
              configMapKeyRef:
                key: controller.ignore.normalizer.jq.timeout
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_HYDRATOR_ENABLED
            valueFrom:
              configMapKeyRef:
                key: hydrator.enabled
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_CLUSTER_CACHE_BATCH_EVENTS_PROCESSING
            valueFrom:
              configMapKeyRef:
                key: controller.cluster.cache.batch.events.processing
                name: argocd-cmd-params-cm
                optional: true
          - name: ARGOCD_CLUSTER_CACHE_EVENTS_PROCESSING_INTERVAL
            valueFrom:
              configMapKeyRef:
                key: controller.cluster.cache.events.processing.interval
                name: argocd-cmd-params-cm
                optional: true
          - name: KUBECACHEDIR
            value: /tmp/kubecache
          image: quay.io/argoproj/argocd:v3.0.6
          imagePullPolicy: Always
          name: argocd-application-controller
          ports:
          - containerPort: 8082
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config/controller/tls
            name: argocd-repo-server-tls
          - mountPath: /home/argocd
            name: argocd-home
          - mountPath: /home/argocd/params
            name: argocd-cmd-params-cm
          - mountPath: /tmp
            name: argocd-application-controller-tmp
          workingDir: /home/argocd
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: argocd-application-controller
        serviceAccountName: argocd-application-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: argocd-home
        - emptyDir: {}
          name: argocd-application-controller-tmp
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            - key: ca.crt
              path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - configMap:
            defaultMode: 420
            items:
            - key: controller.profile.enabled
              path: profiler.enabled
            name: argocd-cmd-params-cm
            optional: true
          name: argocd-cmd-params-cm
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: argocd-application-controller-65cf48c6b6
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: argocd-application-controller-65cf48c6b6
    updatedReplicas: 1
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      meta.helm.sh/release-name: istio-gateway
      meta.helm.sh/release-namespace: istio-ingress
    creationTimestamp: "2025-05-19T08:26:43Z"
    labels:
      app: istio-gateway
      app.kubernetes.io/instance: istio-gateway
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istio-gateway
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.26.0
      helm.sh/chart: gateway-1.26.0
      istio: app-istio-gateway
      istio.io/dataplane-mode: none
    name: istio-gateway
    namespace: istio-ingress
    resourceVersion: "16111189"
    uid: db15afba-1889-4f05-9f98-c112832da213
  spec:
    maxReplicas: 5
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: istio-gateway
  status:
    conditions:
    - lastTransitionTime: "2025-05-19T08:26:58Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-06-19T05:14:53Z"
      message: the HPA was able to successfully calculate a replica count from cpu
        resource utilization (percentage of request)
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-05-19T08:27:59Z"
      message: the desired count is within the acceptable range
      reason: DesiredWithinRange
      status: "False"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageUtilization: 14
          averageValue: 14m
        name: cpu
      type: Resource
    currentReplicas: 1
    desiredReplicas: 1
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      meta.helm.sh/release-name: istio-istiod
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2025-05-22T12:11:45Z"
    labels:
      app: istiod
      app.kubernetes.io/instance: istio-istiod
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istiod
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 1.25.1
      helm.sh/chart: istiod-1.25.1
      install.operator.istio.io/owning-resource: unknown
      istio.io/rev: default
      operator.istio.io/component: Pilot
      release: istio-istiod
    name: istiod
    namespace: istio-system
    resourceVersion: "16110750"
    uid: 6a1a0013-d9e5-4a3b-b8dc-418f5c48792a
  spec:
    maxReplicas: 5
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: istiod
  status:
    conditions:
    - lastTransitionTime: "2025-05-22T12:12:00Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-06-19T05:14:54Z"
      message: the HPA was able to successfully calculate a replica count from cpu
        resource utilization (percentage of request)
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-06-23T00:20:41Z"
      message: the desired replica count is less than the minimum replica count
      reason: TooFewReplicas
      status: "True"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageUtilization: 0
          averageValue: 2m
        name: cpu
      type: Resource
    currentReplicas: 1
    desiredReplicas: 1
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      meta.helm.sh/release-name: aks-managed-azure-monitor-metrics
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-19T08:11:06Z"
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-metrics-hpa
      helm.toolkit.fluxcd.io/name: azure-monitor-metrics-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 682ae5dfee741100017e5d4a
      kubernetes.azure.com/managedby: aks
    name: ama-metrics-hpa
    namespace: kube-system
    resourceVersion: "16111090"
    uid: 426b3c41-d55a-4b4b-a926-84ed4febb993
  spec:
    behavior:
      scaleDown:
        policies:
        - periodSeconds: 300
          type: Pods
          value: 1
        selectPolicy: Max
        stabilizationWindowSeconds: 300
      scaleUp:
        policies:
        - periodSeconds: 15
          type: Pods
          value: 4
        - periodSeconds: 15
          type: Percent
          value: 100
        selectPolicy: Max
        stabilizationWindowSeconds: 0
    maxReplicas: 24
    metrics:
    - containerResource:
        container: prometheus-collector
        name: memory
        target:
          averageValue: 5Gi
          type: AverageValue
      type: ContainerResource
    minReplicas: 2
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: ama-metrics
  status:
    conditions:
    - lastTransitionTime: "2025-05-19T08:11:21Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-06-22T00:18:17Z"
      message: the HPA was able to successfully calculate a replica count from memory
        resource
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-06-23T00:20:41Z"
      message: the desired replica count is less than the minimum replica count
      reason: TooFewReplicas
      status: "True"
      type: ScalingLimited
    currentMetrics:
    - containerResource:
        container: prometheus-collector
        current:
          averageValue: "243574784"
        name: memory
      type: ContainerResource
    currentReplicas: 2
    desiredReplicas: 2
kind: List
metadata:
  resourceVersion: ""
